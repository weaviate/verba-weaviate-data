{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\nimport FilteredTextBlock from '@site/src/components/Documentation/FilteredTextBlock';\n\nimport PyCode from '!!raw-loader!/_includes/code/rest.objects.py';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python (v4)\">\n  <FilteredTextBlock\n    text={PyCode}\n    startMarker=\"START CheckForAnObject\"\n    endMarker=\"END CheckForAnObject\"\n    language=\"py\"\n  />\n</TabItem>\n\n<TabItem value=\"py3\" label=\"Python (v3)\">\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\"http://localhost:8080\")\n\nexists = client.data_object.exists(\n  \"36ddd591-2dee-4e7e-a3cc-eb86d30a4303\",\n  class_name=\"MyClass\",\n  consistency_level=weaviate.data.replication.ConsistencyLevel.ONE,\n)\n\n# The parameter \"consistency_level\" can be one of ConsistencyLevel.ALL,\n# ConsistencyLevel.QUORUM (default), or ConsistencyLevel.ONE. Determines how many\n# replicas must acknowledge a request before it is considered successful.\n\nprint(exists)\n```\n\n</TabItem>\n\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\nimport weaviate from 'weaviate-ts-client';\n\nconst client = weaviate.client({\n  scheme: 'http',\n  host: 'localhost:8080',\n});\n\nconst response = await client.data\n  .checker()\n  .withClassName('MyClass')\n  .withId('df48b9f6-ba48-470c-bf6a-57657cb07390')\n  // .withConsistencyLevel('QUORUM')  // may not work yet - https://github.com/weaviate/typescript-client/issues/79\n  .do();\nconsole.log(response);\n\n// The parameter passed to `withConsistencyLevel` can be one of:\n// * 'ALL',\n// * 'QUORUM' (default), or\n// * 'ONE'.\n//\n// It determines how many replicas must acknowledge a request\n// before it is considered successful.\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate/data/replication\"  // for consistency levels\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"localhost:8080\",\n    Scheme: \"http\",\n  }\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n\n  exists, err := client.Data().Checker().\n    WithClassName(\"MyClass\").\n    WithID(\"36ddd591-2dee-4e7e-a3cc-eb86d30a0923\").\n    WithConsistencyLevel(replication.ConsistencyLevel.ONE).  // default QUORUM\n    Do(context.Background())\n\n  if err != nil {\n    panic(err)\n  }\n  fmt.Printf(\"%v\", exists)\n}\n\n// The parameter passed to \"WithConsistencyLevel\" can be one of:\n// * replication.ConsistencyLevel.ALL,\n// * replication.ConsistencyLevel.QUORUM, or\n// * replication.ConsistencyLevel.ONE.\n//\n// It determines how many replicas must acknowledge a request\n// before it is considered successful.\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.data.replication.model.ConsistencyLevel;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"http\", \"localhost:8080\");\n    WeaviateClient client = new WeaviateClient(config);\n\n    Result<Boolean> result = client.data().checker()\n      .withClassName(\"MyClass\")\n      .withID(\"36ddd591-2dee-4e7e-a3cc-eb86d30a4303\")\n      .withConsistencyLevel(ConsistencyLevel.ONE)  // default QUORUM\n      .run();\n\n    if (result.hasErrors()) {\n      System.out.println(result.getError());\n      return;\n    }\n    System.out.println(result.getResult());\n  }\n}\n\n// The parameter passed to `withConsistencyLevel` can be one of:\n// * ConsistencyLevel.ALL,\n// * ConsistencyLevel.QUORUM, or\n// * ConsistencyLevel.ONE.\n//\n// It determines how many replicas must acknowledge a request\n// before it is considered successful.\n\n```\n\n</TabItem>\n\n</Tabs>\n", "type": "Code", "name": "Howto Manage-data.read.check.existence", "path": "_includes/code/howto/manage-data.read.check.existence.mdx", "link": "https://weaviate.io/_includes/code/howto/manage-data.read.check.existence", "timestamp": "2024-05-08 15:31:24", "reader": "JSON", "meta": {}, "chunks": []}