{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python\">\n\n```python\n# client.schema.delete_all()  # \u26a0\ufe0f uncomment to start from scratch by deleting ALL data\n\n# ===== Create Article class for the schema =====\narticle_class = {\n    \"class\": \"Article\",\n    \"description\": \"An article from the Simple English Wikipedia data set\",\n    \"vectorizer\": \"text2vec-openai\",\n    \"moduleConfig\": {\n        # Match how OpenAI created the embeddings for the `content` (`text`) field\n        \"text2vec-openai\": {\n            \"model\": \"ada\",\n            \"modelVersion\": \"002\",\n            \"type\": \"text\",\n            \"vectorizeClassName\": False\n        }\n    },\n    \"properties\": [\n        {\n            \"name\": \"title\",\n            \"description\": \"The title of the article\",\n            \"dataType\": [\"text\"],\n            # Don't vectorize the title\n            \"moduleConfig\": {\"text2vec-openai\": {\"skip\": True}}\n        },\n        {\n            \"name\": \"content\",\n            \"description\": \"The content of the article\",\n            \"dataType\": [\"text\"],\n        }\n    ]\n}\n\n# Add the Article class to the schema\nclient.schema.create_class(article_class)\nprint('Created schema');\n```\n\n</TabItem>\n\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\ntry {\n  await client.schema.classDeleter().withClassName('Article').do();\n  console.log('Deleted existing Articles');\n} catch (e) {\n  if (!e.match(/could not find class/))\n    throw e;\n}\n\n// ===== Create Article class for the schema =====\nconst articleClass = {\n  class: 'Article',\n  description: 'An article from the Simple English Wikipedia data set',\n  vectorizer: 'text2vec-openai',\n  moduleConfig: {\n    // Match how OpenAI created the embeddings for the `content` (`text`) field\n    'text2vec-openai': {\n      model: 'ada',\n      modelVersion: '002',\n      type: 'text',\n      vectorizeClassName: false,\n    },\n  },\n  properties: [\n    {\n      name: 'title',\n      description: 'The title of the article',\n      dataType: ['string'],\n      // Don't vectorize the title\n      moduleConfig: { 'text2vec-openai': { skip: true } },\n    },\n    {\n      name: 'content',\n      description: 'The content of the article',\n      dataType: ['text'],\n    },\n  ],\n};\n\n// Add the Article class to the schema\nawait client.schema.classCreator().withClass(articleClass).do();\nconsole.log('Created schema');\n```\n\n</TabItem>\n\n</Tabs>\n", "type": "Code", "name": "Code Tutorials.wikipedia.schema", "path": "_includes/code/tutorials.wikipedia.schema.mdx", "link": "https://weaviate.io/_includes/code/tutorials.wikipedia.schema", "timestamp": "2024-05-08 15:31:59", "reader": "JSON", "meta": {}, "chunks": []}