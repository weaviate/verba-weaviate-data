{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nimport FilteredTextBlock from '@site/src/components/Documentation/FilteredTextBlock';\n\nimport PyCode from '!!raw-loader!/_includes/code/graphql.search-operators.py';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python (v4)\">\n  <FilteredTextBlock\n    text={PyCode}\n    startMarker=\"START GraphQLnearObject\"\n    endMarker=\"END GraphQLnearObject\"\n    language=\"py\"\n  />\n</TabItem>\n<TabItem value=\"py3\" label=\"Python (v3)\">\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\"http://localhost:8080\")\n\nnearObject = {\n  \"id\": \"32d5a368-ace8-3bb7-ade7-9f7ff03eddb6\",  # or {\"beacon\": \"weaviate://localhost/32d5a368-ace8-3bb7-ade7-9f7ff03eddb6\"}\n  \"distance\": 0.6,\n}\n\nresult = (\n  client.query\n  .get(\"Publication\", \"name\")\n  .with_additional(\"distance\") # \"certainty\" only supported if distance==cosine\n  .with_near_object(nearObject)\n  .with_limit(5)\n  .do()\n)\n\nprint(result)\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\nimport weaviate from 'weaviate-ts-client';\n\nconst client = weaviate.client({\n  scheme: 'http',\n  host: 'localhost:8080',\n});\n\nconst response = await client.graphql\n  .get()\n  .withClassName('Publication')\n  .withFields('name _additional {certainty distance}}')  // certainty only supported if distance==cosine\n  .withNearObject({\n    id: '32d5a368-ace8-3bb7-ade7-9f7ff03eddb6',\n    distance: 0.6,\n  })\n  .withLimit(5)\n  .do();\nconsole.log(response);\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate/graphql\"\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"localhost:8080\",\n    Scheme: \"http\",\n  }\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n\n  className := \"Publication\"\n  fields := []graphql.Field{\n    {Name: \"name\"},\n    {Name: \"_additional\", Fields: []graphql.Field{\n      {Name: \"certainty\"}, // certainty only supported if distance==cosine\n      {Name: \"distance\"},  // distance always supported\n    }},\n  }\n  nearObject := client.GraphQL().NearObjectArgBuilder().WithID(\"32d5a368-ace8-3bb7-ade7-9f7ff03eddb6\")\n  ctx := context.Background()\n\n  result, err := client.GraphQL().Get().\n    WithClassName(className).\n    WithFields(fields...).\n    WithNearObject(nearObject).\n    Do(ctx)\n\n  if err != nil {\n    panic(err)\n  }\n  fmt.Printf(\"%v\", result)\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.graphql.model.GraphQLResponse;\nimport io.weaviate.client.v1.graphql.query.argument.NearObjectArgument;\nimport io.weaviate.client.v1.graphql.query.fields.Field;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"http\", \"localhost:8080\");\n    WeaviateClient client = new WeaviateClient(config);\n\n    String className = \"Publication\";\n    Field name = Field.builder().name(\"name\").build();\n    Field _additional = Field.builder()\n      .name(\"_additional\")\n      .fields(new Field[]{\n        Field.builder().name(\"certainty\").build(), // only supported if distance==cosine\n        Field.builder().name(\"distance\").build()   // always supported\n      }).build();\n\n    NearObjectArgument nearObject = client.graphQL().arguments().nearObjectArgBuilder()\n      .id(\"32d5a368-ace8-3bb7-ade7-9f7ff03eddb6\")\n      .build();\n\n    Result<GraphQLResponse> result = client.graphQL().get()\n      .withClassName(className)\n      .withFields(name, _additional)\n      .withNearObject(nearObject)\n      .run();\n\n    if (result.hasErrors()) {\n      System.out.println(result.getError());\n      return;\n    }\n    System.out.println(result.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\n# Note: prior to v1.14, use `certainty` instead of `distance`\n# Under _additional, `certainty` is only supported if distance==cosine, but `distance` is always supported\necho '{\n  \"query\": \"{\n    Get {\n      Publication(\n        nearObject: {\n          id: \\\"32d5a368-ace8-3bb7-ade7-9f7ff03eddb6\\\",\n          distance: 0.6\n        }\n      ) {\n        name\n        _additional {\n          certainty\n          distance\n        }\n      }\n    }\n  }\"\n}' | curl \\\n    -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer learn-weaviate' \\\n    -d @- \\\n    https://edu-demo.weaviate.network/v1/graphql\n```\n\n</TabItem>\n<TabItem value=\"graphql\" label=\"GraphQL\">\n\n```graphql\n{\n  Get{\n    Publication(\n      nearObject: {\n        id: \"32d5a368-ace8-3bb7-ade7-9f7ff03eddb6\",  # or weaviate://localhost/32d5a368-ace8-3bb7-ade7-9f7ff03eddb6\n        distance: 0.6  # prior to v1.14, use certainty: 0.7\n      }\n    ) {\n      name\n      _additional {\n        certainty  # only works if distance==cosine\n        distance   # always works\n      }\n    }\n  }\n}\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Graphql.filters.nearobject", "path": "_includes/code/graphql.filters.nearObject.mdx", "link": "https://weaviate.io/_includes/code/graphql.filters.nearObject", "timestamp": "2024-05-08 15:31:01", "reader": "JSON", "meta": {}, "chunks": []}