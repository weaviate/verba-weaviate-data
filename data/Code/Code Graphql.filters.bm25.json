{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nimport FilteredTextBlock from '@site/src/components/Documentation/FilteredTextBlock';\n\nimport PyCode from '!!raw-loader!/_includes/code/graphql.search-operators.py';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python (v4)\">\n  <FilteredTextBlock\n    text={PyCode}\n    startMarker=\"START GraphQLBM25Basic\"\n    endMarker=\"END GraphQLBM25Basic\"\n    language=\"py\"\n  />\n</TabItem>\n<TabItem value=\"py3\" label=\"Python (v3)\">\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\"http://localhost:8080\")\n\nbm25 = {\n  \"query\": \"fox\",\n  \"properties\": [\"title\"],  # by default, all properties are searched\n}\n\nresult = (\n  client.query\n  .get(\"Article\", [\"title\", \"_additional {score} \"])\n  .with_bm25(**bm25)\n  .do()\n)\n\nprint(result)\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\nimport weaviate from 'weaviate-ts-client';\n\nconst client = weaviate.client({\n  scheme: 'http',\n  host: 'localhost:8080',\n});\n\nconst response = await client.graphql\n  .get()\n  .withClassName('Article')\n  .withFields('title _additional {score}')\n  .withBm25({\n    query: 'fox',\n    properties: ['title'],\n  })\n  .do();\nconsole.log(response);\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate/graphql\"\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"localhost:8080\",\n    Scheme: \"http\",\n  }\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n\n  className := \"Article\"\n\n  title := graphql.Field{Name: \"title\"}\n  _additional := graphql.Field{\n    Name: \"_additional\", Fields: []graphql.Field{\n      {Name: \"score\"},\n    },\n  }\n\n  query := string{\"fox\"}\n  properties: []string{\"title\"},\n  bm25 := client.GraphQL().Bm25ArgBuilder().\n    WithQuery(query).\n    WithProperties(properties)\n\n  ctx := context.Background()\n\n  result, err := client.GraphQL().Get().\n    WithClassName(className).\n    WithFields(title, _additional).\n    WithBm25(bm25).\n    Do(ctx)\n\n  if err != nil {\n    panic(err)\n  }\n  fmt.Printf(\"%v\", result)\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.graphql.model.GraphQLResponse;\nimport io.weaviate.client.v1.graphql.query.argument.Bm25Argument;\nimport io.weaviate.client.v1.graphql.query.fields.Field;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"http\", \"localhost:8080\");\n    WeaviateClient client = new WeaviateClient(config);\n\n    Bm25Argument bm25 = client.graphQL().arguments().bm25ArgBuilder()\n      .query(new String(\"fox\"))\n      .properties(new String[]{ \"title\" })\n      .build();\n\n    Field title = Field.builder().name(\"title\").build();\n    Field _additional = Field.builder()\n      .name(\"_additional\")\n      .fields(new Field[]{\n        Field.builder().name(\"score\").build()\n      }).build();\n\n    Result<GraphQLResponse> result = client.graphQL().get()\n      .withClassName(\"Article\")\n      .withFields(title, _additional)\n      .withBm25(bm25)\n      .run();\n\n    if (result.hasErrors()) {\n      System.out.println(result.getError());\n      return;\n    }\n    System.out.println(result.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\necho '{\n  \"query\": \"{\n    Get {\n      Article(\n        bm25: {\n          query: \\\"fox\\\",\n          properties: [\\\"title\\\"],\n        }\n      ) {\n        title\n        _additional {\n          score\n        }\n      }\n    }\n  }\"\n}' | curl \\\n    -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer learn-weaviate' \\\n    -d @- \\\n    https://edu-demo.weaviate.network/v1/graphql\n```\n\n</TabItem>\n<TabItem value=\"graphql\" label=\"GraphQL\">\n\n```graphql\n{\n  Get {\n    Article(\n      bm25: {\n        query: \"fox\",\n        properties: [\"title\"]\n      }\n    ) {\n      title\n      _additional {\n        score\n      }\n    }\n  }\n}\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Graphql.filters.bm25", "path": "_includes/code/graphql.filters.bm25.mdx", "link": "https://weaviate.io/_includes/code/graphql.filters.bm25", "timestamp": "2024-05-08 15:30:58", "reader": "JSON", "meta": {}, "chunks": []}