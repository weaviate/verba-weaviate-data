{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python\">\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\"http://localhost:8080\")\n\nreference_property = {\n  \"dataType\": [\n    \"Article\"\n  ],\n  \"description\": \"The articles this publication has\",\n  \"name\": \"hasArticles\"\n}\n\nclient.schema.property.create(\"Publication\", reference_property)\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\nimport weaviate from 'weaviate-ts-client';\n\nconst client = weaviate.client({\n  scheme: 'http',\n  host: 'localhost:8080',\n});\n\nconst className = 'Publication';\nconst prop = {\n  dataType: [\n    'Article',\n  ],\n  description: 'The articles this publication has',\n  name: 'hasArticles',\n};\n\nconst response = await client.schema\n  .propertyCreator()\n  .withClassName(className)\n  .withProperty(prop)\n  .do();\nconsole.log(response);\n\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n  \"github.com/weaviate/weaviate/entities/models\"\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"localhost:8080\",\n    Scheme: \"http\",\n  }\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n\n  prop := &models.Property{\n    DataType:    []string{\"Article\"},\n    Name:        \"hasArticles\",\n    Description: \"The articles this publication has\",\n  }\n\n  err := client.Schema().PropertyCreator().\n    WithClassName(\"Publication\").\n    WithProperty(prop).\n    Do(context.Background())\n  if err != nil {\n    panic(err)\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport java.util.Arrays;\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.schema.model.Property;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"http\", \"localhost:8080\");\n    WeaviateClient client = new WeaviateClient(config);\n\n    Property property = Property.builder()\n      .dataType(Arrays.asList(\"Article\"))\n      .description(\"The articles this publication has\")\n      .name(\"hasArticles\")\n      .build();\n\n    Result<Boolean> result = client.schema().propertyCreator()\n      .withClassName(\"Article\")\n      .withProperty(property)\n      .run();\n\n    if (result.hasErrors()) {\n      System.out.println(result.getError());\n      return;\n    }\n    System.out.println(result.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\ncurl \\\n    -X POST \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\n      \"dataType\": [\n        \"Article\"\n      ],\n      \"description\": \"The articles this publication has\",\n      \"name\": \"hasArticles\"\n    }' \\\n    http://localhost:8080/v1/schema/Publication/properties\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Howto.schema.property.add", "path": "_includes/code/howto.schema.property.add.mdx", "link": "https://weaviate.io/_includes/code/howto.schema.property.add", "timestamp": "2024-05-08 15:31:22", "reader": "JSON", "meta": {}, "chunks": []}