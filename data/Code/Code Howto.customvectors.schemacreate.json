{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python\">\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\"http://localhost:8080\")\n\nclass_obj = {\n    \"class\": \"Post\",\n    \"vectorizer\": \"none\", # explicitly tell Weaviate not to vectorize anything, we are providing the vectors ourselves through our BERT model\n    \"properties\": [{\n        \"name\": \"content\",\n        \"dataType\": [\"text\"],\n    }]\n}\n\nclient.schema.create_class(class_obj)\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\nimport weaviate from 'weaviate-ts-client';\n\nconst client = weaviate.client({\n  scheme: 'http',\n  host: 'localhost:8080',\n});\n\nconst classObj = {\n  class: 'Post',\n  vectorizer: 'none', // explicitly tell Weaviate not to vectorize anything, we are providing the vectors ourselves through our BERT model\n  properties: [{\n    name: 'content',\n    dataType: ['text'],\n  }],\n};\n\nconst response = await client.schema\n  .classCreator()\n  .withClass(classObj)\n  .do();\nconsole.log(response);\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n  \"github.com/weaviate/weaviate/entities/models\"\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"localhost:8080\",\n    Scheme: \"http\",\n  }\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n\n  classObj := &models.Class{\n    Class: \"Post\",\n    Properties: []*models.Property{\n      {\n        DataType: []string{\"text\"},\n        Name:     \"content\",\n      },\n    },\n    Vectorizer: \"none\",\n  }\n\n  err := client.Schema().ClassCreator().WithClass(classObj).Do(context.Background())\n  if err != nil {\n    panic(err)\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport java.util.ArrayList;\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.schema.model.DataType;\nimport io.weaviate.client.v1.schema.model.Property;\nimport io.weaviate.client.v1.schema.model.WeaviateClass;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"http\", \"localhost:8080\");\n    WeaviateClient client = new WeaviateClient(config);\n\n    WeaviateClass clazz = WeaviateClass.builder()\n      .className(\"Post\")\n      .properties(new ArrayList() {\n        {\n          add(Property.builder()\n            .dataType(new ArrayList() {\n              {\n                add(DataType.TEXT);\n              }\n            })\n            .name(\"content\")\n            .build());\n        }\n      })\n      .vectorizer(\"none\")\n      .build();\n\n    Result<Boolean> result = client.schema().classCreator().withClass(clazz).run();\n    if (result.hasErrors()) {\n      System.out.println(result.getError());\n      return;\n    }\n    System.out.println(result.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\ncurl \\\n    -X POST \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\n        \"class\": \"Post\",\n        \"vectorizer\": \"none\",\n        \"properties\": [{\n          \"name\": \"content\",\n          \"dataType\": [\"text\"]\n        }]\n    }' \\\n    http://localhost:8080/v1/schema\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Howto.customvectors.schemacreate", "path": "_includes/code/howto.customvectors.schemacreate.mdx", "link": "https://weaviate.io/_includes/code/howto.customvectors.schemacreate", "timestamp": "2024-05-08 15:31:20", "reader": "JSON", "meta": {}, "chunks": []}