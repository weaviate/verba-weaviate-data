{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"graphql\" label=\"GraphQL\">\n\n```graphql\n{\n  Get {\n    Article (\n      nearText: {\n        concepts: [\"fashion\"],\n      }\n    ) {\n      title\n      _additional {\n        id\n        certainty\n      }\n    }\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"py\" label=\"Python\">\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\"http://localhost:8080\")\n\nnear_text_filter = {\n  \"concepts\": [\"fashion\"]\n}\n\nquery_result = (\n  client.query\n  .get(\"Article\", \"title\")\n  .with_additional([\"id\", \"certainty\"])\n  .with_near_text(near_text_filter)\n  .do()\n)\n\nprint(query_result)\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\nimport weaviate from 'weaviate-ts-client';\n\nconst client = weaviate.client({\n  scheme: 'http',\n  host: 'localhost:8080',\n});\n\nconst response = await client.graphql\n  .get()\n  .withClassName('Article')\n  .withNearText({ concepts: ['fashion'] })\n  .withFields('title _additional { id certainty }')\n  .do();\nconsole.log(response);\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate/graphql\"\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"localhost:8080\",\n    Scheme: \"http\",\n  }\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n\n  className := \"Article\"\n  fields := []graphql.Field{\n    {Name: \"title\"},\n    {Name: \"_additional\", Fields: []graphql.Field{\n      {Name: \"id\"},\n      {Name: \"certainty\"},\n    }},\n  }\n\n  explore := client.GraphQL().NearTextArgBuilder().\n    WithConcepts([]string{\"fashion\"})\n  ctx := context.Background()\n\n  result, err := client.GraphQL().Get().\n    WithClassName(className).\n    WithFields(fields...).\n    WithNearText(explore).\n    Do(ctx)\n\n  if err != nil {\n    panic(err)\n  }\n  fmt.Printf(\"%v\", result)\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.graphql.model.GraphQLResponse;\nimport io.weaviate.client.v1.graphql.query.argument.NearTextArgument;\nimport io.weaviate.client.v1.graphql.query.fields.Field;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"http\", \"localhost:8080\");\n    WeaviateClient client = new WeaviateClient(config);\n\n    Field title = Field.builder()\n      .name(\"title\")\n      .build();\n    Field _additional = Field.builder()\n      .name(\"_additional\")\n      .fields(new Field[]{\n        Field.builder().name(\"id\").build(),\n        Field.builder().name(\"certainty\").build()\n      }).build();\n\n    NearTextArgument explore = client.graphQL().arguments().nearTextArgBuilder()\n      .concepts(new String[]{ \"fashion\" })\n      .build();\n\n    Result<GraphQLResponse> result = client.graphQL().get()\n      .withClassName(\"Article\")\n      .withFields(title, _additional)\n      .withNearText(explore)\n      .run();\n    if (result.hasErrors()) {\n      System.out.println(result.getError());\n      return;\n    }\n    System.out.println(result.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\necho '{\n  \"query\": \"{\n    Get {\n      Article (\n        nearText: {\n          concepts: [\\\"fashion\\\"],\n        }\n      ) {\n        title\n        _additional {\n          id\n          certainty\n        }\n      }\n    }\n  }\"\n}' | curl \\\n    -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer learn-weaviate' \\\n    -H \"X-OpenAI-Api-Key: $OPENAI_API_KEY\" \\\n    -d @- \\\n    https://edu-demo.weaviate.network/v1/graphql\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Graphql.underscoreproperties.certainty", "path": "_includes/code/graphql.underscoreproperties.certainty.mdx", "link": "https://weaviate.io/_includes/code/graphql.underscoreproperties.certainty", "timestamp": "2024-05-08 15:31:14", "reader": "JSON", "meta": {}, "chunks": []}