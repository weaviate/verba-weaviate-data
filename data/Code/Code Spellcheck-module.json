{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"graphql\" label=\"GraphQL\">\n\n```graphql\n{\n  Get {\n    Article(nearText: {\n      concepts: [\"houssing prices\"]\n    }) {\n      title\n      _additional {\n        spellCheck {\n          changes {\n            corrected\n            original\n          }\n          didYouMean\n          location\n          originalText\n        }\n      }\n    }\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"py\" label=\"Python\">\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\"http://localhost:8080\")\n\nnear_text = {\n  \"concepts\": [\"houssing prices\"],\n}\n\nresult = (\n  client.query\n  .get(\"Article\", [\"title\", \"_additional {spellCheck { change {corrected original} didYouMean location originalText}}\"])\n  .with_near_text(near_text)\n  .do()\n)\n\nprint(result)\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\nimport weaviate from 'weaviate-ts-client';\n\nconst client = weaviate.client({\n  scheme: 'http',\n  host: 'localhost:8080',\n});\n\nconst response = await client.graphql\n  .get()\n  .withClassName('Article')\n  .withFields('title _additional { spellCheck { change {corrected original} didYouMean location originalText } }')\n  .withNearText({\n    concepts: ['houssing prices'],\n  })\n  .do();\nconsole.log(JSON.stringify(response, null, 2));\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate/graphql\"\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"localhost:8080\",\n    Scheme: \"http\",\n  }\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n\n  className := \"Article\"\n  fields := []graphql.Field{\n    {Name: \"title\"},\n    {Name: \"_additional\", Fields: []graphql.Field{\n      {Name: \"spellCheck\", Fields: []graphql.Field{\n        {Name: \"change\", Fields: []graphql.Field{\n          {Name: \"corrected\"},\n          {Name: \"original\"},\n        }},\n        {Name: \"didYouMean\"},\n        {Name: \"location\"},\n        {Name: \"originalText\"},\n      }},\n    }},\n  }\n  concepts := []string{\"houssing prices\"}\n  nearText := client.GraphQL().NearTextArgBuilder().\n    WithConcepts(concepts)\n\n  ctx := context.Background()\n  result, err := client.GraphQL().Get().\n    WithClassName(className).\n    WithFields(fields...).\n    WithNearText(nearText).\n    Do(ctx)\n\n  if err != nil {\n    panic(err)\n  }\n  fmt.Printf(\"%v\", result)\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.graphql.model.GraphQLResponse;\nimport io.weaviate.client.v1.graphql.query.argument.NearTextArgument;\nimport io.weaviate.client.v1.graphql.query.fields.Field;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"http\", \"localhost:8080\");\n    WeaviateClient client = new WeaviateClient(config);\n\n    Field title = Field.builder().name(\"title\").build();\n    Field _additional = Field.builder()\n      .name(\"_additional\")\n      .fields(new Field[]{\n        Field.builder()\n          .name(\"spellCheck\")\n          .fields(new Field[]{\n            Field.builder()\n              .name(\"change\")\n              .fields(new Field[]{\n                Field.builder().name(\"corrected\").build(),\n                Field.builder().name(\"original\").build()\n              }).build(),\n            Field.builder().name(\"didYouMean\").build(),\n            Field.builder().name(\"location\").build(),\n            Field.builder().name(\"originalText\").build()\n          }).build()\n      }).build();\n\n    NearTextArgument explore = client.graphQL().arguments().nearTextArgBuilder()\n      .concepts(new String[]{ \"houssing prices\" })\n      .build();\n\n    Result<GraphQLResponse> result = client.graphQL().get()\n      .withClassName(\"Article\")\n      .withFields(title, _additional)\n      .withNearText(explore)\n      .run();\n\n    if (result.hasErrors()) {\n      System.out.println(result.getError());\n      return;\n    }\n    System.out.println(result.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\necho '{\n  \"query\": \"{\n    Get {\n      Article(nearText: {\n        concepts: [\\\"houssing prices\\\"]\n      }) {\n        title\n        _additional {\n          spellCheck {\n            changes {\n              corrected\n              original\n            }\n            didYouMean\n            location\n            originalText\n          }\n        }\n      }\n    }\n  }\"\n}' | curl \\\n    -X POST \\\n    -H 'Content-Type: application/json' \\\n    -d @- \\\n    http://localhost:8080/v1/graphql\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Spellcheck-module", "path": "_includes/code/spellcheck-module.mdx", "link": "https://weaviate.io/_includes/code/spellcheck-module", "timestamp": "2024-05-08 15:31:54", "reader": "JSON", "meta": {}, "chunks": []}