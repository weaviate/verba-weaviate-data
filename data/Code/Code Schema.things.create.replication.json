{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nimport PyCode from '!!raw-loader!/_includes/code/howto/manage-data.collections.py';\nimport PyCodeV3 from '!!raw-loader!/_includes/code/howto/manage-data.collections-v3.py';\nimport TSCode from '!!raw-loader!/_includes/code/howto/manage-data.collections.ts';\nimport TSCodeLegacy from '!!raw-loader!/_includes/code/howto/manage-data.collections-v2.ts';\nimport FilteredTextBlock from '@site/src/components/Documentation/FilteredTextBlock';\n\n\n<Tabs groupId=\"languages\">\n  <TabItem value=\"py\" label=\"Python (v4)\">\n    <FilteredTextBlock\n      text={PyCode}\n      startMarker=\"# START ReplicationSettings\"\n      endMarker=\"# END ReplicationSettings\"\n      language=\"py\"\n    />\n  </TabItem>\n\n  <TabItem value=\"py3\" label=\"Python (v3)\">\n    <FilteredTextBlock\n      text={PyCodeV3}\n      startMarker=\"# START ReplicationSettings\"\n      endMarker=\"# END ReplicationSettings\"\n      language=\"py\"\n    />\n  </TabItem>\n\n  <TabItem value=\"js\" label=\"JS/TS v3\">\n    <FilteredTextBlock\n      text={TSCode}\n      startMarker=\"// START ReplicationSettings\"\n      endMarker=\"// END ReplicationSettings\"\n      language=\"ts\"\n    />\n  </TabItem>\n\n  <TabItem value=\"js2\" label=\"JS/TS v2\">\n    <FilteredTextBlock\n      text={TSCodeLegacy}\n      startMarker=\"// START ReplicationSettings\"\n      endMarker=\"// END ReplicationSettings\"\n      language=\"ts\"\n    />\n  </TabItem>\n\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n  \"github.com/weaviate/weaviate/entities/models\"\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"localhost:8080\",\n    Scheme: \"http\",\n  }\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n\n  classObj := &models.Class{\n    Class:             \"Article\",\n    Properties: []*models.Property{\n      {\n        DataType:    []string{\"string\"},\n        Name:        \"title\",\n      }\n    },\n    ReplicationConfig: &models.ReplicationConfig{\n      Factor: 3,\n    }\n  }\n\n  err := client.Schema().ClassCreator().WithClass(classObj).Do(context.Background())\n  if err != nil {\n    panic(err)\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport java.util.ArrayList;\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.schema.model.DataType;\nimport io.weaviate.client.v1.schema.model.Property;\nimport io.weaviate.client.v1.schema.model.WeaviateClass;\nimport io.weaviate.client.v1.misc.model.ReplicationConfig;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"http\", \"localhost:8080\");\n    WeaviateClient client = new WeaviateClient(config);\n\n    ReplicationConfig replicationConfig = ReplicationConfig.builder()\n      .factor(3)\n      .build();\n\n    WeaviateClass clazz = WeaviateClass.builder()\n      .className(\"Article\")\n      .replicationConfig(replicationConfig)\n      .properties(new ArrayList() { {\n        add(Property.builder()\n          .dataType(new ArrayList(){ { add(DataType.STRING); } })\n          .name(\"title\")\n          .build());\n      } })\n      .build();\n\n    Result<Boolean> result = client.schema().classCreator().withClass(clazz).run();\n    if (result.hasErrors()) {\n      System.out.println(result.getError());\n      return;\n    }\n    System.out.println(result.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\ncurl \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n-d '{\n    \"class\": \"Article\",\n    \"properties\": [\n        {\n            \"dataType\": [\n                \"string\"\n            ],\n            \"description\": \"Title of the article\",\n            \"name\": \"title\"\n        }\n    ],\n    \"replicationConfig\": {\n      \"factor\": 3\n    }\n}' \\\nhttp://localhost:8080/v1/schema\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Schema.things.create.replication", "path": "_includes/code/schema.things.create.replication.mdx", "link": "https://weaviate.io/_includes/code/schema.things.create.replication", "timestamp": "2024-05-08 15:31:46", "reader": "JSON", "meta": {}, "chunks": []}