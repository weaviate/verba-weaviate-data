{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nimport PyCode from '!!raw-loader!/_includes/code/generative.groupedtask.examples.py';\nimport FilteredTextBlock from '@site/src/components/Documentation/FilteredTextBlock';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python (v4)\">\n    <FilteredTextBlock\n      text={PyCode}\n      startMarker=\"# START GenerativeAWS\"\n      endMarker=\"# END GenerativeAWS\"\n      language=\"py\"\n    />\n</TabItem>\n<TabItem value=\"py3\" label=\"Python (v3)\">\n\n```python\nimport weaviate\n\nclient  = weaviate.Client(\n  url = \"https://WEAVIATE_INSTANCE_URL/\",  # Replace WEAVIATE_INSTANCE_URL with your instance URL\n  additional_headers={\n      \"X-AWS-Access-Key\": \"YOUR_ACCESS_KEY\",\n      \"X-AWS-Secret-Key\": \"YOUR_SECRET_KEY\",\n  }\n)\n\n# highlight-start\n# instruction for the generative module\ngenerateTask = \"Explain why these magazines or newspapers are about finance\"\n# highlight-end\n\nresult = (\n  client.query\n  .get(\"Publication\", [\"name\"])\n  # highlight-start\n  .with_generate(grouped_task=generateTask)\n  # highlight-end\n  .with_near_text({\n    \"concepts\": [\"magazine or newspaper about finance\"]\n  })\n  .with_limit(5)\n).do()\n\nprint(result)\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```ts\nimport weaviate, { ApiKey } from 'weaviate-ts-client';\n\nconst client = weaviate.client({\n  scheme: 'https',\n  host: 'edu-demo.weaviate.network',\n  apiKey: new ApiKey('learn-weaviate'),\n  headers: {\n    'X-AWS-Access-Key': 'YOUR_ACCESS_KEY',\n    'X-AWS-Secret-Key': 'YOUR_SECRET_KEY'\n  },\n});\n\n// highlight-start\n// instruction for the generative module\nconst generateTask = 'Explain why these magazines or newspapers are about finance';\n// highlight-end\n\nconst response = await client.graphql\n  .get()\n  .withClassName('Article')\n  .withFields('title')\n  .withNearText({\n    concepts: ['magazine or newspaper about finance'],\n  })\n  .withGenerate({\n    groupedTask: generateTask,\n  })\n  .withLimit(5)\n  .do();\nconsole.log(JSON.stringify(response, null, 2));\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate/graphql\"\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:    \"WEAVIATE_INSTANCE_URL\",   // Replace with your instance URL\n    Scheme:  \"https\",\n    Headers: map[string]string{\n      \"X-AWS-Access-Key\": \"YOUR_ACCESS_KEY\",\n      \"X-AWS-Secret-Key\": \"YOUR_SECRET_KEY\",\n    },\n  }\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n  ctx := context.Background()\n\n  name := graphql.Field{Name: \"name\"}\n\n  concepts := []string{\"magazine or newspaper about finance\"}\n  nearText := client.GraphQL().NearTextArgBuilder().\n    WithConcepts(concepts)\n\n  // highlight-next-line\n  gs := graphql.NewGenerativeSearch().GroupedResult(\"Explain why these magazines or newspapers are about finance\")\n\n  result, err := client.GraphQL().Get().\n    WithClassName(\"Publication\").\n    WithFields(name).\n    // highlight-next-line\n    WithGenerativeSearch(gs).\n    WithNearText(nearText).\n    WithLimit(5).\n    Do(ctx)\n\n  if err != nil {\n    panic(err)\n  }\n  fmt.Printf(\"%v\", result)\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.graphql.model.GraphQLResponse;\nimport io.weaviate.client.v1.graphql.query.argument.NearTextArgument;\nimport io.weaviate.client.v1.graphql.query.fields.Field;\n\npublic class App {\n  public static void main(String[] args) {\n    Map<String, String> headers = new HashMap<String, String>() { {\n      put(\"X-AWS-Access-Key\", \"YOUR_ACCESS_KEY\");\n      put(\"X-AWS-Secret-Key\", \"YOUR_SECRET_KEY\");\n    } };\n   Config config = new Config(\"https\", \"WEAVIATE_INSTANCE_URL\", headers);\n   // Replace with your instance URL\n\n    WeaviateClient client = new WeaviateClient(config);\n\n    // highlight-start\n    // instruction for the generative module\n    GenerativeSearchBuilder generativeSearch = GenerativeSearchBuilder.builder()\n      .groupedResultTask(\"Explain why these magazines or newspapers are about finance\")\n      .build();\n    // highlight-end\n\n    Field name = Field.builder().name(\"name\").build();\n\n    NearTextArgument nearText = client.graphQL().arguments().nearTextArgBuilder()\n      .concepts(new String[]{ \"magazine or newspaper about finance\" })\n      .build();\n\n    Result<GraphQLResponse> result = client.graphQL().get()\n      .withClassName(\"Publication\")\n      .withFields(name)\n      // highlight-next-line\n      .withGenerativeSearch(generativeSearch)\n      .withNearText(nearText)\n      .withLimit(5)\n      .run();\n\n    if (result.hasErrors()) {\n      System.out.println(result.getError());\n      return;\n    }\n    System.out.println(result.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"graphql\" label=\"GraphQL\">\n\n```graphql\n{\n  Get {\n    Publication(\n      nearText: {\n        concepts: [\"magazine or newspaper about finance\"]\n        certainty: 0.75\n      }\n    ) {\n      name\n      // highlight-start\n      _additional {\n        generate(\n          groupedResult: {\n            task: \"Explain why these magazines or newspapers are about finance\"\n          }\n        ) {\n          groupedResult\n          error\n        }\n      }\n      // highlight-end\n    }\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\necho '{\n  \"query\": \"{\n    Get {\n      Publication(\n        nearText: {\n          concepts: [\\\"magazine or newspaper about finance\\\"]\n        }\n        limit: 5\n      ) {\n        name\n        # highlight-start\n        _additional {\n          generate(\n            groupedResult: {\n              task: \\\"Explain why these magazines or newspapers are about finance\\\"\n            }\n          ) {\n            groupedResult\n            error\n          }\n        }\n        # highlight-end\n      }\n    }\n  }\n  \"\n}' | curl \\\n    -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H \"Authorization: Bearer $WEAVIATE_API_KEY\" \\\n    -H \"X-AWS-Access-Key: $YOUR_ACCESS_KEY\" \\\n    -H \"X-AWS-Secret-Key: $YOUR_SECRET_KEY\" \\\n    -d @- \\\n    https://WEAVIATE_INSTANCE_URL/v1/graphql  # Replace WEAVIATE_INSTANCE_URL with your instance URL\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Generative.aws.groupedresult", "path": "_includes/code/generative.aws.groupedresult.mdx", "link": "https://weaviate.io/_includes/code/generative.aws.groupedresult", "timestamp": "2024-05-08 15:30:47", "reader": "JSON", "meta": {}, "chunks": []}