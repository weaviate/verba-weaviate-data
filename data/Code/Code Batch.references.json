{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nimport FilteredTextBlock from '@site/src/components/Documentation/FilteredTextBlock';\nimport PyCode from '!!raw-loader!/_includes/code/rest.batch.py';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python (v4)\">\n    <FilteredTextBlock\n      text={PyCode}\n      startMarker=\"# START BatchCreateReference\"\n      endMarker=\"# END BatchCreateReference\"\n      language=\"py\"\n    />\n</TabItem>\n<TabItem value=\"py3\" label=\"Python (v3)\">\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\"http://localhost:8080\")\n\n# Python client specific configurations can be set with `client.batch.configure`\n# the settings can be applied to both `objects` AND `references`.\n# You have to only set them once.\nclient.batch.configure(\n    # `batch_size` takes an `int` value to enable auto-batching\n    # (`None` is used for manual batching)\n    batch_size=100,\n    # dynamically update the `batch_size` based on import speed\n    dynamic=False,\n    # `timeout_retries` takes an `int` value to retry on time outs\n    timeout_retries=3,\n    # checks for batch-item creation errors\n    # this is the default in weaviate-client >= 3.6.0\n    callback=weaviate.util.check_batch_result,\n    consistency_level=weaviate.data.replication.ConsistencyLevel.ALL,  # default QUORUM\n)\n\nwith client.batch as batch:\n    # Format for batching is as follows:\n    # batch.add_reference(\n    #   from_object_uuid=<from_object_uuid>,\n    #   from_object_class_name=<from_object_class_name>,\n    #   from_property_name=<from_property_name>\n    #   to_object_uuid=<to_object_uuid>,\n    #   to_object_class_name=<to_object_class_name>,\n    #   tenant=<TenantName>  # Only required for multi-tenancy\n    # )\n    batch.add_reference(\n        from_object_uuid=\"36ddd591-2dee-4e7e-a3cc-eb86d30a4303\",\n        from_object_class_name=\"Author\",\n        from_property_name=\"wroteArticles\",\n        to_object_uuid=\"6bb06a43-e7f0-393e-9ecf-3c0f4e129064\",\n        to_object_class_name=\"Article\",\n        # tenant=\"tenantA\",  # Optional; specify the tenant in multi-tenancy collections\n    )\n    batch.add_reference(\n        from_object_uuid=\"36ddd591-2dee-4e7e-a3cc-eb86d30a4303\",\n        from_object_class_name=\"Author\",\n        from_property_name=\"wroteArticles\",\n        to_object_uuid=\"b72912b9-e5d7-304e-a654-66dc63c55b32\",\n        to_object_class_name=\"Article\",\n        # tenant=\"tenantA\",  # Optional; specify the tenant in multi-tenancy collections\n    )\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\nimport weaviate from 'weaviate-ts-client';\n\nconst client = weaviate.client({\n  scheme: 'http',\n  host: 'localhost:8080',\n});\n\nconst response = await client.batch\n  .referencesBatcher()\n  .withReference({\n    from: 'weaviate://localhost/Author/36ddd591-2dee-4e7e-a3cc-eb86d30a4303/wroteArticles',\n    to: 'weaviate://localhost/Article/6bb06a43-e7f0-393e-9ecf-3c0f4e129064',\n    // prior to v1.14 omit the class name as part of the 'to' beacon and specify it as weaviate://localhost/<id>\n  })\n  .withReference({\n    from: 'weaviate://localhost/Author/36ddd591-2dee-4e7e-a3cc-eb86d30a4303/wroteArticles',\n    to: 'weaviate://localhost/Article/b72912b9-e5d7-304e-a654-66dc63c55b32',\n    // prior to v1.14 omit the class name as part of the 'to' beacon and specify it as weaviate://localhost/<id>\n  })\n  .withReference({\n    from: 'weaviate://localhost/Author/36ddd591-2dee-4e7e-a3cc-eb86d30a4304/wroteArticles',\n    to: 'weaviate://localhost/Article/b72912b9-e5d7-304e-a654-66dc63c55b32',\n    // prior to v1.14 omit the class name as part of the 'to' beacon and specify it as weaviate://localhost/<id>\n  })\n  .withConsistencyLevel('ALL')  // default QUORUM\n  // .withTenant('tenantA')  // Optional; specify the tenant in multi-tenancy collections\n  .do();\nconsole.log(JSON.stringify(response, null, 2));\n\n/* This is also possible with a builder pattern:\nconst response = await client.batch\n  .referencesBatcher()\n  .withReference(\n    client.batch\n      .referencePayloadBuilder()\n      .withFromClassName('Author')\n      .withFromRefProp('wroteArticles')\n      .withFromId('36ddd591-2dee-4e7e-a3cc-eb86d30a4303')\n      .withToClassName('Article') // prior to v1.14 omit .withToClassName()\n      .withToId('6bb06a43-e7f0-393e-9ecf-3c0f4e129064')\n      .payload()\n  )\n  .withReference(\n    client.batch\n      .referencePayloadBuilder()\n      .withFromClassName('Author')\n      .withFromRefProp('wroteArticles')\n      .withFromId('36ddd591-2dee-4e7e-a3cc-eb86d30a4303')\n      .withToClassName('Article') // prior to v1.14 omit .withToClassName()\n      .withToId('b72912b9-e5d7-304e-a654-66dc63c55b32')\n      .payload()\n  )\n  .withReference(\n    client.batch\n      .referencePayloadBuilder()\n      .withFromClassName('Author')\n      .withFromRefProp('wroteArticles')\n      .withFromId('36ddd591-2dee-4e7e-a3cc-eb86d30a4304')\n      .withToClassName('Article') // prior to v1.14 omit .withToClassName()\n      .withToId('b72912b9-e5d7-304e-a654-66dc63c55b32')\n      .payload()\n  )\n  .withConsistencyLevel('ALL')  // default QUORUM\n  // .withTenant('tenantA')  // Optional; specify the tenant in multi-tenancy collections\n  .do();\nconsole.log(JSON.stringify(response, null, 2));\n*/\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n  \"github.com/weaviate/weaviate/entities/models\"\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate/data/replication\"  // for consistency levels\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"localhost:8080\",\n    Scheme: \"http\",\n  }\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n\n  ref := []*models.BatchReference{\n    {\n      From: \"weaviate://localhost/Author/36ddd591-2dee-4e7e-a3cc-eb86d30a4303/wroteArticles\",\n      To:   \"weaviate://localhost/Article/6bb06a43-e7f0-393e-9ecf-3c0f4e129064\",\n      // prior to v1.14 omit the class name as part of the \"to\" beacon and specify it as weaviate://localhost/<id>\n    },\n    {\n      From: \"weaviate://localhost/Author/36ddd591-2dee-4e7e-a3cc-eb86d30a4303/wroteArticles\",\n      To:   \"weaviate://localhost/Article/b72912b9-e5d7-304e-a654-66dc63c55b32\",\n      // prior to v1.14 omit the class name as part of the \"to\" beacon and specify it as weaviate://localhost/<id>\n    },\n    {\n      From: \"weaviate://localhost/Author/36ddd591-2dee-4e7e-a3cc-eb86d30a4304/wroteArticles\",\n      To:   \"weaviate://localhost/Article/b72912b9-e5d7-304e-a654-66dc63c55b32\",\n      // prior to v1.14 omit the class name as part of the \"to\" beacon and specify it as weaviate://localhost/<id>\n    },\n  }\n\n  result, err := client.Batch().ReferencesBatcher().\n    WithReference(ref[0]).\n    WithReference(ref[1]).\n    WithReference(ref[2]).\n    WithConsistencyLevel(replication.ConsistencyLevel.ALL).  // default QUORUM\n    // WithTenant(\"tenantA\").  // Optional; specify the tenant in multi-tenancy collections\n    Do(context.Background())\n\n  if err != nil {\n    panic(err)\n  }\n  fmt.Printf(\"%v\", result)\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.batch.model.BatchReference;\nimport io.weaviate.client.v1.batch.model.BatchReferenceResponse;\nimport io.weaviate.client.v1.data.replication.model.ConsistencyLevel;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"http\", \"localhost:8080\");\n    WeaviateClient client = new WeaviateClient(config);\n\n    List<BatchReference> refs = new ArrayList() {\n      {\n        add(\n          BatchReference.builder()\n            .from(\"weaviate://localhost/Author/36ddd591-2dee-4e7e-a3cc-eb86d30a4303/wroteArticles\")\n            .to(\"weaviate://localhost/Article/6bb06a43-e7f0-393e-9ecf-3c0f4e129064\")\n            // prior to v1.14 omit the class name as part of the \"to\" beacon and specify it as weaviate://localhost/<id>\n            .build()\n        );\n        add(\n          BatchReference.builder()\n            .from(\"weaviate://localhost/Author/36ddd591-2dee-4e7e-a3cc-eb86d30a4303/wroteArticles\")\n            .to(\"weaviate://localhost/Article/b72912b9-e5d7-304e-a654-66dc63c55b32\")\n            // prior to v1.14 omit the class name as part of the \"to\" beacon and specify it as weaviate://localhost/<id>\n            .build()\n        );\n        add(\n          BatchReference.builder()\n            .from(\"weaviate://localhost/Author/36ddd591-2dee-4e7e-a3cc-eb86d30a4304/wroteArticles\")\n            .to(\"weaviate://localhost/Article/b72912b9-e5d7-304e-a654-66dc63c55b32\")\n            // prior to v1.14 omit the class name as part of the \"to\" beacon and specify it as weaviate://localhost/<id>\n            .build()\n        );\n      }\n    };\n\n    Result<BatchReferenceResponse[]> result = client.batch().referencesBatcher()\n      .withReference(refs.get(0))\n      .withReference(refs.get(1))\n      .withReference(refs.get(2))\n      .withConsistencyLevel(ConsistencyLevel.ALL)  // default QUORUM\n      // .withTenant(\"tenantA\")  // Optional; specify the tenant in multi-tenancy collections\n      .run();\n\n    if (result.hasErrors()) {\n      System.out.println(result.getError());\n      return;\n    }\n    System.out.println(result.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\n# Note that for this query to work with Weaviate versions older than v1.14 you\n# need to omit the class name in the \"to\" beacon and specify it as\n# weaviate://localhost/<id>. The long-form beacon used in \"from\" is unchanged.\ncurl \\\n-X POST \\\n-H \"Content-Type: application/json\" \\\n-d '[{\n    \"from\": \"weaviate://localhost/Author/36ddd591-2dee-4e7e-a3cc-eb86d30a4303/wroteArticles\",\n    \"to\": \"weaviate://localhost/Article/6bb06a43-e7f0-393e-9ecf-3c0f4e129064\"\n  }, {\n    \"from\": \"weaviate://localhost/Author/36ddd591-2dee-4e7e-a3cc-eb86d30a4303/wroteArticles\",\n    \"to\": \"weaviate://localhost/Article/b72912b9-e5d7-304e-a654-66dc63c55b32\"\n  }, {\n    \"from\": \"weaviate://localhost/Author/36ddd591-2dee-4e7e-a3cc-eb86d30a4304/wroteArticles\",\n    \"to\": \"weaviate://localhost/Article/b72912b9-e5d7-304e-a654-66dc63c55b32\"\n  }]' \\\nhttp://localhost:8080/v1/batch/references?consistency_level=ALL\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Batch.references", "path": "_includes/code/batch.references.mdx", "link": "https://weaviate.io/_includes/code/batch.references", "timestamp": "2024-05-08 15:30:39", "reader": "JSON", "meta": {}, "chunks": []}