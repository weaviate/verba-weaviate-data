{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"graphql\" label=\"GraphQL\">\n\n```graphql\n{\n  Get {\n    Article(\n      limit: 1\n    ) {\n      title\n      _additional{\n        tokens(\n          properties: [\"title\"],\n          limit: 10,\n          certainty: 0.7\n        ) {\n          certainty\n          endPosition\n          entity\n          property\n          startPosition\n          word\n        }\n      }\n    }\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"py\" label=\"Python\">\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\"http://localhost:8080\")\n\nresult = (\n  client.query\n  .get(\"Article\", [\"title\", \"_additional {tokens ( properties: [\\\"title\\\"], limit: 1, certainty: 0.7) {entity property word certainty startPosition endPosition }}\"])\n  .do()\n)\n\nprint(result)\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\nimport weaviate from 'weaviate-ts-client';\n\nconst client = weaviate.client({\n  scheme: 'http',\n  host: 'localhost:8080',\n});\n\nconst response = await client.graphql\n  .get()\n  .withClassName('Article')\n  .withFields('title _additional { tokens (properties: [\\'title\\'], limit: 1, certainty: 0.7) {entity property word certainty startPosition endPosition} }')\n  .do();\nconsole.log(response);\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate/graphql\"\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"localhost:8080\",\n    Scheme: \"http\",\n  }\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n\n  className := \"Article\"\n  fields := []graphql.Field{\n    {Name: \"title\"},\n    {Name: \"_additional\", Fields: []graphql.Field{\n      {Name: \"tokens(properties: [\\\"title\\\"], limit: 1, certainty: 0.7)\", Fields: []graphql.Field{\n        {Name: \"entity\"},\n        {Name: \"property\"},\n        {Name: \"word\"},\n        {Name: \"certainty\"},\n        {Name: \"startPosition\"},\n        {Name: \"endPosition\"},\n      }},\n    }},\n  }\n\n  result, err := client.GraphQL().Get().\n    WithClassName(className).\n    WithFields(fields...).\n    Do(context.Background())\n\n  if err != nil {\n    panic(err)\n  }\n  fmt.Printf(\"%v\", result)\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.graphql.model.GraphQLResponse;\nimport io.weaviate.client.v1.graphql.query.fields.Field;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"http\", \"localhost:8080\");\n    WeaviateClient client = new WeaviateClient(config);\n\n    Field title = Field.builder().name(\"title\").build();\n    Field _additional = Field.builder()\n      .name(\"_additional\")\n      .fields(new Field[]{\n        Field.builder()\n          .name(\"tokens (properties: [\\\"title\\\"], limit: 1, certainty: 0.7)\")\n          .fields(new Field[]{\n            Field.builder().name(\"entity\").build(),\n            Field.builder().name(\"property\").build(),\n            Field.builder().name(\"word\").build(),\n            Field.builder().name(\"certainty\").build(),\n            Field.builder().name(\"startPosition\").build(),\n            Field.builder().name(\"endPosition\").build()\n          }).build()\n      }).build();\n\n    Result<GraphQLResponse> result = client.graphQL().get()\n      .withClassName(\"Article\")\n      .withFields(title, _additional)\n      .run();\n\n    if (result.hasErrors()) {\n      System.out.println(result.getError());\n      return;\n    }\n    System.out.println(result.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\necho '{\n  \"query\": \"{\n    Get {\n      Article(\n        limit: 1\n      ) {\n        title\n        _additional {\n          tokens(\n            properties: [\\\"title\\\"],\n            limit: 10,\n            certainty: 0.7\n          ) {\n            certainty\n            endPosition\n            entity\n            property\n            startPosition\n            word\n          }\n        }\n      }\n    }\n  }\"\n}' | curl \\\n    -X POST \\\n    -H 'Content-Type: application/json' \\\n    -d @- \\\n    http://localhost:8080/v1/graphql\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Ner-transformers-module", "path": "_includes/code/ner-transformers-module.mdx", "link": "https://weaviate.io/_includes/code/ner-transformers-module", "timestamp": "2024-05-08 15:31:27", "reader": "JSON", "meta": {}, "chunks": []}