{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python\">\n\n```python\ngeneratePrompt = \"\"\"\nPlease write a description for the following AirBnb Listing in english:\nName: {name}\nNeighbourhood: {neighbourhood}\nNeighbourhood Group: {neighbourhood_group}\nLatitude: {latitude}\nLongitude: {longitude}\nRoom Type: {room_type}\nPrice: {price}\nMinimum Nights: {minimum_nights}\nNumber of Reviews: {number_of_reviews}\nLast Review: {last_review}\nReviews per Month: {reviews_per_month}\nCalculated Host Listings Count: {calculated_host_listings_count}\nAvailability_365: {availability_365}\n\n\nPlease do not make up any information about the property in your description.\n\"\"\"\n\n\ngenerate_properties = [\"name\",\"neighbourhood\",\"neighbourhood_group\",\n                      \"latitude\",\"longitude\",\"room_type\",\n                      \"price\",\"minimum_nights\",\"number_of_reviews\",\n                      \"last_review\",\"reviews_per_month\",\n                      \"calculated_host_listings_count\",\"availability_365\"]\n\n\ndescriptions = client.query\\\n           .get(\"Listing\", generate_properties)\\\n           .with_generate(single_prompt=generatePrompt)\\\n           .with_additional([\"id\"])\\\n           .with_limit(5)\\\n           .do()[\"data\"][\"Get\"][\"Listing\"]\n\nfor description in descriptions:\n new_property = {\n     \"description\": description[\"_additional\"][\"generate\"][\"singleResult\"]\n }\n id = description[\"_additional\"][\"id\"]\n client.data_object.update(\n     new_property,\n     class_name = \"Listing\",\n     uuid=id\n )\n```\n</TabItem>\n\n<TabItem value=\"ts\" label=\"TypeScript\">\n\n```ts\nconst generate_prompt: string = 'Please write a description for the following AirBnB Listing in English. NAME: {name} HOST_NAME {host_name} NEIGHBOURHOOD {neighbourhood} NEIGHBOURHOOD_GROUP {neighbourhood_group} PRICE {price}. Please do not make up any information about the property in your description.';\n\nconst properties_str = 'name host_name neighbourhood neighbourhood_group price _additional{ id }';\n\nclient.graphql\n  .get()\n  .withClassName('Listing')\n  .withFields(properties_str)\n  .withGenerate({\n    singlePrompt: generate_prompt,\n  })\n  .withLimit(5)\n  .do()\n  .then(results => {\n    //loop through results to add to `generated_descriptions`\n    let generated_data = results[\"data\"][\"Get\"][\"Listing\"];\n    for (let i = 0; i < 5; i++) {\n      let uuid = generated_data[i][\"_additional\"][\"id\"];\n      let generated_result = generated_data[i][\"_additional\"][\"generate\"][\"singleResult\"];\n      let new_description_property = {\n        \"description\": generated_result\n      };\n      console.log(new_description_property);\n      client.data\n        .getterById()\n        .withClassName('Listing')\n        .withId(uuid)\n        .do()\n        .then(res => {\n          client.data\n            .updater()\n            .withId(uuid)\n            .withClassName('Listing')\n            .withProperties(new_description_property)\n            .do();\n        })\n        .then(res => {\n          console.log(res)\n        })\n        .catch(err => {\n          console.error(err)\n        });\n    }\n  })\n  .catch(err => {\n    console.error(err);\n  });\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Generative.feedback.loops.description", "path": "_includes/code/generative.feedback.loops.description.mdx", "link": "https://weaviate.io/_includes/code/generative.feedback.loops.description", "timestamp": "2024-05-08 15:30:49", "reader": "JSON", "meta": {}, "chunks": []}