{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nimport FilteredTextBlock from '@site/src/components/Documentation/FilteredTextBlock';\nimport EndToEndPyCode from '!!raw-loader!/_includes/code/quickstart/endtoend.py';\nimport EndToEndPy3Code from '!!raw-loader!/_includes/code/quickstart/endtoend.py3.py';\nimport EndToEndTSCode from '!!raw-loader!/_includes/code/quickstart/endtoend.ts';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python (v4)\">\n\n```python\nimport weaviate\n\n# As of November 2023, WCS sandbox instances are not yet compatible with the new API introduced in the v4 Python client.\n# This example connects to a local instance of Weaviate. You do not need to provide the Weaviate API key when local,\n# anonymous, authentication is enabled.\nclient = weaviate.connect_to_local()\n\ntry:\n    # Your code here\nexcept:\n    # Close the connection gracefully\n    client.close()\n```\n\n</TabItem>\n<TabItem value=\"py3\" label=\"Python (v3)\">\n\n```python\nimport weaviate\nimport json\n\nclient = weaviate.Client(\n    url = \"https://WEAVIATE_INSTANCE_URL\",  # Replace with your Weaviate endpoint\n    auth_client_secret=weaviate.auth.AuthApiKey(api_key=\"YOUR-WEAVIATE-API-KEY\"),  # Replace with your Weaviate instance API key\n)\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"JS/TS v3\">\n\n```ts\nimport weaviate, { WeaviateClient } from 'weaviate-client'\n\nconst client: WeaviateClient = await weaviate.connectToWCS(\n    'https://WEAVIATE_INSTANCE_URL',  // Replace with your Weaviate endpoint\n  {\n    authCredentials: new weaviate.ApiKey('YOUR-WEAVIATE-API-KEY'),  // Replace with your Weaviate instance API key\n    headers: {\n      'X-OpenAI-Api-Key': process.env.OPENAI_API_KEY || '',  // Replace with your inference API key\n    }\n  } \n)\n\n```\n\n</TabItem>\n\n<TabItem value=\"js2\" label=\"JS/TS v2\">\n\n```ts\nimport weaviate, { WeaviateClient, ObjectsBatcher, ApiKey } from 'weaviate-ts-client';\nimport fetch from 'node-fetch';\n\nconst client: WeaviateClient = weaviate.client({\n  scheme: 'https',\n  host: 'WEAVIATE_INSTANCE_URL',  // Replace with your Weaviate endpoint\n  apiKey: new ApiKey('YOUR-WEAVIATE-API-KEY'),  // Replace with your Weaviate instance API key\n});\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate/auth\"\n  \"github.com/weaviate/weaviate/entities/models\"\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"WEAVIATE_INSTANCE_URL/\",  // Replace with your Weaviate endpoint\n    Scheme: \"https\",\n    AuthConfig: auth.ApiKey{Value: \"YOUR-WEAVIATE-API-KEY\"}, // Replace with your Weaviate instance API key\n  }\n\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n      panic(err)\n  }\n}\n```\n\n</TabItem>\n{/* <TabItem value=\"java\" label=\"Java\">\n\n```java\nTODO\n```\n\n</TabItem> */}\n<TabItem value=\"curl\" label=\"Curl\">\n\n- With `curl`, add the API key to the header as shown below:\n<br/>\n\n```bash\necho '{\n  \"query\": \"<QUERY>\"\n}' | curl \\\n    -X POST \\\n    -H \"Content-Type: application/json\" \\\n    -H \"Authorization: Bearer YOUR-WEAVIATE-API-KEY\" \\\n    -d @- \\\n    https://WEAVIATE_INSTANCE_URL/v1/graphql  # Replace WEAVIATE_INSTANCE_URL with your instance URL\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Quickstart Connect.noheader", "path": "_includes/code/quickstart/connect.noheader.mdx", "link": "https://weaviate.io/_includes/code/quickstart/connect.noheader", "timestamp": "2024-05-08 15:31:36", "reader": "JSON", "meta": {}, "chunks": []}