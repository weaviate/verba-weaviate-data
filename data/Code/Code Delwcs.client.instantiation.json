{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nimport FilteredTextBlock from '@site/src/components/Documentation/FilteredTextBlock';\nimport PyClientCode from '!!raw-loader!/_includes/code/client-libraries/python_v4.py';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python (v4)\">\n  <FilteredTextBlock\n    text={PyClientCode}\n    startMarker=\"# WCSQuickStartInstantiation\"\n    endMarker=\"# END WCSQuickStartInstantiation\"\n    language=\"py\"\n  />\n</TabItem>\n<TabItem value=\"pyv3\" label=\"Python (v3)\">\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\n    url=\"https://WEAVIATE_INSTANCE_URL/\",  # Replace with your Weaviate endpoint\n    auth_client_secret=weaviate.auth.AuthApiKey(api_key=\"YOUR-WEAVIATE-API-KEY\"),  # Replace with your Weaviate instance API key\n)\n\nclient.schema.get()\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\nimport weaviate, { WeaviateClient, ObjectsBatcher, ApiKey } from 'weaviate-ts-client';\n\nconst client: WeaviateClient = weaviate.client({\n  scheme: 'https',\n  host: 'WEAVIATE_INSTANCE_URL',  // Replace with your Weaviate endpoint\n  apiKey: new ApiKey('YOUR-WEAVIATE-API-KEY'),  // Replace with your Weaviate instance API key\n});\n\nconst response = await client\n  .schema\n  .getter()\n  .do();\nconsole.log(JSON.stringify(response, null, 2));\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n\t\"context\"\n\t\"fmt\"\n\t\"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n)\n\nfunc main() {\n    cfg := weaviate.Config{\n        Host:   \"WEAVIATE_INSTANCE_URL/\",  // Replace with your Weaviate endpoint\n        Scheme: \"https\",\n        AuthConfig: auth.ApiKey{Value: \"YOUR-WEAVIATE-API-KEY\"}, // Replace with your Weaviate instance API key\n    }\n\n    client, err := weaviate.NewClient(cfg)\n    if err != nil {\n      panic(err)\n    }\n\n    schema, err := client.Schema().Getter().Do(context.Background())\n    if err != nil {\n        panic(err)\n    }\n    fmt.Printf(\"%+v\", schema)\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateAuthClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.misc.model.Meta;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"https\", \"WEAVIATE_INSTANCE_URL/\");  // Replace with your Weaviate endpoint\n    WeaviateClient client = WeaviateAuthClient.apiKey(config, \"YOUR-WEAVIATE-API-KEY\");  // Replace with your Weaviate instance API key\n\n    // get the schema\n    Result<Schema> result = client.schema().getter().run();\n    if (result.hasErrors()) {\n        System.out.println(result.getError());\n        return;\n    }\n\n    // print the schema\n    System.out.println(result.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\ncurl \\\n-H \"Authorization: Bearer YOUR-WEAVIATE-API-KEY\" \\\nhttps://WEAVIATE_INSTANCE_URL/v1/schema  # Replace WEAVIATE_INSTANCE_URL with your instance URL\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Delwcs.client.instantiation", "path": "_includes/code/DELwcs.client.instantiation.mdx", "link": "https://weaviate.io/_includes/code/DELwcs.client.instantiation", "timestamp": "2024-05-08 15:30:37", "reader": "JSON", "meta": {}, "chunks": []}