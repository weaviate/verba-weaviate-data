{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python\">\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\"http://localhost:8080\")\n\ndata_obj = {\n    \"content\": \"This is a news update of May 28 2021. Today .......\"\n}\n\nclient.data_object.create(\n  data_obj,\n  \"Post\",\n  \"36ddd591-2dee-4e7e-a3cc-eb86d30a0934\",\n  vector = [0.3, 0.2, 0.1, .... 0.9], # supported types are `list`, `numpy.ndarray`, `torch.Tensor` and `tf.Tensor`. Make sure the length matches with your Weaviate settings.\n)\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\nimport weaviate from 'weaviate-ts-client';\n\nconst client = weaviate.client({\n  scheme: 'http',\n  host: 'localhost:8080',\n});\n\nconst response = await client.data\n  .creator()\n  .withClassName('Post')\n  .withId('36ddd591-2dee-4e7e-a3cc-eb86d30a0934')\n  .withProperties({\n    content: 'This is a news update of May 28 2021. Today .......',\n  })\n  .withVector([0.3, 0.2, 0.1, 0.4, 0.6, 0.9])\n  .do();\nconsole.log(response);\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"localhost:8080\",\n    Scheme: \"http\",\n  }\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n\n  dataSchema := map[string]interface{}{\n    \"content\": \"This is a news update of May 28 2021. Today .......\",\n  }\n\n  vector := []float32{0.3, 0.2, 0.1, 0.4, 0.6, 0.9}\n\n  _, err := client.Data().Creator().\n    WithClassName(\"Post\").\n    WithID(\"36ddd591-2dee-4e7e-a3cc-eb86d30a0934\").\n    WithProperties(dataSchema).\n    WithVector(vector).\n    Do(context.Background())\n  if err != nil {\n    panic(err)\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.data.model.WeaviateObject;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"http\", \"localhost:8080\");\n    WeaviateClient client = new WeaviateClient(config);\n\n    Map<String, Object> properties = new HashMap<>();\n    properties.put(\"content\", \"This is a news update of May 28 2021. Today .......\");\n\n    Float[] vector = new Float[]{ 0.3f, 0.2f, 0.1f, 0.4f, 0.6f, 0.9f };\n\n    Result<WeaviateObject> result = client.data().creator()\n      .withClassName(\"Post\")\n      .withID(\"36ddd591-2dee-4e7e-a3cc-eb86d30a0934\")\n      .withProperties(properties)\n      .withVector(vector)\n      .run();\n\n    if (result.hasErrors()) {\n      System.out.println(result.getError());\n      return;\n    }\n    System.out.println(result.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\ncurl \\\n    -X POST \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\n      \"class\": \"Post\",\n      \"vector\": [0.3, 0.2, 0.1, .... 0.9],\n      \"properties\": {\n        \"content\": \"This is a news update of May 28 2021. Today .......\"\n      }\n  }' \\\n    http://localhost:8080/v1/objects\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Howto.customvectors.adddata", "path": "_includes/code/howto.customvectors.adddata.mdx", "link": "https://weaviate.io/_includes/code/howto.customvectors.adddata", "timestamp": "2024-05-08 15:31:19", "reader": "JSON", "meta": {}, "chunks": []}