{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nimport FilteredTextBlock from '@site/src/components/Documentation/FilteredTextBlock';\n\nimport PyCode from '!!raw-loader!/_includes/code/graphql.get.simple.py';\nimport PyCodeV3 from '!!raw-loader!/_includes/code/graphql.get.simple.v3.py';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python (v4)\">\n  <FilteredTextBlock\n    text={PyCode}\n    startMarker=\"START GraphQLGetSimple\"\n    endMarker=\"END GraphQLGetSimple\"\n    language=\"py\"\n  />\n</TabItem>\n<TabItem value=\"py3\" label=\"Python (v3)\">\n\n<FilteredTextBlock\n  text={PyCodeV3}\n  startMarker=\"# ===== PYTHON EXAMPLE =====\"\n  endMarker=\"# ===== END PYTHON EXAMPLE =====\"\n  language=\"py\"\n/>\n\n</TabItem>\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\nimport weaviate from 'weaviate-ts-client';\n\nconst client = weaviate.client({\n  scheme: 'https',\n  host: 'WEAVIATE_INSTANCE_URL',  // Replace with your Weaviate URL\n});\n\nconst response = await client.graphql\n  .get()\n  .withClassName('JeopardyQuestion')\n  .withFields('question answer points')\n  .do();\nconsole.log(response);\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate/graphql\"\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"WEAVIATE_INSTANCE_URL\",  // Replace with your Weaviate URL\n    Scheme: \"https\",\n  }\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n  fields := []graphql.Field{\n    {Name: \"question\"},\n    {Name: \"answer\"},\n    {Name: \"points\"},\n  }\n  ctx := context.Background()\n  result, err := client.GraphQL().Get().\n    WithClassName(\"JeopardyQuestion\").\n    WithFields(fields...).\n    Do(ctx)\n  if err != nil {\n    panic(err)\n  }\n  fmt.Printf(\"%v\", result)\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.graphql.model.GraphQLResponse;\nimport io.weaviate.client.v1.graphql.query.fields.Field;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"https\", \"WEAVIATE_INSTANCE_URL\");  // Replace with your Weaviate URL\n    WeaviateClient client = new WeaviateClient(config);\n\n    Field title = Field.builder().name(\"question\").build();\n    Field url = Field.builder().name(\"answer\").build();\n    Field wordCount = Field.builder().name(\"points\").build();\n\n    Result<GraphQLResponse> result = client.graphQL().get()\n      .withClassName(\"JeopardyQuestion\")\n      .withFields(title, url, wordCount)\n      .run();\n    if (result.hasErrors()) {\n      System.out.println(result.getError());\n      return;\n    }\n    System.out.println(result.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\necho '{\n  \"query\": \"{\n    Get {\n      JeopardyQuestion {\n        question\n        answer\n        points\n      }\n    }\n  }\"\n}' | curl \\\n    -X POST \\\n    -H 'Content-Type: application/json' \\\n    -H 'Authorization: Bearer learn-weaviate' \\\n    -d @- \\\n    https://edu-demo.weaviate.network/v1/graphql\n```\n\n</TabItem>\n<TabItem value=\"graphql\" label=\"GraphQL\">\n\n<FilteredTextBlock\n  text={PyCodeV3}\n  startMarker=\"# ===== GRAPHQL EXAMPLE =====\"\n  endMarker=\"# ===== END GRAPHQL EXAMPLE =====\"\n  language=\"py\"\n/>\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Graphql.get.simple", "path": "_includes/code/graphql.get.simple.mdx", "link": "https://weaviate.io/_includes/code/graphql.get.simple", "timestamp": "2024-05-08 15:31:13", "reader": "JSON", "meta": {}, "chunks": []}