{"text": "import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\nimport FilteredTextBlock from '@site/src/components/Documentation/FilteredTextBlock';\n\nimport PyCode from '!!raw-loader!/_includes/code/rest.schema.py';\n\n<Tabs groupId=\"languages\">\n<TabItem value=\"py\" label=\"Python (v4)\">\n  <FilteredTextBlock\n    text={PyCode}\n    startMarker=\"START UpdateCollectionShards\"\n    endMarker=\"END UpdateCollectionShards\"\n    language=\"py\"\n  />\n</TabItem>\n\n<TabItem value=\"py3\" label=\"Python (v3)\">\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\"http://localhost:8080\")\n\n# Update a shard\nclient.schema.update_class_shard(\n  class_name=\"Article\",\n  status=\"READONLY\",\n  shard_name=\"shard-1234\",\n)\n\n# Convenience method to update all shards in a class\nclient.schema.update_class_shard(\n  class_name=\"Article\",\n  status=\"READONLY\",\n)\n```\n\n</TabItem>\n<TabItem value=\"js\" label=\"JavaScript/TypeScript\">\n\n```js\nimport weaviate from 'weaviate-ts-client';\n\nconst client = weaviate.client({\n  scheme: 'http',\n  host: 'localhost:8080',\n});\n\n// Update a shard\nawait client.schema\n  .shardUpdater()\n  .withClassName('Article')\n  .withShardName('shard-1234')\n  .withStatus('READONLY')\n  .do();\n\n// Convenience method to update all shards in a class\nawait client.schema\n  .shardsUpdater()\n  .withClassName('Article')\n  .withStatus('READONLY')\n  .do();\n```\n\n</TabItem>\n<TabItem value=\"go\" label=\"Go\">\n\n```go\npackage main\n\nimport (\n  \"context\"\n  \"fmt\"\n\n  \"github.com/weaviate/weaviate-go-client/v4/weaviate\"\n)\n\nfunc main() {\n  cfg := weaviate.Config{\n    Host:   \"localhost:8080\",\n    Scheme: \"http\",\n  }\n\n  client, err := weaviate.NewClient(cfg)\n  if err != nil {\n    panic(err)\n  }\n\n  // Update a shard\n  status, err := client.Schema().\n    ShardUpdater().\n    WithClassName(\"Article\").\n    WithShardName(\"shard-1234\").\n    WithStatus(\"READONLY\").\n    Do(context.Background())\n  if err != nil {\n    panic(err)\n  }\n  fmt.Printf(\"%v\", status)\n\n  // Convenience method to update all shards in a class\n  shards, err := client.Schema().\n    ShardsUpdater().\n    WithClassName(\"Article\").\n    WithStatus(\"READY\").\n    Do(context.Background())\n  if err != nil {\n    panic(err)\n  }\n  fmt.Printf(\"%v\", shards)\n}\n```\n\n</TabItem>\n<TabItem value=\"java\" label=\"Java\">\n\n```java\npackage io.weaviate;\n\nimport io.weaviate.client.Config;\nimport io.weaviate.client.WeaviateClient;\nimport io.weaviate.client.base.Result;\nimport io.weaviate.client.v1.schema.model.ShardStatus;\nimport io.weaviate.client.v1.schema.model.ShardStatuses;\n\npublic class App {\n  public static void main(String[] args) {\n    Config config = new Config(\"http\", \"localhost:8080\");\n    WeaviateClient client = new WeaviateClient(config);\n\n    // Update a shard\n    Result<ShardStatus> updateShard = client.schema()\n      .shardUpdater()\n      .withClassName(\"Article\")\n      .withShardName(\"shard-1234\")\n      .withStatus(ShardStatuses.READONLY)\n      .run();\n    if (updateShard.hasErrors()) {\n      System.out.println(updateShard.getError());\n      return;\n    }\n    System.out.println(updateShard.getResult());\n\n    // Convenience method to update all shards in a class\n    Result<ShardStatus[]> updateShards = client.schema()\n      .shardsUpdater()\n      .withClassName(\"Article\")\n      .withStatus(ShardStatuses.READY)\n      .run();\n    if (updateShards.hasErrors()) {\n      System.out.println(updateShards.getError());\n      return;\n    }\n    System.out.println(updateShards.getResult());\n  }\n}\n```\n\n</TabItem>\n<TabItem value=\"curl\" label=\"Curl\">\n\n```bash\ncurl \\\n    -X PUT \\\n    -H \"Content-Type: application/json\" \\\n    -d '{\n         \"status\": \"READONLY\"\n        }' \\\n    http://localhost:8080/v1/schema/Article/shards/shard-1234\n```\n\n</TabItem>\n</Tabs>\n", "type": "Code", "name": "Code Schema.shards.put", "path": "_includes/code/schema.shards.put.mdx", "link": "https://weaviate.io/_includes/code/schema.shards.put", "timestamp": "2024-05-08 15:31:44", "reader": "JSON", "meta": {}, "chunks": []}