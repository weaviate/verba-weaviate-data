{"text": "Video presentation by Bob van Luijt showing the Weaviate vector search engine during CloudNativeCon 2021. In this video, you ... \nhello everybody thank you for watching this video i'm going to talk about uh the viviate vector search engine and then specifically from the perspective of threat analysis in cyber security on mostly we're gonna focusing on i'm gonna tell a little bit about what we've hit is and then we're gonna focus on the demo um and i'm also gonna show give you some pointers how you can start working with it yourself so we've hit is a vector search engine and it's a it's a full crowd support database but the most important thing to bear in mind is that the the difference between traditional search engines and vector search engines like wev8 is that we've yet focuses on the vector representation of the data that is stored within it and those factory presentations are given to it based on machine learning models and the simplest way to show you the difference between a traditional search engine and a vector search engine is the following so let's look at this data object so we have here data object representing a in this case cybersecurity threat group so we have here fin6 and then you see like a group that has focused on an attacking point of sales devices well if he would store this data object in a traditional search engine and we want to retrieve it and now we say for example we are looking for something related to fine as hardware attacks then it will not find anything because we know that fin6 is related to these this query but well the the exact keywords are not matched in this data object however when you do this in a vector search engine like we've yet it will actually return fin6 because it know that there's a relation between finance hardware and attack based on a group that focuses on attacking point of sales devices and that is the most important added value of these vector search engines like we've yet and as you will see in the demo a lot of new use cases come from this so when it comes to the cyber security domain our main focus or our main question that we want to answer is like can we go from like a rule-based approach to a prediction-based approach and then of course we want to do that based on your own data so again with this database and in the and and of the type of a search engine so that means that you can use any data um to store in vva so it can also be your own data that can be a proprietary data and that doesn't really matter and then of course we focus on um enabling you to have an in an easy and fast and secure way to to work with that data as you will see in the demo as well so quickly to a definition of we've jet so we've had this cloud native what we mean with that is that uh if you have kubernetes or more on a local instance if you have docker compose you can you can work with with we've yet it's modular and and that's one of our and what makes unique with it unique is its modular nature so the vv8 core um is a pure vector database where you can store data objects and their factory presentations but we have a whole set of modules around we evade like nlp models question answering model modules vectorization modules etc etc and during the demo i'm going to show with you with two modules the factorization module and the question answering module we focus with vv8 on being as real time as possible so we're constantly working on improving we've gate and the speed of the algorithms to to do the vector retrievals it's a vector search engine so what makes difference from traditional search engines is that rather than doing keyword matching we focus on vector matching and it's built to skill your machine learning models why what do we mean with this well what we mean with this is that having machinery modules is one thing oh sorry models is one thing but also using them in an efficient way and scaling them to production sizes that's and completely different question so um a little bit about the core features so with that two core features the first one is search or as we like to say search and discovery in your data so the demo that i'm gonna show you is completely focusing on search and how to find things using we've yet but on the other hand we also have classification and the easiest way to think of classification is context is that we've yet can automatically make relations in your data sets so where search there is some form of human or machine input to get to insights with classification you can ask we've yet to do that automatically then we have some other well unique features from eva's so first the modules as i just described um we have a bunch of them if you have ideas for modules we're more than um happy to hear um you know how you think we can improve vva's module ecosystem by the way you can also create your own modules then we support any media type so we've had not only the vector representations that we've yet can store but also the data objects can be of any media type so within one single vp8 you can store textual text objects and text effect vectors to represent these data objects but also for example images or video agree we've hit itself has a graph like a data model so what you will see when i show the demo to you we use graphql graphql is used to um not only do the machine learning matching but also to make traditional graph relations and most importantly to mix and match them and then of course we focus on we being scalable and fast and we're constantly updating and improving we've hit so with every release we get a bit more a bit more faster and a bit more scalable so when it comes to the um the vertical of cyber security we mostly focus on intelligent threat analysis meaning that we we've yet focuses on structured data so that can be descriptions text documents or those kind of things that are related to a threat analysis so for this demo we're using the metra tech framework for the simple reason that it contains a lot of graph relations but also a lot of unstructured data we use a vva transformers module which is fine to fine-tune with cyber security data in this case we use sentence birth and that brings me to the demo so before i show you the demo i quickly want to show the documentation so if we just uh simply search for vpa documentation you find it on our website semi.technology on the left hand side you find a lot of information with a lot of kind of features also the the index plugins and the modules what i would like to recommend is that if you go to installation you find the customize your wev8 setup link where you can very easily go to the configurator to configure your own weavie8 instance if you want to query we've yet we have graphql interfaces so for example get where you see examples in graphql python javascript go etc and even in curl um and you can also try out the test data set there so when we are in the we've hit console um we get an interface where we can use graphql to query through vp8 and the um setup how ev88 works is actually very simple so um with it has three core functions meaning that's aggregate that is explore and that is get and aggregate is used to well get an as an aggregate function so for example how many objects are stored in vvate explore issues to search for the complete vector space but get is used to make a mix of vector searches and graph searches and that's what we're going to use for the demo inside we've ate you have a [Music] graph like data model so that means that you can create any class and any property so in this case our class and property structure is based on the meteor attack framework so let's take a look at the first one so let's take a look at threat groups so thread groups have a name and this very simple query says like get me thread groups and show them show me their names so running this query you see a bunch of thread groups they're not organized in any way they're just randomly shown based on this query um we can also go at properties so we can say for example say like a show the description and there you see for example copy kittens you see the the description of the the thread group so let's go one step back now what we now can do is that we can enable the machine learning model and in this we've had instance we have two modules enabled the factorization module and the q a module so let's start by looking at the from the perspective of the q a module so what we can do is that we can say well we want to ask a question then of course we have the question and the question that we want to ask is who targeted the government in the middle east make an array that's incorrect should like do it like this we can se the properties that we want to search through and that is something we want to do based on the uh descriptions and then we have so-called underscore properties additional or you can say well this is where we want to see the answer to the question and we want to see the result so very simple question a query where we say based on these thread groups search for the descriptions and show us who targeted the government in the middle east so let's run this query so here we'll find the answer oral rig what we now can do with we've gate is that we can select well for example also include the name of this threat the description of this threat group and then you see that the name is actually also oil rig but if you're also going to look at the description then we see that actually inside the description there's more information about oil rig and one of the things that i want to show you is that we can even drill down in the descriptions because we can say like um we can alternate alter the question to ask for example under what name was rig also known like this so let me remove the description temporarily so if i now run this query then we see that in the in the document about all rig we leave we we learn that act 34 is also a way how allrec is called so let's go one step deeper so let's say like uh what kind of attacks does paul rick use this query and we find that in the document white ulric the answer is found which is supply chain attacks um we've now been looking at the graph from the level of the threat group so let's take a completely different approach and use the supply chain effects in there so let's start from the perspective of the attack technique and so if you now also say i have this simple query say where we say get attack techniques and show me the names and if we run this query we just get a bunch of attack techniques coming from the mitra attack framework now when we get we can do question answering but we can also do a near searches so we can also search for neighboring concepts so let's say for example here we have near text and we're going to look for concepts and then for the concepts let's look at the supply chain attacks and let's say for this query limited to the first 10 results so if i now run these queries then with supply chain attacks then the most neighboring concepts are of course well the supply chain compromise the supply chain compromise or the compromising hardware supply chain etc now the question is like how does wev88 know what to show what is the certainty that we've hit has in showing these results well to to get some feedback there we can actually ask we've ea to show us the certainty so if you run this query then we see the certainty based on which we've yet organized the results and the certainty is related to the distance from the query to the data object so that's why we've it says like okay supply chain compromises to come first for supply chain attacks etc so what we see here as well that if we dive under eighty percent of certainty we kinda lose a lot more and more context based on the query that we have so instead of limiting this query we can actually say well we wanna be at least eighty percent certain based on the results that we've heard is showing based on supply chain attacks now of course this shows just single classes and single nodes in the results but let's say that if we talk about supply chain attacks um how can we actually mitigate these detects and here we can make actually a graph relation so we can say oh not known a text but no mitigations so we can say on mitigation show the name of the medication and let's remove the certainty so running this query says that for supply chain compromise you you you have you can update software or you can do vulnerability a vulnerability scanning and when it comes to a comprising hardware supply chain you can do a boot integrity so this is a simple example how you see we can mix the machinery model searching and the traditional graph relations but we can also go one step further so for example what do we need to do um if something happened in our in our data landscape and or in a software landscape and we wouldn't solve that problem so just let's be very uh descriptive and let's ask a um a solution to a simple set of concepts that we're going to ask from bv8 that somehow should be hidden in the meter in metres attack framework so a port was opened at the hosts firewall so same query but we're now going to say well inside the the attack they somehow opened they opened a port at the hostess firewall we want to be at least 80 certain and we want immediately so shown what the known mitigations are for these solutions and we want to see names for these types of attacks so what we see here is that opening a port on the host's firewall is known as traffic signaling or port knocking and we see that the known mitigation is always to filter the network traffic we can even go a step further so if we say well so what is it actually that we need to do then we can also ask for the description of this mitigation and then you see that the twice shows the same mitigation so we know what we need to do to solve this problem so that is the basic demo from the meteor attack framework within weave yet there are a few more things that i want to share with you before i end this presentation once is that i want to re-emphasize that we've hate runs like a normal database on-prem or in private cloud or in the private public cloud or even in the public cloud we have custom security nlp models we have a custom review module that deals with the cyber security models themselves viviet comes with direct api integration so as you have seen from the demo and from the documentation we have a set of client libraries which we are constantly updating and improving and then you also have the graph representations of frameworks like for example the metra deck framework i would like to emphasize that mitra was in this demo just an example you can use any structure any framework or any schema that you would like to use within wev8 for your needs so thank you very much for listening my name is bob fallout feel free to reach out to me and bob at samada technology if you want to learn more about how vp8 can help in your domain or with your the challenges that you have on semi.technology you can also find our open course software so you can play around with it you can try it out so i'm looking very much forward to hearing from you and hopefully we can help you taking the next step in intelligent threat analysis thank you so much for listening bye ", "type": "Video", "name": "Weaviate for Cybersecurity (introduction and demo based on MITRE ATT&amp;CK) \u2013 CloudNativeCon 2021", "path": "", "link": "https://www.youtube.com/watch?v=nM6_99GMpNY", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}