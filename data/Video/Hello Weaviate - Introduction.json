{"text": "Weaviate Academy Unit 1: Introduction. \nhey there good to see you again \nwaviate is an open source Vector \ndatabase but what does that mean exactly \nyou might be familiar with traditional \ndatabases such as relational databases \nthat use SQL \nour database can Catalog Store and \nretrieve information \nnow a vector database can also carry out \nthese tasks but with a key difference \nbeing that they can perform these tasks \nbased on similarity \nimagine that you're searching for \nobjects that matches a concept or an \nidea \nusing SQL you might construct a query \nsomething like this \nand that would return all objects that \nmatch this query \nbut in order to do this successfully you \nhave to know all the possible terms that \nmight have been used and then you still \nhave to come up with some way of ranking \nthe results \nof vector database on the other hand \nmakes this job easier by enabling \nsearches based on similarity \nso instead you could perform a query \nlike this \nand it would return a list of entries \nthat are ranked by their similarity to \nthe query which was simply the central \nconcept \nand what's more aviate indexes the data \nbased on their similarity making this \ntype of data retrieval lightning fast \nwe think of databases as something \nthat's used to Simply retrieve \ninformation \nhowever weviate takes static information \nand makes it dynamic \nwhat we're trying to say there is that \nwebia can combined retrieval with the \npower of modern AI driven language \nmodels \nfor example waviate can answer questions \ngenerate content and synthesize passages \nusing retrieved information \nin this section you'll see examples of \nthis and you might start to see how much \nthese capabilities can change the way we \ninteract with data \nthanks and we'll see you next time \n", "type": "Video", "name": "Hello Weaviate - Introduction", "path": "", "link": "https://www.youtube.com/watch?v=MQgm126pKkU", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": [{"text": "hey there good to see you again", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 0, "tokens": 0, "vector": null, "score": 0}, {"text": "waviate is an open source Vector", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1, "tokens": 0, "vector": null, "score": 0}, {"text": "database but what does that mean exactly", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 2, "tokens": 0, "vector": null, "score": 0}, {"text": "you might be familiar with traditional", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 3, "tokens": 0, "vector": null, "score": 0}, {"text": "databases such as relational databases", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 4, "tokens": 0, "vector": null, "score": 0}, {"text": "that use SQL", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 5, "tokens": 0, "vector": null, "score": 0}, {"text": "our database can Catalog Store and", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 6, "tokens": 0, "vector": null, "score": 0}, {"text": "retrieve information", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 7, "tokens": 0, "vector": null, "score": 0}, {"text": "now a vector database can also carry out", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 8, "tokens": 0, "vector": null, "score": 0}, {"text": "these tasks but with a key difference", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 9, "tokens": 0, "vector": null, "score": 0}, {"text": "being that they can perform these tasks", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 10, "tokens": 0, "vector": null, "score": 0}, {"text": "based on similarity", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 11, "tokens": 0, "vector": null, "score": 0}, {"text": "imagine that you're searching for", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 12, "tokens": 0, "vector": null, "score": 0}, {"text": "objects that matches a concept or an", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 13, "tokens": 0, "vector": null, "score": 0}, {"text": "idea", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 14, "tokens": 0, "vector": null, "score": 0}, {"text": "using SQL you might construct a query", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 15, "tokens": 0, "vector": null, "score": 0}, {"text": "something like this", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 16, "tokens": 0, "vector": null, "score": 0}, {"text": "and that would return all objects that", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 17, "tokens": 0, "vector": null, "score": 0}, {"text": "match this query", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 18, "tokens": 0, "vector": null, "score": 0}, {"text": "but in order to do this successfully you", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 19, "tokens": 0, "vector": null, "score": 0}, {"text": "have to know all the possible terms that", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 20, "tokens": 0, "vector": null, "score": 0}, {"text": "might have been used and then you still", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 21, "tokens": 0, "vector": null, "score": 0}, {"text": "have to come up with some way of ranking", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 22, "tokens": 0, "vector": null, "score": 0}, {"text": "the results", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 23, "tokens": 0, "vector": null, "score": 0}, {"text": "of vector database on the other hand", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 24, "tokens": 0, "vector": null, "score": 0}, {"text": "makes this job easier by enabling", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 25, "tokens": 0, "vector": null, "score": 0}, {"text": "searches based on similarity", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 26, "tokens": 0, "vector": null, "score": 0}, {"text": "so instead you could perform a query", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 27, "tokens": 0, "vector": null, "score": 0}, {"text": "like this", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 28, "tokens": 0, "vector": null, "score": 0}, {"text": "and it would return a list of entries", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 29, "tokens": 0, "vector": null, "score": 0}, {"text": "that are ranked by their similarity to", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 30, "tokens": 0, "vector": null, "score": 0}, {"text": "the query which was simply the central", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 31, "tokens": 0, "vector": null, "score": 0}, {"text": "concept", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 32, "tokens": 0, "vector": null, "score": 0}, {"text": "and what's more aviate indexes the data", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 33, "tokens": 0, "vector": null, "score": 0}, {"text": "based on their similarity making this", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 34, "tokens": 0, "vector": null, "score": 0}, {"text": "type of data retrieval lightning fast", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 35, "tokens": 0, "vector": null, "score": 0}, {"text": "we think of databases as something", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 36, "tokens": 0, "vector": null, "score": 0}, {"text": "that's used to Simply retrieve", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 37, "tokens": 0, "vector": null, "score": 0}, {"text": "information", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 38, "tokens": 0, "vector": null, "score": 0}, {"text": "however weviate takes static information", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 39, "tokens": 0, "vector": null, "score": 0}, {"text": "and makes it dynamic", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 40, "tokens": 0, "vector": null, "score": 0}, {"text": "what we're trying to say there is that", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 41, "tokens": 0, "vector": null, "score": 0}, {"text": "webia can combined retrieval with the", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 42, "tokens": 0, "vector": null, "score": 0}, {"text": "power of modern AI driven language", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 43, "tokens": 0, "vector": null, "score": 0}, {"text": "models", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 44, "tokens": 0, "vector": null, "score": 0}, {"text": "for example waviate can answer questions", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 45, "tokens": 0, "vector": null, "score": 0}, {"text": "generate content and synthesize passages", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 46, "tokens": 0, "vector": null, "score": 0}, {"text": "using retrieved information", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 47, "tokens": 0, "vector": null, "score": 0}, {"text": "in this section you'll see examples of", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 48, "tokens": 0, "vector": null, "score": 0}, {"text": "this and you might start to see how much", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 49, "tokens": 0, "vector": null, "score": 0}, {"text": "these capabilities can change the way we", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 50, "tokens": 0, "vector": null, "score": 0}, {"text": "interact with data", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 51, "tokens": 0, "vector": null, "score": 0}, {"text": "thanks and we'll see you next time", "doc_name": "Hello Weaviate - Introduction", "doc_type": "Video", "doc_uuid": "", "chunk_id": 52, "tokens": 0, "vector": null, "score": 0}]}