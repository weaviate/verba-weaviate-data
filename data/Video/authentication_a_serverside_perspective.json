{"text": "See how to configure Weaviate to allow various authentication options. Learn how to allow public access, or to set it up to require ... \nhi there in this video we'll show you how to configure weeviate from a server-side perspective you probably know that wev8 offers multiple authentication options which are Anonymous access API key authentication and or IDC Authentication we'll show you how to configure these options with examples using a Docker based vb8 instance note that the principles are applicable to kubernetes as well although the variable names might be different for Helm charts please also note that these are currently not applicable WCS instances because they come pre-configured let's get started let's start by running weeviate without any authentication now you might remember that running waviate with Docker involves setting up a configuration file like this running Docker compose up Dash D on the shell and running Docker PS we can see there's a wave 8 instance running and notice this variable in the configuration file as the name suggests it means that anyone can access this instance user GPU notebook sale that I've set up for this demo will instantiate a client here and check its connection and just confirm that it can perform different types of tasks we'll read the schema and then write a new object and running the cell you can see it works just fine now let's see what happens if we switch Anonymous access off and restart waviate by running Docker compose down and Docker compose up again and now if we run the same cell as we did before you'll see that it takes quite a long time then aviate eventually throws an exception because it has refused our connection so now let's address that by introducing API key based Authentication to allow users to authenticate by API key we need to set up these three environment variables we'll start by enabling the API key Authentication and we'll add to a list of allowed Keys a test key and we'll add me as an allowed user and we'll just restart wave 8 by running the same command and to log into wavegate we can just go back to our GPU notebook and add the API key that we've defined as a parameter like so and with the API key defined you see that we can happily perform all three tasks next we'll show you how to define different levels of access for different users to do so we need to Define authorization variables which are these ones shown here first we'll need to enabled admin list and we'll Define users who will be part of the admin list and users that will be part of the read-only users list let's add a new user called Dave as a read-only user add him to the list of API key users and the corresponding API key as well now if we save those settings and restart vb8 once again and go to our Jupiter notebooks and swap out our key as the new key for Dave and run the cell you'll notice that the first two commands without any problems but we couldn't run the right last command as Dave does not have sufficient permissions to create objects if we did want to give Dave full read and write access we can do that by simply moving his name from the list of read-only users to the list of admin list users going through the same steps now all three commands run without any issues using Dave's API key setting up oidc is a very similar process to setting up API key access we need to set up these variables to match the settings of the token issuer let's start by enabling IDC now the rest of these settings will be unique to your token issuer in our case we'll use WCS as the token issuer and you can find those settings by navigating to the authentication page in our documentation now when you scroll down you'll see our instructions on how to configure weeviate as the resource these are the oidc settings to be used so we can just start to copy these inside configuration file starting with the oidc issuer the client ID and the username claim and lastly just as we did before we'll provide a specific level of permissions for the user and we'll do that by adding my username to the list of admin users let's now restart waviate and let's see if those credentials allow us to access waviate we'll just comment out this line specifying the API key and let's create a new variable specifying the oidc credentials the class to use here is the auth client password class and we just need to pass on the username and password as parameters like you see here I've saved them as environment variables just for security once you've done that pass on the credentials with this parameter as we did before and if we run the code you can see it works just fine specifying on oidc credentialed user as a read-only user is the same as before just get the username and instead of adding it to the admin list to users just add it to the read-only users so if we run the same cell we see that just as it did before it runs the first two commands just fine but it's not able to create an object as I don't have sufficient credentials we hope this video gave you a good idea of what you need to do to set up authentication and authorization for your webiate instance the variables set up are those that start with authentication and authorization like these and note that you can set up a combination of API key based access as well as oidc but keep in mind that Anonymous access will be disabled once API key or oidc authentication is switched on thanks for watching see you next time ", "type": "Video", "name": "authentication_a_serverside_perspective", "path": "", "link": "https://www.youtube.com/watch?v=0oxL1J0W-Hs", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}