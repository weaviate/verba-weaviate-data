{"text": "Vector databases and large language models (or LLMs) enable fast prototyping of systems that were incredibly difficult to build in ... \nhi it's Adam from we8 and welcome to \nanother episode in the series build with \nwe8 in today's digital age \nrecommendation systems have become an \nessential component of many online \napplications and services from product \nrecommendations to content suggestions \nthese systems help users discover new \nthings and make informed decisions every \nday in this video we're going to build a \nsimple recommendation system using weate \na purpose-built open source Vector data \ndatabase let's try it out together Point \nyour browser over to book rex. we. and \ntype in something that you want to learn \nabout the books that are surfaced will \ncontain semantically relevant \nsuggestions based on your query these \nsemantic relationships are found through \napproximate nearest neighbor search on \nVector embeddings Associated between \nyour query and the book details like the \nauthor the title and the description \nthis way we're not just judging a book \nby its cover to build this project we're \ngoing to create an instance of a we we8 \ncluster using the we8 cloud console \nwe'll create embeddings for about 7,000 \nbooks from a Kagel data set connect to a \nlarge language model hosted on open Ai \nand then I'll walk through the nextjs \napplication doing semantic search over \nthe data set to surface those \nsemantically related books to you as \nalways here at we8 we love open source \nand so we've made this example available \nto you on GitHub and repet we're excited \nto see what you build yourself with this \nsample and just a heads up some of the \ncode in this video may be out of date by \nthe time you watch it so keep an eye on \nthe git repo for the latest changes if \nthis sounds like an interesting project \nto you let's go build it right \nnow the first thing we'll do is register \non we8 cloud services or WCS it's super \neasy and will only take you a minute or \ntwo to get to WCS Point your browser to \nconsole. we v8. cloud and if you need \npause the video to sign up for an \naccount once you're logged in to weate \nconsole we'll create a new cluster for \nthis example we can use the free cluster \ntier give your cluster a memorable name \nmake sure enable authentication is set \nto yes and then when you're done \nreviewing the details go ahead and click \ncreate give this a bit of time and let \nWCS deploy your cluster then we'll take \nnote of the cluster URL and the API key \nfor your we8 instance when ready click \ndetails on our newly created cluster \nthis will create an expanded view of the \ncluster go ahead and copy the cluster \nURL and save it in a text file or notes \nfile so that you can reference it later \nand now for the API key back in WCS \nclick API keys and then copy the admin \nkey save it in that same text file for \nreference \nlater and we're done with setting up our \nwe8 cluster we'll also need an API key \nfrom open AI so that we can use their \nmodel to generate our embeddings to do c \nIC search note that since we're using an \nopen AI model each time you make a call \nto create an embedding or to query the \nvector database there will be a small \ncharge on your API key if you already \nhave an API key from openai you can use \nthat in this project too if you don't \nhave an API key yet go ahead and \nregister for an account on \nopen.com once you're logged in select \nAPI then go to your avatar at the top \nright of the screen select view API Keys \ncreate a new Secret key and then give it \na name of your choice and finally go \nahead and create it copy the key and put \nit into your notes file for reference \nlater and this should be everything \nlet's go ahead and make sure that we \nactually have the source code now if \nyou're watching this in repet you'll \nlikely have already cloned the template \nand you're ready to go if you're \nwatching this on YouTube or you want to \nbuild this locally you can find the link \nto the git repository in the description \nbelow clone the repository by \ndownloading the zip from GitHub or \ncloning it in your shell environment \nwhen you have the files locally go ahead \nand open up the project in your editor \nof choice before we get into creating \nour embeddings let's go and set up our \nenvironment we need to put the cluster \nURL and the API Keys into our \nenvironment variables if you're building \nthis locally you can use your editor of \nchoice to put them in anv file you can \ncopy the env. sample into a newv file \nuse the variable names as reference in \nthe file and change the placeholders \nwith your values if you're building this \nin repet you can pull up the secrets \ntool on the bottom left of the screen \nand insert your environment variables \nthere instead just make sure to use the \nsame names as those referenced in the \nenv. sample awesome so our environment \nis set up let's get going with \npopulating the vector database with the \nbook's data set and their Vector \nrepresentations as mentioned earlier \nwe'll be using a data set from Kegel it \ncontains contains about 7,000 books with \ndetails like the ISBN number the \ndescription a link to the book cover and \nmore if you're interested in reading \nmore about the data set in Kagel you can \nfind the link in the description below \nthere's a folder called Data pipeline in \nour repository that has two scripts and \nthe kagle data set this data is stored \nin a file called 7k- books dk. CSV feel \nfree to pause the video and take a look \nthrough it one of the scripts populate \npy is respond responsible for creating \nvectors and storing those vectors in \nwe8 let's look at populate py in Greater \ndetail first we create a we V8 client \nobject that receives the we V8 cluster \nURL the we V8 API key and the open AI \nAPI key in case the script was run \nbefore we delete any pre-existing schema \ncalled book just to you know keep the \ndatabase fresh you probably don't want \nto do this in production but for this \nsample we do it to make sure our data is \nconsistent between \nruns then we create a schema for our \nbooks the schema contains configuration \ndetails for how we want to vectorize the \ndata as you can see we are using the \ntextto V openai vectorizer and in the \nmodule configuration we're using Ada O2 \nas the foundation model to generate our \nembeddings finally we'll iterate through \neach row in our CSV data set to create \nvectors for each book and we use weh \nbatch creation API to create the vector \nembeddings and to store the embeddings \nand related data objects in the we8 \ncluster okay so now that you know how \nthis works let's run it to do that we of \ncourse need to install some dependencies \nset up a python virtual environment for \nthese dependencies and then run pip \ninstall R requirements.txt in our \nterminal to install the official we8 \npython client along with several other \ndependencies needed for these scripts to \nrun if you're repet I think these should \nautomatically be installed into the \nrepple then run python data pipeline \npopulate py when it finishes you'll have \ndata in your we8 cluster and we can \nbegin doing some fun and interesting \nsearches over \nit with the data in the vector database \nlet's run a simple semantic search over \nour embeddings in we8 and get a better \nunderstanding of how the data is sent \nback to us as a result of the query \nthere's a script called search. py in \nthe data pipeline directory it \ndemonstrates a semantic search query \nagain to interact with we8 we create a \nwe8 client object then we create an \nobject called near text that lists \nseveral Concepts that we want to do our \nsearch against in the vector database \nnow the search is not going to look for \nexact matches but rather semantically \nrelated Concepts to those in our list \nthe query is executed against the weed \nclient as shown on screen and the \nresults are then printed to screen feel \nfree to change some of the concepts in \nyour text and run the script several \ntimes just to get an understanding of \nwhat the responses look like running the \nscript should be as easy as running \npopulate py in your shell run python \ndata pipeline search. py looking through \nthe results you should see a large \nobject sent back with a list of books \ndeeply nested in the response as you can \nsee these book results should be \nsemantically similar to those in the \nnear text Concepts from the query all \nright now that we know how we can \ninteract with we8 to find semantically \nsimilar items I'm going to show you how \nthe nextjs application uses this to \nsurface those recommendations to the web \ninterface I used create next app in \norder to create the nextjs project and I \nconfigured Tailwind CSS from the get-go \nfor styling I've kept the application as \nsimple as possible by limiting the \ncomplexity of the interface there's an \ninput field to receive the prompt from \nthe user a grid view to show recommended \nbooks and then a modal overlay to act as \na single Book View where we can read the \ndescription and see other book \ndetails the jsx for the application \ncontains a form element which contains a \nsubmission button and an input element \nwith various attributes the input field \nis most interesting because it's What \nreceives the user's input we store that \nin a value attribute as query this query \nvariable is a state managed in our \ncomponent up at the top of this index \nfile when text changes in the input \nfield \nthe set query function is triggered and \nthe query state is updated this is just \nregular react stuff if this is new to \nyou check out a course in react or \nnextjs to get a better understanding of \nhow it works there's also some beautiful \nclass tags that style the input field \nthrough the power of Tailwind CSS The \nForum element has onsubmit that triggers \na function called get recommendations \nwhen the submission button is clicked \nlet's go take a look at get \nrecommendations the first thing is some \nlightweight validation that ensures the \nuser has actually typed something into \nthe input field then we can trigger a \nfetch call against API \nreccommendations once we get a response \nwe extract the book data from the \npayload if you look deeply enough at the \nresults from search. py we know we can \nget the list of recommended books from \nrecommendations. dat. \ngetbook we then store it in a state \nvariable and with this we have the book \nrecommendations data in the next xjs \nclient \napplication let's take a look at how we \nset up the API endpoint on our nextjs \napp that queries weate on our data set \nin the pages folder there should be a \ndirectory called API and within it is a \nrecommendations. TS file that will be \ntriggered when an HTTP request is sent \nto /i/ \nreccommendations the recommendations. TS \nendpoint will extract the query from the \nrequest body and then pass it into the \nwe client as a near text object and \nquery the book vectors in much the same \nway that search. py did the result is \nthen sent back to the client which we've \nalready set up to be stored in the state \nvariable of the nextjs \napplication the recommendation grid \nappears with a list of books that come \nfrom the semantic search result from our \nnear text query we have these stored in \na recommended books variable after a \nquery is made in the J SX of index we \nmap through recommended books and this \nReturns the relevant divs that represent \nthe recommendations grid the grid is \nstyled in a flex wrap div so that they \nexpand into the parent container and \nwrap around when a row is filled as we \nmap through those recommendations we \nrender book details to the screen such \nas the book thumbnail the book title and \na button to learn more about the book \nwhen the button is tapped we render \nmodal on screen there's some logic that \nwill we select the book and put it into \na state variable so that the modal knows \nhow to display it and we also set an \nadditional State variable to force the \nmodal to come on a \nscreen let's briefly look at the modal \nmechanics when the learn more button is \nclicked the open modal function is \ntriggered and receives the book details \nso that we know which one was selected \nand we set that book in the selected \nbook State \nvariable we'll also have a state to \nmanage the viewability of the modal \nwe'll call modal is open when this state \nis set true the modal is rendered to the \nscreen this modal contains the thumbnail \nof the book the author details genre \naverage rating published year and \ndescription and these are all rendered \nfrom the selected book State since we \nalso have the international standard \nbook number or ISBN for this book we can \nmake a naive query against Amazon to \nshow that book on an Amazon search \nresult when clicked this is just for fun \nlastly will also include a close modal \nbutton that will close the modal from \nview okay that's all there really is to \nusing we V8 to create a simple \nrecommendation system in a nextjs \napplication with the simple logic seen \nfrom this video we prototyped a simple \nyet capable recommendation system using \nwe8 Vector database thanks for watching \nthis video we hope you found it \ninformative happy building with we8 and \nif you have any questions please share \nwith us on our community slack or the \nwe8 forums the details are in the \ndescription below see you next \n[Music] \ntime \n", "type": "Video", "name": "How to Build a Recommendation System with AI and Semantic Search", "path": "", "link": "https://www.youtube.com/watch?v=SF1ZlRjVsxw", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": [{"text": "hi it's Adam from we8 and welcome to", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 0, "tokens": 0, "vector": null, "score": 0}, {"text": "another episode in the series build with", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1, "tokens": 0, "vector": null, "score": 0}, {"text": "we8 in today's digital age", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 2, "tokens": 0, "vector": null, "score": 0}, {"text": "recommendation systems have become an", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 3, "tokens": 0, "vector": null, "score": 0}, {"text": "essential component of many online", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 4, "tokens": 0, "vector": null, "score": 0}, {"text": "applications and services from product", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 5, "tokens": 0, "vector": null, "score": 0}, {"text": "recommendations to content suggestions", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 6, "tokens": 0, "vector": null, "score": 0}, {"text": "these systems help users discover new", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 7, "tokens": 0, "vector": null, "score": 0}, {"text": "things and make informed decisions every", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 8, "tokens": 0, "vector": null, "score": 0}, {"text": "day in this video we're going to build a", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 9, "tokens": 0, "vector": null, "score": 0}, {"text": "simple recommendation system using weate", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 10, "tokens": 0, "vector": null, "score": 0}, {"text": "a purpose-built open source Vector data", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 11, "tokens": 0, "vector": null, "score": 0}, {"text": "database let's try it out together Point", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 12, "tokens": 0, "vector": null, "score": 0}, {"text": "your browser over to book rex. we. and", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 13, "tokens": 0, "vector": null, "score": 0}, {"text": "type in something that you want to learn", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 14, "tokens": 0, "vector": null, "score": 0}, {"text": "about the books that are surfaced will", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 15, "tokens": 0, "vector": null, "score": 0}, {"text": "contain semantically relevant", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 16, "tokens": 0, "vector": null, "score": 0}, {"text": "suggestions based on your query these", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 17, "tokens": 0, "vector": null, "score": 0}, {"text": "semantic relationships are found through", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 18, "tokens": 0, "vector": null, "score": 0}, {"text": "approximate nearest neighbor search on", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 19, "tokens": 0, "vector": null, "score": 0}, {"text": "Vector embeddings Associated between", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 20, "tokens": 0, "vector": null, "score": 0}, {"text": "your query and the book details like the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 21, "tokens": 0, "vector": null, "score": 0}, {"text": "author the title and the description", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 22, "tokens": 0, "vector": null, "score": 0}, {"text": "this way we're not just judging a book", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 23, "tokens": 0, "vector": null, "score": 0}, {"text": "by its cover to build this project we're", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 24, "tokens": 0, "vector": null, "score": 0}, {"text": "going to create an instance of a we we8", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 25, "tokens": 0, "vector": null, "score": 0}, {"text": "cluster using the we8 cloud console", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 26, "tokens": 0, "vector": null, "score": 0}, {"text": "we'll create embeddings for about 7,000", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 27, "tokens": 0, "vector": null, "score": 0}, {"text": "books from a Kagel data set connect to a", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 28, "tokens": 0, "vector": null, "score": 0}, {"text": "large language model hosted on open Ai", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 29, "tokens": 0, "vector": null, "score": 0}, {"text": "and then I'll walk through the nextjs", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 30, "tokens": 0, "vector": null, "score": 0}, {"text": "application doing semantic search over", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 31, "tokens": 0, "vector": null, "score": 0}, {"text": "the data set to surface those", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 32, "tokens": 0, "vector": null, "score": 0}, {"text": "semantically related books to you as", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 33, "tokens": 0, "vector": null, "score": 0}, {"text": "always here at we8 we love open source", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 34, "tokens": 0, "vector": null, "score": 0}, {"text": "and so we've made this example available", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 35, "tokens": 0, "vector": null, "score": 0}, {"text": "to you on GitHub and repet we're excited", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 36, "tokens": 0, "vector": null, "score": 0}, {"text": "to see what you build yourself with this", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 37, "tokens": 0, "vector": null, "score": 0}, {"text": "sample and just a heads up some of the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 38, "tokens": 0, "vector": null, "score": 0}, {"text": "code in this video may be out of date by", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 39, "tokens": 0, "vector": null, "score": 0}, {"text": "the time you watch it so keep an eye on", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 40, "tokens": 0, "vector": null, "score": 0}, {"text": "the git repo for the latest changes if", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 41, "tokens": 0, "vector": null, "score": 0}, {"text": "this sounds like an interesting project", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 42, "tokens": 0, "vector": null, "score": 0}, {"text": "to you let's go build it right", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 43, "tokens": 0, "vector": null, "score": 0}, {"text": "now the first thing we'll do is register", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 44, "tokens": 0, "vector": null, "score": 0}, {"text": "on we8 cloud services or WCS it's super", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 45, "tokens": 0, "vector": null, "score": 0}, {"text": "easy and will only take you a minute or", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 46, "tokens": 0, "vector": null, "score": 0}, {"text": "two to get to WCS Point your browser to", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 47, "tokens": 0, "vector": null, "score": 0}, {"text": "console. we v8. cloud and if you need", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 48, "tokens": 0, "vector": null, "score": 0}, {"text": "pause the video to sign up for an", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 49, "tokens": 0, "vector": null, "score": 0}, {"text": "account once you're logged in to weate", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 50, "tokens": 0, "vector": null, "score": 0}, {"text": "console we'll create a new cluster for", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 51, "tokens": 0, "vector": null, "score": 0}, {"text": "this example we can use the free cluster", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 52, "tokens": 0, "vector": null, "score": 0}, {"text": "tier give your cluster a memorable name", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 53, "tokens": 0, "vector": null, "score": 0}, {"text": "make sure enable authentication is set", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 54, "tokens": 0, "vector": null, "score": 0}, {"text": "to yes and then when you're done", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 55, "tokens": 0, "vector": null, "score": 0}, {"text": "reviewing the details go ahead and click", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 56, "tokens": 0, "vector": null, "score": 0}, {"text": "create give this a bit of time and let", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 57, "tokens": 0, "vector": null, "score": 0}, {"text": "WCS deploy your cluster then we'll take", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 58, "tokens": 0, "vector": null, "score": 0}, {"text": "note of the cluster URL and the API key", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 59, "tokens": 0, "vector": null, "score": 0}, {"text": "for your we8 instance when ready click", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 60, "tokens": 0, "vector": null, "score": 0}, {"text": "details on our newly created cluster", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 61, "tokens": 0, "vector": null, "score": 0}, {"text": "this will create an expanded view of the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 62, "tokens": 0, "vector": null, "score": 0}, {"text": "cluster go ahead and copy the cluster", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 63, "tokens": 0, "vector": null, "score": 0}, {"text": "URL and save it in a text file or notes", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 64, "tokens": 0, "vector": null, "score": 0}, {"text": "file so that you can reference it later", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 65, "tokens": 0, "vector": null, "score": 0}, {"text": "and now for the API key back in WCS", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 66, "tokens": 0, "vector": null, "score": 0}, {"text": "click API keys and then copy the admin", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 67, "tokens": 0, "vector": null, "score": 0}, {"text": "key save it in that same text file for", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 68, "tokens": 0, "vector": null, "score": 0}, {"text": "reference", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 69, "tokens": 0, "vector": null, "score": 0}, {"text": "later and we're done with setting up our", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 70, "tokens": 0, "vector": null, "score": 0}, {"text": "we8 cluster we'll also need an API key", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 71, "tokens": 0, "vector": null, "score": 0}, {"text": "from open AI so that we can use their", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 72, "tokens": 0, "vector": null, "score": 0}, {"text": "model to generate our embeddings to do c", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 73, "tokens": 0, "vector": null, "score": 0}, {"text": "IC search note that since we're using an", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 74, "tokens": 0, "vector": null, "score": 0}, {"text": "open AI model each time you make a call", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 75, "tokens": 0, "vector": null, "score": 0}, {"text": "to create an embedding or to query the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 76, "tokens": 0, "vector": null, "score": 0}, {"text": "vector database there will be a small", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 77, "tokens": 0, "vector": null, "score": 0}, {"text": "charge on your API key if you already", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 78, "tokens": 0, "vector": null, "score": 0}, {"text": "have an API key from openai you can use", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 79, "tokens": 0, "vector": null, "score": 0}, {"text": "that in this project too if you don't", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 80, "tokens": 0, "vector": null, "score": 0}, {"text": "have an API key yet go ahead and", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 81, "tokens": 0, "vector": null, "score": 0}, {"text": "register for an account on", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 82, "tokens": 0, "vector": null, "score": 0}, {"text": "open.com once you're logged in select", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 83, "tokens": 0, "vector": null, "score": 0}, {"text": "API then go to your avatar at the top", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 84, "tokens": 0, "vector": null, "score": 0}, {"text": "right of the screen select view API Keys", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 85, "tokens": 0, "vector": null, "score": 0}, {"text": "create a new Secret key and then give it", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 86, "tokens": 0, "vector": null, "score": 0}, {"text": "a name of your choice and finally go", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 87, "tokens": 0, "vector": null, "score": 0}, {"text": "ahead and create it copy the key and put", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 88, "tokens": 0, "vector": null, "score": 0}, {"text": "it into your notes file for reference", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 89, "tokens": 0, "vector": null, "score": 0}, {"text": "later and this should be everything", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 90, "tokens": 0, "vector": null, "score": 0}, {"text": "let's go ahead and make sure that we", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 91, "tokens": 0, "vector": null, "score": 0}, {"text": "actually have the source code now if", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 92, "tokens": 0, "vector": null, "score": 0}, {"text": "you're watching this in repet you'll", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 93, "tokens": 0, "vector": null, "score": 0}, {"text": "likely have already cloned the template", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 94, "tokens": 0, "vector": null, "score": 0}, {"text": "and you're ready to go if you're", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 95, "tokens": 0, "vector": null, "score": 0}, {"text": "watching this on YouTube or you want to", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 96, "tokens": 0, "vector": null, "score": 0}, {"text": "build this locally you can find the link", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 97, "tokens": 0, "vector": null, "score": 0}, {"text": "to the git repository in the description", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 98, "tokens": 0, "vector": null, "score": 0}, {"text": "below clone the repository by", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 99, "tokens": 0, "vector": null, "score": 0}, {"text": "downloading the zip from GitHub or", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 100, "tokens": 0, "vector": null, "score": 0}, {"text": "cloning it in your shell environment", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 101, "tokens": 0, "vector": null, "score": 0}, {"text": "when you have the files locally go ahead", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 102, "tokens": 0, "vector": null, "score": 0}, {"text": "and open up the project in your editor", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 103, "tokens": 0, "vector": null, "score": 0}, {"text": "of choice before we get into creating", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 104, "tokens": 0, "vector": null, "score": 0}, {"text": "our embeddings let's go and set up our", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 105, "tokens": 0, "vector": null, "score": 0}, {"text": "environment we need to put the cluster", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 106, "tokens": 0, "vector": null, "score": 0}, {"text": "URL and the API Keys into our", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 107, "tokens": 0, "vector": null, "score": 0}, {"text": "environment variables if you're building", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 108, "tokens": 0, "vector": null, "score": 0}, {"text": "this locally you can use your editor of", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 109, "tokens": 0, "vector": null, "score": 0}, {"text": "choice to put them in anv file you can", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 110, "tokens": 0, "vector": null, "score": 0}, {"text": "copy the env. sample into a newv file", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 111, "tokens": 0, "vector": null, "score": 0}, {"text": "use the variable names as reference in", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 112, "tokens": 0, "vector": null, "score": 0}, {"text": "the file and change the placeholders", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 113, "tokens": 0, "vector": null, "score": 0}, {"text": "with your values if you're building this", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 114, "tokens": 0, "vector": null, "score": 0}, {"text": "in repet you can pull up the secrets", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 115, "tokens": 0, "vector": null, "score": 0}, {"text": "tool on the bottom left of the screen", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 116, "tokens": 0, "vector": null, "score": 0}, {"text": "and insert your environment variables", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 117, "tokens": 0, "vector": null, "score": 0}, {"text": "there instead just make sure to use the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 118, "tokens": 0, "vector": null, "score": 0}, {"text": "same names as those referenced in the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 119, "tokens": 0, "vector": null, "score": 0}, {"text": "env. sample awesome so our environment", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 120, "tokens": 0, "vector": null, "score": 0}, {"text": "is set up let's get going with", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 121, "tokens": 0, "vector": null, "score": 0}, {"text": "populating the vector database with the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 122, "tokens": 0, "vector": null, "score": 0}, {"text": "book's data set and their Vector", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 123, "tokens": 0, "vector": null, "score": 0}, {"text": "representations as mentioned earlier", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 124, "tokens": 0, "vector": null, "score": 0}, {"text": "we'll be using a data set from Kegel it", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 125, "tokens": 0, "vector": null, "score": 0}, {"text": "contains contains about 7,000 books with", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 126, "tokens": 0, "vector": null, "score": 0}, {"text": "details like the ISBN number the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 127, "tokens": 0, "vector": null, "score": 0}, {"text": "description a link to the book cover and", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 128, "tokens": 0, "vector": null, "score": 0}, {"text": "more if you're interested in reading", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 129, "tokens": 0, "vector": null, "score": 0}, {"text": "more about the data set in Kagel you can", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 130, "tokens": 0, "vector": null, "score": 0}, {"text": "find the link in the description below", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 131, "tokens": 0, "vector": null, "score": 0}, {"text": "there's a folder called Data pipeline in", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 132, "tokens": 0, "vector": null, "score": 0}, {"text": "our repository that has two scripts and", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 133, "tokens": 0, "vector": null, "score": 0}, {"text": "the kagle data set this data is stored", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 134, "tokens": 0, "vector": null, "score": 0}, {"text": "in a file called 7k- books dk. CSV feel", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 135, "tokens": 0, "vector": null, "score": 0}, {"text": "free to pause the video and take a look", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 136, "tokens": 0, "vector": null, "score": 0}, {"text": "through it one of the scripts populate", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 137, "tokens": 0, "vector": null, "score": 0}, {"text": "py is respond responsible for creating", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 138, "tokens": 0, "vector": null, "score": 0}, {"text": "vectors and storing those vectors in", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 139, "tokens": 0, "vector": null, "score": 0}, {"text": "we8 let's look at populate py in Greater", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 140, "tokens": 0, "vector": null, "score": 0}, {"text": "detail first we create a we V8 client", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 141, "tokens": 0, "vector": null, "score": 0}, {"text": "object that receives the we V8 cluster", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 142, "tokens": 0, "vector": null, "score": 0}, {"text": "URL the we V8 API key and the open AI", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 143, "tokens": 0, "vector": null, "score": 0}, {"text": "API key in case the script was run", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 144, "tokens": 0, "vector": null, "score": 0}, {"text": "before we delete any pre-existing schema", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 145, "tokens": 0, "vector": null, "score": 0}, {"text": "called book just to you know keep the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 146, "tokens": 0, "vector": null, "score": 0}, {"text": "database fresh you probably don't want", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 147, "tokens": 0, "vector": null, "score": 0}, {"text": "to do this in production but for this", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 148, "tokens": 0, "vector": null, "score": 0}, {"text": "sample we do it to make sure our data is", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 149, "tokens": 0, "vector": null, "score": 0}, {"text": "consistent between", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 150, "tokens": 0, "vector": null, "score": 0}, {"text": "runs then we create a schema for our", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 151, "tokens": 0, "vector": null, "score": 0}, {"text": "books the schema contains configuration", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 152, "tokens": 0, "vector": null, "score": 0}, {"text": "details for how we want to vectorize the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 153, "tokens": 0, "vector": null, "score": 0}, {"text": "data as you can see we are using the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 154, "tokens": 0, "vector": null, "score": 0}, {"text": "textto V openai vectorizer and in the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 155, "tokens": 0, "vector": null, "score": 0}, {"text": "module configuration we're using Ada O2", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 156, "tokens": 0, "vector": null, "score": 0}, {"text": "as the foundation model to generate our", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 157, "tokens": 0, "vector": null, "score": 0}, {"text": "embeddings finally we'll iterate through", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 158, "tokens": 0, "vector": null, "score": 0}, {"text": "each row in our CSV data set to create", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 159, "tokens": 0, "vector": null, "score": 0}, {"text": "vectors for each book and we use weh", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 160, "tokens": 0, "vector": null, "score": 0}, {"text": "batch creation API to create the vector", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 161, "tokens": 0, "vector": null, "score": 0}, {"text": "embeddings and to store the embeddings", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 162, "tokens": 0, "vector": null, "score": 0}, {"text": "and related data objects in the we8", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 163, "tokens": 0, "vector": null, "score": 0}, {"text": "cluster okay so now that you know how", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 164, "tokens": 0, "vector": null, "score": 0}, {"text": "this works let's run it to do that we of", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 165, "tokens": 0, "vector": null, "score": 0}, {"text": "course need to install some dependencies", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 166, "tokens": 0, "vector": null, "score": 0}, {"text": "set up a python virtual environment for", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 167, "tokens": 0, "vector": null, "score": 0}, {"text": "these dependencies and then run pip", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 168, "tokens": 0, "vector": null, "score": 0}, {"text": "install R requirements.txt in our", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 169, "tokens": 0, "vector": null, "score": 0}, {"text": "terminal to install the official we8", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 170, "tokens": 0, "vector": null, "score": 0}, {"text": "python client along with several other", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 171, "tokens": 0, "vector": null, "score": 0}, {"text": "dependencies needed for these scripts to", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 172, "tokens": 0, "vector": null, "score": 0}, {"text": "run if you're repet I think these should", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 173, "tokens": 0, "vector": null, "score": 0}, {"text": "automatically be installed into the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 174, "tokens": 0, "vector": null, "score": 0}, {"text": "repple then run python data pipeline", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 175, "tokens": 0, "vector": null, "score": 0}, {"text": "populate py when it finishes you'll have", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 176, "tokens": 0, "vector": null, "score": 0}, {"text": "data in your we8 cluster and we can", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 177, "tokens": 0, "vector": null, "score": 0}, {"text": "begin doing some fun and interesting", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 178, "tokens": 0, "vector": null, "score": 0}, {"text": "searches over", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 179, "tokens": 0, "vector": null, "score": 0}, {"text": "it with the data in the vector database", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 180, "tokens": 0, "vector": null, "score": 0}, {"text": "let's run a simple semantic search over", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 181, "tokens": 0, "vector": null, "score": 0}, {"text": "our embeddings in we8 and get a better", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 182, "tokens": 0, "vector": null, "score": 0}, {"text": "understanding of how the data is sent", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 183, "tokens": 0, "vector": null, "score": 0}, {"text": "back to us as a result of the query", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 184, "tokens": 0, "vector": null, "score": 0}, {"text": "there's a script called search. py in", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 185, "tokens": 0, "vector": null, "score": 0}, {"text": "the data pipeline directory it", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 186, "tokens": 0, "vector": null, "score": 0}, {"text": "demonstrates a semantic search query", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 187, "tokens": 0, "vector": null, "score": 0}, {"text": "again to interact with we8 we create a", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 188, "tokens": 0, "vector": null, "score": 0}, {"text": "we8 client object then we create an", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 189, "tokens": 0, "vector": null, "score": 0}, {"text": "object called near text that lists", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 190, "tokens": 0, "vector": null, "score": 0}, {"text": "several Concepts that we want to do our", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 191, "tokens": 0, "vector": null, "score": 0}, {"text": "search against in the vector database", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 192, "tokens": 0, "vector": null, "score": 0}, {"text": "now the search is not going to look for", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 193, "tokens": 0, "vector": null, "score": 0}, {"text": "exact matches but rather semantically", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 194, "tokens": 0, "vector": null, "score": 0}, {"text": "related Concepts to those in our list", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 195, "tokens": 0, "vector": null, "score": 0}, {"text": "the query is executed against the weed", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 196, "tokens": 0, "vector": null, "score": 0}, {"text": "client as shown on screen and the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 197, "tokens": 0, "vector": null, "score": 0}, {"text": "results are then printed to screen feel", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 198, "tokens": 0, "vector": null, "score": 0}, {"text": "free to change some of the concepts in", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 199, "tokens": 0, "vector": null, "score": 0}, {"text": "your text and run the script several", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 200, "tokens": 0, "vector": null, "score": 0}, {"text": "times just to get an understanding of", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 201, "tokens": 0, "vector": null, "score": 0}, {"text": "what the responses look like running the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 202, "tokens": 0, "vector": null, "score": 0}, {"text": "script should be as easy as running", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 203, "tokens": 0, "vector": null, "score": 0}, {"text": "populate py in your shell run python", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 204, "tokens": 0, "vector": null, "score": 0}, {"text": "data pipeline search. py looking through", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 205, "tokens": 0, "vector": null, "score": 0}, {"text": "the results you should see a large", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 206, "tokens": 0, "vector": null, "score": 0}, {"text": "object sent back with a list of books", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 207, "tokens": 0, "vector": null, "score": 0}, {"text": "deeply nested in the response as you can", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 208, "tokens": 0, "vector": null, "score": 0}, {"text": "see these book results should be", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 209, "tokens": 0, "vector": null, "score": 0}, {"text": "semantically similar to those in the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 210, "tokens": 0, "vector": null, "score": 0}, {"text": "near text Concepts from the query all", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 211, "tokens": 0, "vector": null, "score": 0}, {"text": "right now that we know how we can", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 212, "tokens": 0, "vector": null, "score": 0}, {"text": "interact with we8 to find semantically", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 213, "tokens": 0, "vector": null, "score": 0}, {"text": "similar items I'm going to show you how", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 214, "tokens": 0, "vector": null, "score": 0}, {"text": "the nextjs application uses this to", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 215, "tokens": 0, "vector": null, "score": 0}, {"text": "surface those recommendations to the web", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 216, "tokens": 0, "vector": null, "score": 0}, {"text": "interface I used create next app in", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 217, "tokens": 0, "vector": null, "score": 0}, {"text": "order to create the nextjs project and I", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 218, "tokens": 0, "vector": null, "score": 0}, {"text": "configured Tailwind CSS from the get-go", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 219, "tokens": 0, "vector": null, "score": 0}, {"text": "for styling I've kept the application as", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 220, "tokens": 0, "vector": null, "score": 0}, {"text": "simple as possible by limiting the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 221, "tokens": 0, "vector": null, "score": 0}, {"text": "complexity of the interface there's an", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 222, "tokens": 0, "vector": null, "score": 0}, {"text": "input field to receive the prompt from", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 223, "tokens": 0, "vector": null, "score": 0}, {"text": "the user a grid view to show recommended", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 224, "tokens": 0, "vector": null, "score": 0}, {"text": "books and then a modal overlay to act as", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 225, "tokens": 0, "vector": null, "score": 0}, {"text": "a single Book View where we can read the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 226, "tokens": 0, "vector": null, "score": 0}, {"text": "description and see other book", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 227, "tokens": 0, "vector": null, "score": 0}, {"text": "details the jsx for the application", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 228, "tokens": 0, "vector": null, "score": 0}, {"text": "contains a form element which contains a", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 229, "tokens": 0, "vector": null, "score": 0}, {"text": "submission button and an input element", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 230, "tokens": 0, "vector": null, "score": 0}, {"text": "with various attributes the input field", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 231, "tokens": 0, "vector": null, "score": 0}, {"text": "is most interesting because it's What", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 232, "tokens": 0, "vector": null, "score": 0}, {"text": "receives the user's input we store that", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 233, "tokens": 0, "vector": null, "score": 0}, {"text": "in a value attribute as query this query", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 234, "tokens": 0, "vector": null, "score": 0}, {"text": "variable is a state managed in our", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 235, "tokens": 0, "vector": null, "score": 0}, {"text": "component up at the top of this index", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 236, "tokens": 0, "vector": null, "score": 0}, {"text": "file when text changes in the input", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 237, "tokens": 0, "vector": null, "score": 0}, {"text": "field", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 238, "tokens": 0, "vector": null, "score": 0}, {"text": "the set query function is triggered and", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 239, "tokens": 0, "vector": null, "score": 0}, {"text": "the query state is updated this is just", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 240, "tokens": 0, "vector": null, "score": 0}, {"text": "regular react stuff if this is new to", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 241, "tokens": 0, "vector": null, "score": 0}, {"text": "you check out a course in react or", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 242, "tokens": 0, "vector": null, "score": 0}, {"text": "nextjs to get a better understanding of", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 243, "tokens": 0, "vector": null, "score": 0}, {"text": "how it works there's also some beautiful", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 244, "tokens": 0, "vector": null, "score": 0}, {"text": "class tags that style the input field", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 245, "tokens": 0, "vector": null, "score": 0}, {"text": "through the power of Tailwind CSS The", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 246, "tokens": 0, "vector": null, "score": 0}, {"text": "Forum element has onsubmit that triggers", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 247, "tokens": 0, "vector": null, "score": 0}, {"text": "a function called get recommendations", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 248, "tokens": 0, "vector": null, "score": 0}, {"text": "when the submission button is clicked", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 249, "tokens": 0, "vector": null, "score": 0}, {"text": "let's go take a look at get", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 250, "tokens": 0, "vector": null, "score": 0}, {"text": "recommendations the first thing is some", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 251, "tokens": 0, "vector": null, "score": 0}, {"text": "lightweight validation that ensures the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 252, "tokens": 0, "vector": null, "score": 0}, {"text": "user has actually typed something into", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 253, "tokens": 0, "vector": null, "score": 0}, {"text": "the input field then we can trigger a", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 254, "tokens": 0, "vector": null, "score": 0}, {"text": "fetch call against API", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 255, "tokens": 0, "vector": null, "score": 0}, {"text": "reccommendations once we get a response", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 256, "tokens": 0, "vector": null, "score": 0}, {"text": "we extract the book data from the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 257, "tokens": 0, "vector": null, "score": 0}, {"text": "payload if you look deeply enough at the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 258, "tokens": 0, "vector": null, "score": 0}, {"text": "results from search. py we know we can", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 259, "tokens": 0, "vector": null, "score": 0}, {"text": "get the list of recommended books from", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 260, "tokens": 0, "vector": null, "score": 0}, {"text": "recommendations. dat.", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 261, "tokens": 0, "vector": null, "score": 0}, {"text": "getbook we then store it in a state", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 262, "tokens": 0, "vector": null, "score": 0}, {"text": "variable and with this we have the book", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 263, "tokens": 0, "vector": null, "score": 0}, {"text": "recommendations data in the next xjs", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 264, "tokens": 0, "vector": null, "score": 0}, {"text": "client", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 265, "tokens": 0, "vector": null, "score": 0}, {"text": "application let's take a look at how we", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 266, "tokens": 0, "vector": null, "score": 0}, {"text": "set up the API endpoint on our nextjs", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 267, "tokens": 0, "vector": null, "score": 0}, {"text": "app that queries weate on our data set", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 268, "tokens": 0, "vector": null, "score": 0}, {"text": "in the pages folder there should be a", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 269, "tokens": 0, "vector": null, "score": 0}, {"text": "directory called API and within it is a", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 270, "tokens": 0, "vector": null, "score": 0}, {"text": "recommendations. TS file that will be", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 271, "tokens": 0, "vector": null, "score": 0}, {"text": "triggered when an HTTP request is sent", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 272, "tokens": 0, "vector": null, "score": 0}, {"text": "to /i/", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 273, "tokens": 0, "vector": null, "score": 0}, {"text": "reccommendations the recommendations. TS", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 274, "tokens": 0, "vector": null, "score": 0}, {"text": "endpoint will extract the query from the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 275, "tokens": 0, "vector": null, "score": 0}, {"text": "request body and then pass it into the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 276, "tokens": 0, "vector": null, "score": 0}, {"text": "we client as a near text object and", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 277, "tokens": 0, "vector": null, "score": 0}, {"text": "query the book vectors in much the same", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 278, "tokens": 0, "vector": null, "score": 0}, {"text": "way that search. py did the result is", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 279, "tokens": 0, "vector": null, "score": 0}, {"text": "then sent back to the client which we've", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 280, "tokens": 0, "vector": null, "score": 0}, {"text": "already set up to be stored in the state", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 281, "tokens": 0, "vector": null, "score": 0}, {"text": "variable of the nextjs", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 282, "tokens": 0, "vector": null, "score": 0}, {"text": "application the recommendation grid", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 283, "tokens": 0, "vector": null, "score": 0}, {"text": "appears with a list of books that come", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 284, "tokens": 0, "vector": null, "score": 0}, {"text": "from the semantic search result from our", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 285, "tokens": 0, "vector": null, "score": 0}, {"text": "near text query we have these stored in", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 286, "tokens": 0, "vector": null, "score": 0}, {"text": "a recommended books variable after a", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 287, "tokens": 0, "vector": null, "score": 0}, {"text": "query is made in the J SX of index we", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 288, "tokens": 0, "vector": null, "score": 0}, {"text": "map through recommended books and this", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 289, "tokens": 0, "vector": null, "score": 0}, {"text": "Returns the relevant divs that represent", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 290, "tokens": 0, "vector": null, "score": 0}, {"text": "the recommendations grid the grid is", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 291, "tokens": 0, "vector": null, "score": 0}, {"text": "styled in a flex wrap div so that they", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 292, "tokens": 0, "vector": null, "score": 0}, {"text": "expand into the parent container and", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 293, "tokens": 0, "vector": null, "score": 0}, {"text": "wrap around when a row is filled as we", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 294, "tokens": 0, "vector": null, "score": 0}, {"text": "map through those recommendations we", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 295, "tokens": 0, "vector": null, "score": 0}, {"text": "render book details to the screen such", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 296, "tokens": 0, "vector": null, "score": 0}, {"text": "as the book thumbnail the book title and", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 297, "tokens": 0, "vector": null, "score": 0}, {"text": "a button to learn more about the book", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 298, "tokens": 0, "vector": null, "score": 0}, {"text": "when the button is tapped we render", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 299, "tokens": 0, "vector": null, "score": 0}, {"text": "modal on screen there's some logic that", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 300, "tokens": 0, "vector": null, "score": 0}, {"text": "will we select the book and put it into", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 301, "tokens": 0, "vector": null, "score": 0}, {"text": "a state variable so that the modal knows", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 302, "tokens": 0, "vector": null, "score": 0}, {"text": "how to display it and we also set an", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 303, "tokens": 0, "vector": null, "score": 0}, {"text": "additional State variable to force the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 304, "tokens": 0, "vector": null, "score": 0}, {"text": "modal to come on a", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 305, "tokens": 0, "vector": null, "score": 0}, {"text": "screen let's briefly look at the modal", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 306, "tokens": 0, "vector": null, "score": 0}, {"text": "mechanics when the learn more button is", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 307, "tokens": 0, "vector": null, "score": 0}, {"text": "clicked the open modal function is", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 308, "tokens": 0, "vector": null, "score": 0}, {"text": "triggered and receives the book details", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 309, "tokens": 0, "vector": null, "score": 0}, {"text": "so that we know which one was selected", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 310, "tokens": 0, "vector": null, "score": 0}, {"text": "and we set that book in the selected", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 311, "tokens": 0, "vector": null, "score": 0}, {"text": "book State", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 312, "tokens": 0, "vector": null, "score": 0}, {"text": "variable we'll also have a state to", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 313, "tokens": 0, "vector": null, "score": 0}, {"text": "manage the viewability of the modal", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 314, "tokens": 0, "vector": null, "score": 0}, {"text": "we'll call modal is open when this state", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 315, "tokens": 0, "vector": null, "score": 0}, {"text": "is set true the modal is rendered to the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 316, "tokens": 0, "vector": null, "score": 0}, {"text": "screen this modal contains the thumbnail", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 317, "tokens": 0, "vector": null, "score": 0}, {"text": "of the book the author details genre", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 318, "tokens": 0, "vector": null, "score": 0}, {"text": "average rating published year and", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 319, "tokens": 0, "vector": null, "score": 0}, {"text": "description and these are all rendered", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 320, "tokens": 0, "vector": null, "score": 0}, {"text": "from the selected book State since we", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 321, "tokens": 0, "vector": null, "score": 0}, {"text": "also have the international standard", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 322, "tokens": 0, "vector": null, "score": 0}, {"text": "book number or ISBN for this book we can", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 323, "tokens": 0, "vector": null, "score": 0}, {"text": "make a naive query against Amazon to", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 324, "tokens": 0, "vector": null, "score": 0}, {"text": "show that book on an Amazon search", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 325, "tokens": 0, "vector": null, "score": 0}, {"text": "result when clicked this is just for fun", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 326, "tokens": 0, "vector": null, "score": 0}, {"text": "lastly will also include a close modal", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 327, "tokens": 0, "vector": null, "score": 0}, {"text": "button that will close the modal from", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 328, "tokens": 0, "vector": null, "score": 0}, {"text": "view okay that's all there really is to", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 329, "tokens": 0, "vector": null, "score": 0}, {"text": "using we V8 to create a simple", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 330, "tokens": 0, "vector": null, "score": 0}, {"text": "recommendation system in a nextjs", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 331, "tokens": 0, "vector": null, "score": 0}, {"text": "application with the simple logic seen", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 332, "tokens": 0, "vector": null, "score": 0}, {"text": "from this video we prototyped a simple", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 333, "tokens": 0, "vector": null, "score": 0}, {"text": "yet capable recommendation system using", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 334, "tokens": 0, "vector": null, "score": 0}, {"text": "we8 Vector database thanks for watching", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 335, "tokens": 0, "vector": null, "score": 0}, {"text": "this video we hope you found it", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 336, "tokens": 0, "vector": null, "score": 0}, {"text": "informative happy building with we8 and", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 337, "tokens": 0, "vector": null, "score": 0}, {"text": "if you have any questions please share", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 338, "tokens": 0, "vector": null, "score": 0}, {"text": "with us on our community slack or the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 339, "tokens": 0, "vector": null, "score": 0}, {"text": "we8 forums the details are in the", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 340, "tokens": 0, "vector": null, "score": 0}, {"text": "description below see you next", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 341, "tokens": 0, "vector": null, "score": 0}, {"text": "[Music]", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 342, "tokens": 0, "vector": null, "score": 0}, {"text": "time", "doc_name": "How to Build a Recommendation System with AI and Semantic Search", "doc_type": "Video", "doc_uuid": "", "chunk_id": 343, "tokens": 0, "vector": null, "score": 0}]}