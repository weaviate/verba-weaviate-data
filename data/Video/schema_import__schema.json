{"text": "Weaviate Academy Unit 3: Schema. \nhey there and welcome back in this section we'll take a look at what's involved in defining a schema in waviate as you may know a schema is the blueprint that defines the data structure for every class of objects in waviate defining your schema correctly is crucial because it directly impacts how your data is stored and how it will react to various queries so let's Dive In in this section we'll cover several aspects that you can Define through the schema such as the metadata data properties the vectorizer and module configurations first we have the metadata definition where you can Define names and descriptions for your classes and properties defining days will help you and others understand the data structure for classes we have class which is required and description which is optional for properties we have name which is required and description which is optional now let's talk about properties with data types your class definitions will include no doubt properties to populate with data and each of these properties needs to have a specific data type like text number geocordinates Boolean and so on if you leave them out wave yet will infer them but we do recommend that you specify them for more predictable results next is the vectorizer this is a very important setting the vectorizer determines which radiator module will be used to generate Vector embeddings for your class but text objects you'd usually select one of text to back modules such as one front inference API like cohere hugging face open AI or Palm the module that you select has to be enabled in your VBA instance you can get a list of enabled modules for your weeviate instance like so to find out which modules are available then select one of them remember that WCS instances come pre-configured so you don't need to manually enable them at your end but you do need to select a vectorizer if you want to aviate to convert your data into vectors you also have the option to set class and property level module configurations setting module configuration that the class level is used for customizing module Behavior across the entire class likewise module configurations at the property level customize module Behavior per property this way you can decide whether you want to vectorize the class or property name or even skip the whole property altogether there are other settings for things like the indexes and replication but don't worry we'll cover these later on you may think why are there so many options well remember that these settings directly impact how your data is stored and how they'll react to queries so these options give you a great deal of control over how waviate behaves in these situations we'll learn the basics here and you'll start to see how varying these settings impacts waviate's Behavior as you go and that's it for this introduction to The Binding of schema in waviate after you're done with this section you should have a better idea of how to create a schema and configure it to suit your needs thanks for watching and we'll see you soon ", "type": "Video", "name": "schema_import__schema", "path": "", "link": "https://www.youtube.com/watch?v=WIK6_hGuer0", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}