{"text": "This video shows how to use the Weaviate python client. A simple example dataset of ABC News Headlines is used. The video ... \nhello welcome to this um presentation of the vva python client and yeah i'm set out here to um just give a little bit of an introduction into the client and also to show how a vba project how is such a semantic analysis or yeah some some kind of interesting project using vvate could start out in a python environment and obviously we have to start with getting some data in so i chose this data set here a million news headlines one reason is that it's very simple so you're going to be able to follow along very easily and it is also not um from the sheer size of it not too big so we're not going to sit here forever um and it's uh yeah so obviously in a production environment we could just scale up vv8 and get also much much more data in but in a local environment i think this is a nice starting data set so yeah let's get right into it the first thing we want to have is obviously we would need to import vv8 we can just pip install it with a vv8 client and then we need to get the data in and let's have a look at this data frame and we see right away we have two columns one is really just a news headline and one is a publish date so when we think about the semantic context of a news headline uh there there is actually a little bit of a problem depending on how the newspaper works the headline itself might not really indicate what the article itself is really about so um in a more yeah more serious attempt to maybe get information out of news sites or news articles we probably want to add much more than just the headline to build a bigger context and get much much more concrete information and just help to build a way bigger context so the more data the better usually all right but this out of the way let's just get in so the first thing we want to have is obviously we need a client so we're just going to use so we have vv8 imported here so we can use it and get a client object client so and i have this running on the local host and just to see what's running here we gonna get the meter in point and as you can see i run 22.19 at the moment and i'm running on this contentionary english contentionary so i'm running the most current version that is currently out there at the time i'm recording this and yeah so now we have a pipe a client object and the client object is actually created in a way where you can find all the um yeah api groups directly under it so for example with a schema we have query very things like batching and classification and obviously the data objects to just add and remove things so the ide that is a little bit helping you with uh showing you various functions that are available you should be very very quickly get into it or otherwise you can obviously check out our documentation it's very elaborate on how the client works all right the next thing we need is a schema and yeah i created a small schema here um let's have a look at this it actually just creates one class and i call this news for for the moment it doesn't really matter and then we have one property text with the headline and the headline is obviously very important for us at this in this example because we have um it the headline itself gives the uh context of the entire class and because it's the only real text value and then we have um a year and a month so we see here the date which is um yeah this uh number um it's formatted as a as an integer so we're gonna split this up in in in the year in the month and when we have this stick created so we can just use a native python dict because it's so compatible to to the json format it shouldn't be a big problem to use this and then we can go with client dot shima dot create and then add the schema and there we go so we have loaded the schema and yeah now the next thing is we want to get some data in so we want to get this data frame just that we don't have to scroll all the time let's just open it here again so we want to have the headlines in there and we want to split this date up into the year and the month so yeah i'm gonna use batching for this because we just want to speed up the loading process so let's create a batch and for the batching we have this special batching object that just collects single things and then we can commit this in in one go to vb8 and load everything in one go so that's um a things batch request let's create another object of this and then let's say we have a batch size of maybe a thousand so this is a little bit depending on how big your objects are actually are and and since i'm on a local machine i can choose a very big batch size and if you choose a two big batch size in a in a more productive environment you might wanna uh you might run into timeouts or something like this then you can either adjust the timeout settings or you have to reduce your pet size a little bit so or you horizontally scale and just make smaller batch sizes and horizontally scale it out something like this all right and then the next thing we want to do is we want to go over each of these rows and create um an object for that right so let's just go for index and row in data frame dot eater rows and then we go we we gonna create a dictionary that represents this object so it's gonna need like a headline a year and a month all right and we call that news so headline and we can actually just um get actually this headline and yeah for the year and a month i'm gonna just copy this in now because it it's not too interesting when i'm typing so what i'm gonna do here is just i use the publish date and then i'm gonna use the first four digits for the year and then like the middle two here um for the month all right and then we have a new stick so this is our thing that we want to add and then we have to add it to the batch so let's add thing and then we're gonna take the news dict and also um say the class so this is just here we call this class news so i'm gonna also say that this is of type class news right all right and that's basically it now we just have to commit the batch every once in a while so let's go ahead and say the patch size of every 1 000 batches uh every 1000 things i mean we're gonna print the index and then we're gonna client dot batch dot create things and then also add our patch and yeah then we're gonna create a new batch because otherwise we're gonna just append on the same page over and over again and that's obviously not what we want we want to have a new batch and then also when this is because we are not finishing on a perfect uh part of 1000 so let's just run this commit message again yeah and that should do it let's run this and we see it's loading and the loading is going to take a while so i'm just gonna jump ahead and see you in a few seconds when this is loaded alright so we are back now and everything is loaded and yeah so we see here the output of the last batch actually just a quick note on this obviously there is much more to this function so a lot of these client functions they have optional properties that try to set sensible default values but obviously you can customize all kind of things and also we don't do a lot of actually we don't do any error management here or checking of the if the loading was actually successful we just assumed that and it's also pretty safe to assume since the data set is very yeah limited and also our schema and everything is very limited so there is not a lot of space for error but yeah obviously you could in a in a more productive environment you want to want to check if everything was successful as you assumed so now let's have a look at um what we want to do next so we want to go and query this data and here we have uh the query we're going to use so actually we're going to say all right we um want to have this our things we just loaded and we want to be able to filter them based on year and month so we want to have a monthly base and yeah we gonna also do an explore search so so to find the closest things that are um connected to this concept so i chose the concept dancing here and we see um on the right that we actually get something about ballet ballet and uh dance production but we also see already a problem with our data set so for example it seems that this one headline here is loaded twice so um there might need to be a little bit so we work a little bit with dirty data here that might need some cleaning up actually all right and also with the data set let's let's say um this is a little bit cherry picked here we see there is actually something connected to dance but if we let's look at the next month so we see there is no real connection to then so it's choosing something that is still connected to dancing as a concept so something like arts or music um are still pretty close to dancing but obviously those are not things that are directly over um dancing itself so um yeah we we see that the confidence or certainty in this this case also goes down um to reflect that these uh things are not con that deeply connected to our concept all right so how can we get this query in here so to create the wear and explore filter we just gonna translate these filters directly into a python dict so we're gonna say operator this is just becoming a string and it's becoming a string this is staying a list of strings and so we can basically want to one translate that into a python filter uh a python dict and yeah how this is gonna look like it's just let me copy this in here so this is just really one to one these two filters and then i'm gonna package those into a nice function and that is gonna allow us to search for a concept based on the year and the month and now we're gonna connect these um actually we're gonna build this entire query here using a query builder so we're gonna go with the client again and query and then we gonna get things and here we wanna have the news class and we gonna say so let's have a look in into this again so get things news class and then we're gonna state what we want to have here so here we have everything year month headline and this underscore property certainty but for our python code here we got just going to be interested in the certainty and then we say we want to have this with an explorer and we're gonna add our explore filter dict and then we also want to have a with where and we're gonna add the where filter and we're gonna also say limit this to the top 100 um results and then we're gonna execute with do and since this is a function we wanna turn uh return this entire thing that is coming from this query all right let's uh just try this out explore headlines let's stay with them thing then and 2008 we had and march and then we see this is how a result looked like so we have this um json level here and data get things news and then we just have a long list of results with the certainty so and then i created a small function that is using this long list here and creates an average of it so let's remove this and paste this function in so we have get average certainty which calls our just created query and yeah we just gonna sum this up and then return the average all right and in the next step we're gonna do this for all the years and months in this data set so we're gonna go through the years and through the month and then you get the average certainty and we just gonna put this into a new python um pandas data frame so that we can easily explore it and plot it so yeah the um i use this concept here global finance crisis banks real estate it doesn't really matter how the words are ordered it's just about the concept they create the kind of space they create and yeah then we can have a look at this data frame and we see then we have now for every month so because we convert here the date into uh this pandas date it says just as the first of every month but we know it's an aggregation of the entire month so and then we have the average distances um to the concept to this concept here all right and if we now plot this then hopefully we see that there is actually quite a spike in uh yeah 2007 2008 where this is the headlines are much more connected to um yeah this kind of concept obviously because there was the global financial crisis based on real estate speculations and yeah but we see still quite some problems here so for example this is quite noisy we also see that there are two uh kind of low peaks and um i investigated this a little bit in beforehand so for example what happens here on these two peaks uh is that those particular month have much less data than uh the other months so in this case uh what happens here is maybe there is just less news articles so it's not really about since we create an average we would still um should still get kind of dissimilar but maybe just the the economic section is missing right so if the economic section headlines is missing completely then we just get things that are kind of connected to i don't know maybe uh maybe crisis or banks as it can be any anything in any uh other um yeah section and then we get these kind of uh problems so we see that data set is maybe not ideal for this kind of analysis so we would have to clean this up a little bit find out what what the problems are here and then when we have like a very nice noisy area here i would say this is probably because we just use headlines our context is made out by very small settings and as i said before let's let's imagine somebody is speaking here actually about the crisis but the headline is something like how we gonna go forward from this or um the unexpected winners of our current situation this kind of headlines don't really say anything about the text about the the article itself even though for the people at that time it might have made sense because it was in the context of the time but yeah for us it would be very helpful if we would have really the entire text but then this data loading and the example would be a little bit more elaborate also the schema gets more complicated so i just wanted to have this small um thing to get started and i hope this shows you how quickly you actually can get to kind of a graph to to get an exploration of your uh data and to see that actually the client is very very straightforward so just uh using the api groups just uh yeah using it how how you would uh in native python python so i hope that you enjoyed this and i hope you give vv8 a try in the python client and i'm really interested for your feedback so leave a github issue or join our community slack or just write something on stack overflow we are very active on all these things so um yeah thank you for watching and see you soon ", "type": "Video", "name": "using_the_weaviate_python_client_for_news_headlines", "path": "", "link": "https://www.youtube.com/watch?v=oN2WKHLYKCc", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}