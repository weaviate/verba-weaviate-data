{"text": "Weaviate Academy Unit 3: Data Structures. \nhey and welcome back in this section we'll provide a high level overview of waviate's data structure that means we'll take you through Concepts like indexes the schema classes and properties first let's talk about indexes indexes exist to help you find the right data faster they are pre-built and maintained from your data to do this what this means is that when a query comes in the system doesn't need to look through every data object which can take a long time instead it can simply look through the appropriate index to find the right data objects in weeviate there are two main types of indexes the inverted index and the vector index you might be familiar with the inverged index it's structured like a reference table that allows you to quickly look up a term and find objects containing that term the vector index on the other hand is all about enabling efficient retrieval of vectors based on similarity and just like how the inverge index speeds up lookups for matching terms the vector index speeds up Vector similarity searches waviate builds a vector index of your data in the background using an approximate nearest neighbor algorithm so that it can perform back the searches at Lightning Fast speeds together these indexes enable vector or bm25 searches as well as a combination called hybrid searches they also work together to allow Vector searches with filtering you saw examples of this with wear filters in query examples you saw how they were able to only search with objects matching a particular condition so there was indexes which is all about enabling you to find the right objects and fast now let's discuss classes which is all about how you structure your data objects in wavy8 in waviate collections of the same object types are called classes it's really important to note that each class constitutes one vector space meaning that each object in the same class is converted to the vector in the same way going back to our color analogy a collection of RGB colors would constitute one vector space as each of them would be represented by the same system of three numbers representing red green or blue now if you had another set of CMYK colors that would be a distinct Vector space from your RGB colors as not only there are four numbers but also each number means something different to the RGB numbers so when you're designing your data schema in waviate it's important to group objects that you want to search together in the same class since Vector searches can only be performed within a single Vector space finally let's touch on schemas a schema in waviate is the blueprint that defines all the things we've talked about and more that's its data structure classes properties vectorizers module configurations index configurations and more you should know that thankfully you don't have to Define every aspect of the schema manually webiate has an auto schema feature to best infer any missing information as required in the next section though we'll show you some of the most important parts of the schema that you must Define and they will build up your knowledge from there to recap this section is all about the key components of weavate data structure including indexes classes and schemas remember that indexes allow for fast data retrieval classes grip objects in the same type as one vector space and schemas Define aviate's data structure by understanding these key Concepts you'll be well equipped to make the most of webiate's powerful Vector database capabilities thanks for watching and we'll see you soon ", "type": "Video", "name": "schemas_import__data_structures", "path": "", "link": "https://www.youtube.com/watch?v=9AmMDDGWC74", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}