{"text": "Weaviate Academy Unit 3: Data Structures. \nhey and welcome back in this section \nwe'll provide a high level overview of \nwaviate's data structure that means \nwe'll take you through Concepts like \nindexes the schema classes and \nproperties \nfirst let's talk about indexes \nindexes exist to help you find the right \ndata faster \nthey are pre-built and maintained from \nyour data to do this \nwhat this means is that when a query \ncomes in the system doesn't need to look \nthrough every data object which can take \na long time \ninstead it can simply look through the \nappropriate index to find the right data \nobjects \nin weeviate there are two main types of \nindexes the inverted index and the \nvector index \nyou might be familiar with the inverged \nindex it's structured like a reference \ntable that allows you to quickly look up \na term and find objects containing that \nterm \nthe vector index on the other hand is \nall about enabling efficient retrieval \nof vectors based on similarity \nand just like how the inverge index \nspeeds up lookups for matching terms the \nvector index speeds up Vector similarity \nsearches \nwaviate builds a vector index of your \ndata in the background using an \napproximate nearest neighbor algorithm \nso that it can perform back the searches \nat Lightning Fast speeds \ntogether these indexes enable vector or \nbm25 searches as well as a combination \ncalled hybrid searches \nthey also work together to allow Vector \nsearches with filtering \nyou saw examples of this with wear \nfilters in query examples \nyou saw how they were able to only \nsearch with objects matching a \nparticular condition \nso there was indexes which is all about \nenabling you to find the right objects \nand fast \nnow let's discuss classes which is all \nabout how you structure your data \nobjects in wavy8 in waviate collections \nof the same object types are called \nclasses it's really important to note \nthat each class constitutes one vector \nspace meaning that each object in the \nsame class is converted to the vector in \nthe same way \ngoing back to our color analogy a \ncollection of RGB colors would \nconstitute one vector space as each of \nthem would be represented by the same \nsystem of three numbers representing red \ngreen or blue \nnow if you had another set of CMYK \ncolors that would be a distinct Vector \nspace from your RGB colors as not only \nthere are four numbers but also each \nnumber means something different to the \nRGB numbers \nso when you're designing your data \nschema in waviate it's important to \ngroup objects that you want to search \ntogether in the same class since Vector \nsearches can only be performed within a \nsingle Vector space \nfinally let's touch on schemas \na schema in waviate is the blueprint \nthat defines all the things we've talked \nabout and more \nthat's its data structure classes \nproperties vectorizers module \nconfigurations index configurations and \nmore \nyou should know that thankfully you \ndon't have to Define every aspect of the \nschema manually \nwebiate has an auto schema feature to \nbest infer any missing information as \nrequired \nin the next section though we'll show \nyou some of the most important parts of \nthe schema that you must Define and they \nwill build up your knowledge from there \nto recap this section is all about the \nkey components of weavate data structure \nincluding indexes classes and schemas \nremember that indexes allow for fast \ndata retrieval classes grip objects in \nthe same type as one vector space and \nschemas Define aviate's data structure \nby understanding these key Concepts \nyou'll be well equipped to make the most \nof webiate's powerful Vector database \ncapabilities \nthanks for watching and we'll see you \nsoon \n", "type": "Video", "name": "Schemas Import - Data Structures", "path": "", "link": "https://www.youtube.com/watch?v=9AmMDDGWC74", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": [{"text": "hey and welcome back in this section", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 0, "tokens": 0, "vector": null, "score": 0}, {"text": "we'll provide a high level overview of", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1, "tokens": 0, "vector": null, "score": 0}, {"text": "waviate's data structure that means", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 2, "tokens": 0, "vector": null, "score": 0}, {"text": "we'll take you through Concepts like", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 3, "tokens": 0, "vector": null, "score": 0}, {"text": "indexes the schema classes and", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 4, "tokens": 0, "vector": null, "score": 0}, {"text": "properties", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 5, "tokens": 0, "vector": null, "score": 0}, {"text": "first let's talk about indexes", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 6, "tokens": 0, "vector": null, "score": 0}, {"text": "indexes exist to help you find the right", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 7, "tokens": 0, "vector": null, "score": 0}, {"text": "data faster", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 8, "tokens": 0, "vector": null, "score": 0}, {"text": "they are pre-built and maintained from", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 9, "tokens": 0, "vector": null, "score": 0}, {"text": "your data to do this", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 10, "tokens": 0, "vector": null, "score": 0}, {"text": "what this means is that when a query", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 11, "tokens": 0, "vector": null, "score": 0}, {"text": "comes in the system doesn't need to look", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 12, "tokens": 0, "vector": null, "score": 0}, {"text": "through every data object which can take", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 13, "tokens": 0, "vector": null, "score": 0}, {"text": "a long time", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 14, "tokens": 0, "vector": null, "score": 0}, {"text": "instead it can simply look through the", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 15, "tokens": 0, "vector": null, "score": 0}, {"text": "appropriate index to find the right data", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 16, "tokens": 0, "vector": null, "score": 0}, {"text": "objects", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 17, "tokens": 0, "vector": null, "score": 0}, {"text": "in weeviate there are two main types of", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 18, "tokens": 0, "vector": null, "score": 0}, {"text": "indexes the inverted index and the", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 19, "tokens": 0, "vector": null, "score": 0}, {"text": "vector index", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 20, "tokens": 0, "vector": null, "score": 0}, {"text": "you might be familiar with the inverged", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 21, "tokens": 0, "vector": null, "score": 0}, {"text": "index it's structured like a reference", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 22, "tokens": 0, "vector": null, "score": 0}, {"text": "table that allows you to quickly look up", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 23, "tokens": 0, "vector": null, "score": 0}, {"text": "a term and find objects containing that", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 24, "tokens": 0, "vector": null, "score": 0}, {"text": "term", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 25, "tokens": 0, "vector": null, "score": 0}, {"text": "the vector index on the other hand is", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 26, "tokens": 0, "vector": null, "score": 0}, {"text": "all about enabling efficient retrieval", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 27, "tokens": 0, "vector": null, "score": 0}, {"text": "of vectors based on similarity", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 28, "tokens": 0, "vector": null, "score": 0}, {"text": "and just like how the inverge index", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 29, "tokens": 0, "vector": null, "score": 0}, {"text": "speeds up lookups for matching terms the", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 30, "tokens": 0, "vector": null, "score": 0}, {"text": "vector index speeds up Vector similarity", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 31, "tokens": 0, "vector": null, "score": 0}, {"text": "searches", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 32, "tokens": 0, "vector": null, "score": 0}, {"text": "waviate builds a vector index of your", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 33, "tokens": 0, "vector": null, "score": 0}, {"text": "data in the background using an", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 34, "tokens": 0, "vector": null, "score": 0}, {"text": "approximate nearest neighbor algorithm", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 35, "tokens": 0, "vector": null, "score": 0}, {"text": "so that it can perform back the searches", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 36, "tokens": 0, "vector": null, "score": 0}, {"text": "at Lightning Fast speeds", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 37, "tokens": 0, "vector": null, "score": 0}, {"text": "together these indexes enable vector or", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 38, "tokens": 0, "vector": null, "score": 0}, {"text": "bm25 searches as well as a combination", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 39, "tokens": 0, "vector": null, "score": 0}, {"text": "called hybrid searches", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 40, "tokens": 0, "vector": null, "score": 0}, {"text": "they also work together to allow Vector", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 41, "tokens": 0, "vector": null, "score": 0}, {"text": "searches with filtering", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 42, "tokens": 0, "vector": null, "score": 0}, {"text": "you saw examples of this with wear", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 43, "tokens": 0, "vector": null, "score": 0}, {"text": "filters in query examples", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 44, "tokens": 0, "vector": null, "score": 0}, {"text": "you saw how they were able to only", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 45, "tokens": 0, "vector": null, "score": 0}, {"text": "search with objects matching a", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 46, "tokens": 0, "vector": null, "score": 0}, {"text": "particular condition", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 47, "tokens": 0, "vector": null, "score": 0}, {"text": "so there was indexes which is all about", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 48, "tokens": 0, "vector": null, "score": 0}, {"text": "enabling you to find the right objects", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 49, "tokens": 0, "vector": null, "score": 0}, {"text": "and fast", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 50, "tokens": 0, "vector": null, "score": 0}, {"text": "now let's discuss classes which is all", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 51, "tokens": 0, "vector": null, "score": 0}, {"text": "about how you structure your data", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 52, "tokens": 0, "vector": null, "score": 0}, {"text": "objects in wavy8 in waviate collections", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 53, "tokens": 0, "vector": null, "score": 0}, {"text": "of the same object types are called", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 54, "tokens": 0, "vector": null, "score": 0}, {"text": "classes it's really important to note", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 55, "tokens": 0, "vector": null, "score": 0}, {"text": "that each class constitutes one vector", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 56, "tokens": 0, "vector": null, "score": 0}, {"text": "space meaning that each object in the", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 57, "tokens": 0, "vector": null, "score": 0}, {"text": "same class is converted to the vector in", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 58, "tokens": 0, "vector": null, "score": 0}, {"text": "the same way", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 59, "tokens": 0, "vector": null, "score": 0}, {"text": "going back to our color analogy a", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 60, "tokens": 0, "vector": null, "score": 0}, {"text": "collection of RGB colors would", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 61, "tokens": 0, "vector": null, "score": 0}, {"text": "constitute one vector space as each of", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 62, "tokens": 0, "vector": null, "score": 0}, {"text": "them would be represented by the same", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 63, "tokens": 0, "vector": null, "score": 0}, {"text": "system of three numbers representing red", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 64, "tokens": 0, "vector": null, "score": 0}, {"text": "green or blue", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 65, "tokens": 0, "vector": null, "score": 0}, {"text": "now if you had another set of CMYK", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 66, "tokens": 0, "vector": null, "score": 0}, {"text": "colors that would be a distinct Vector", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 67, "tokens": 0, "vector": null, "score": 0}, {"text": "space from your RGB colors as not only", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 68, "tokens": 0, "vector": null, "score": 0}, {"text": "there are four numbers but also each", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 69, "tokens": 0, "vector": null, "score": 0}, {"text": "number means something different to the", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 70, "tokens": 0, "vector": null, "score": 0}, {"text": "RGB numbers", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 71, "tokens": 0, "vector": null, "score": 0}, {"text": "so when you're designing your data", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 72, "tokens": 0, "vector": null, "score": 0}, {"text": "schema in waviate it's important to", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 73, "tokens": 0, "vector": null, "score": 0}, {"text": "group objects that you want to search", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 74, "tokens": 0, "vector": null, "score": 0}, {"text": "together in the same class since Vector", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 75, "tokens": 0, "vector": null, "score": 0}, {"text": "searches can only be performed within a", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 76, "tokens": 0, "vector": null, "score": 0}, {"text": "single Vector space", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 77, "tokens": 0, "vector": null, "score": 0}, {"text": "finally let's touch on schemas", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 78, "tokens": 0, "vector": null, "score": 0}, {"text": "a schema in waviate is the blueprint", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 79, "tokens": 0, "vector": null, "score": 0}, {"text": "that defines all the things we've talked", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 80, "tokens": 0, "vector": null, "score": 0}, {"text": "about and more", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 81, "tokens": 0, "vector": null, "score": 0}, {"text": "that's its data structure classes", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 82, "tokens": 0, "vector": null, "score": 0}, {"text": "properties vectorizers module", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 83, "tokens": 0, "vector": null, "score": 0}, {"text": "configurations index configurations and", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 84, "tokens": 0, "vector": null, "score": 0}, {"text": "more", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 85, "tokens": 0, "vector": null, "score": 0}, {"text": "you should know that thankfully you", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 86, "tokens": 0, "vector": null, "score": 0}, {"text": "don't have to Define every aspect of the", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 87, "tokens": 0, "vector": null, "score": 0}, {"text": "schema manually", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 88, "tokens": 0, "vector": null, "score": 0}, {"text": "webiate has an auto schema feature to", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 89, "tokens": 0, "vector": null, "score": 0}, {"text": "best infer any missing information as", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 90, "tokens": 0, "vector": null, "score": 0}, {"text": "required", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 91, "tokens": 0, "vector": null, "score": 0}, {"text": "in the next section though we'll show", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 92, "tokens": 0, "vector": null, "score": 0}, {"text": "you some of the most important parts of", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 93, "tokens": 0, "vector": null, "score": 0}, {"text": "the schema that you must Define and they", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 94, "tokens": 0, "vector": null, "score": 0}, {"text": "will build up your knowledge from there", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 95, "tokens": 0, "vector": null, "score": 0}, {"text": "to recap this section is all about the", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 96, "tokens": 0, "vector": null, "score": 0}, {"text": "key components of weavate data structure", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 97, "tokens": 0, "vector": null, "score": 0}, {"text": "including indexes classes and schemas", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 98, "tokens": 0, "vector": null, "score": 0}, {"text": "remember that indexes allow for fast", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 99, "tokens": 0, "vector": null, "score": 0}, {"text": "data retrieval classes grip objects in", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 100, "tokens": 0, "vector": null, "score": 0}, {"text": "the same type as one vector space and", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 101, "tokens": 0, "vector": null, "score": 0}, {"text": "schemas Define aviate's data structure", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 102, "tokens": 0, "vector": null, "score": 0}, {"text": "by understanding these key Concepts", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 103, "tokens": 0, "vector": null, "score": 0}, {"text": "you'll be well equipped to make the most", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 104, "tokens": 0, "vector": null, "score": 0}, {"text": "of webiate's powerful Vector database", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 105, "tokens": 0, "vector": null, "score": 0}, {"text": "capabilities", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 106, "tokens": 0, "vector": null, "score": 0}, {"text": "thanks for watching and we'll see you", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 107, "tokens": 0, "vector": null, "score": 0}, {"text": "soon", "doc_name": "Schemas Import - Data Structures", "doc_type": "Video", "doc_uuid": "", "chunk_id": 108, "tokens": 0, "vector": null, "score": 0}]}