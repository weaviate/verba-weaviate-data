{"text": "Weaviate Academy Unit 2: Get Function. \nhello and welcome back to waviateAcademy in this section we're going todive into the world of the get functionthe get function is used to retrieveobjects from the object store in waviateretrieving objects from wavier isprobably the most common operation toperform for many usersfor instance you might want to findrelevant passages from a collection ofbooks retrieve information on aparticular type of users or even imagesmost similar to another imagein waviate you use the get function todo all of those thingsto use it you need to specify the classof objects you want to retrieve this isthe term in waviate for collections ofobjectsand you also need to specify theproperties to retrieve for each objectlet's get an example of a basicStandalone get queryin this case we're querying this classfor the shown properties with a limit ofthe number of results as shown herethe response from waviate then will bein Json format reflecting the structureof the get query and the properties ofthe objects being retrievedthe class n properties Fields beingretrieved must corresponds to objectsand properties that are stored inwaviate in what is called the schemayou'll learn more about how to constructthe schema in another unitbut knowing how to use a defined schemawill help you immensely when it comestime to build your own schema and topopulate waviate with ityou can also use the get function toretrieve additional properties thataren't explicitly defined in the schemathese could be inherents the object likethe ID or the vector or related to thequery performed like the distancebelow we've built examples for you totry out for yourselffollow the inline exercises to practiceconstructing different gate queriesretrieving various properties andworking with additional fieldsthat's it for this video thanks forwatching and we'll see in the next one", "type": "Video", "name": "Queries - Get Function", "path": "", "link": "https://www.youtube.com/watch?v=q2UuBIJVLEM", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}