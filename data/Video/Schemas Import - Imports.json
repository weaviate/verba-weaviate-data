{"text": "Weaviate Academy Unit 3: Imports. \nhey and welcome back in this video we'lltalk about the specifics of how toimport data into aviateso far you've learned that data in webais represented by objects which belongto a class and have a set of propertiesin the previous section of the schema welearned how to create a framework forthis structurein this section we'll discuss how toimport data into aviate including ourrecommended best practices and some keyconsiderationsonce you're done with this sectionyou'll be ready to import a real dataset into aviate by putting together whatwe've learned about the schema andimportsto create a webiate object you must loadyour Source data build a data object bymapping your Source data to desired VPXobject properties and add it to yourdesired class in waviateand optionally you can manually specifyan object ID and the vectorif an object ID is not specified maybeit will create oneit's important to note that if you wantto avoid duplicate objects being createdyou can use a deterministic object IDcreation processif a vector is not specified webiatewill check to see if a vectorizer is setfor the class and if a vectorizer is setit will create a vector using thevectorizerto maximize import speed offers a batchimport processthis process reduces the impact ofnetwork latencies by processing multipleobjects per requestadditionally clients like the pythonclient perform the process in parallelfurther increasing the import speedyou should use batch Imports tosignificantly improve the speed of dataingestionin doing so you can also set batchparameters such as batch size number ofretries in case of failures and so onwe strongly recommend that you use batchImports for any bulk object creationunless you have a very compelling reasonnot tothe batch import process is configuredto handle errors at a batch level and atindividual object levelbatch level errors are indicated by theHTTP Response Code for the batch requestwhile object level errors are returnedas a part of the response to the batchcreation requestsso it's important to note that even if abatch generates a successful 200response there may have been individualerrors at the object levelwe'll show you in the code examplesbelow best practices on how to check bynew errors through callback functionsso to sum up to create a waviate objectbuild a data object with properties andadd it to a desired classwe recommend that you use batch Importsunless you have a strong compellingreason not to because this can greatlyimpact your import speederror handling during import can be doneat the batch level or at individualobject levelyou can manually specify an object IDand Vector for each object in waviateokay that's it for now thanks forwatching and we'll see you soon", "type": "Video", "name": "Schemas Import - Imports", "path": "", "link": "https://www.youtube.com/watch?v=fpmjEN-93Og", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}