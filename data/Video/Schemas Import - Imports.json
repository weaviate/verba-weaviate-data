{"text": "Weaviate Academy Unit 3: Imports. \nhey and welcome back in this video we'll \ntalk about the specifics of how to \nimport data into aviate \nso far you've learned that data in weba \nis represented by objects which belong \nto a class and have a set of properties \nin the previous section of the schema we \nlearned how to create a framework for \nthis structure \nin this section we'll discuss how to \nimport data into aviate including our \nrecommended best practices and some key \nconsiderations \nonce you're done with this section \nyou'll be ready to import a real data \nset into aviate by putting together what \nwe've learned about the schema and \nimports \nto create a webiate object you must load \nyour Source data build a data object by \nmapping your Source data to desired VPX \nobject properties and add it to your \ndesired class in waviate \nand optionally you can manually specify \nan object ID and the vector \nif an object ID is not specified maybe \nit will create one \nit's important to note that if you want \nto avoid duplicate objects being created \nyou can use a deterministic object ID \ncreation process \nif a vector is not specified webiate \nwill check to see if a vectorizer is set \nfor the class and if a vectorizer is set \nit will create a vector using the \nvectorizer \nto maximize import speed offers a batch \nimport process \nthis process reduces the impact of \nnetwork latencies by processing multiple \nobjects per request \nadditionally clients like the python \nclient perform the process in parallel \nfurther increasing the import speed \nyou should use batch Imports to \nsignificantly improve the speed of data \ningestion \nin doing so you can also set batch \nparameters such as batch size number of \nretries in case of failures and so on \nwe strongly recommend that you use batch \nImports for any bulk object creation \nunless you have a very compelling reason \nnot to \nthe batch import process is configured \nto handle errors at a batch level and at \nindividual object level \nbatch level errors are indicated by the \nHTTP Response Code for the batch request \nwhile object level errors are returned \nas a part of the response to the batch \ncreation requests \nso it's important to note that even if a \nbatch generates a successful 200 \nresponse there may have been individual \nerrors at the object level \nwe'll show you in the code examples \nbelow best practices on how to check by \nnew errors through callback functions \nso to sum up to create a waviate object \nbuild a data object with properties and \nadd it to a desired class \nwe recommend that you use batch Imports \nunless you have a strong compelling \nreason not to because this can greatly \nimpact your import speed \nerror handling during import can be done \nat the batch level or at individual \nobject level \nyou can manually specify an object ID \nand Vector for each object in waviate \nokay that's it for now thanks for \nwatching and we'll see you soon \n", "type": "Video", "name": "Schemas Import - Imports", "path": "", "link": "https://www.youtube.com/watch?v=fpmjEN-93Og", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": [{"text": "hey and welcome back in this video we'll", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 0, "tokens": 0, "vector": null, "score": 0}, {"text": "talk about the specifics of how to", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1, "tokens": 0, "vector": null, "score": 0}, {"text": "import data into aviate", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 2, "tokens": 0, "vector": null, "score": 0}, {"text": "so far you've learned that data in weba", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 3, "tokens": 0, "vector": null, "score": 0}, {"text": "is represented by objects which belong", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 4, "tokens": 0, "vector": null, "score": 0}, {"text": "to a class and have a set of properties", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 5, "tokens": 0, "vector": null, "score": 0}, {"text": "in the previous section of the schema we", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 6, "tokens": 0, "vector": null, "score": 0}, {"text": "learned how to create a framework for", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 7, "tokens": 0, "vector": null, "score": 0}, {"text": "this structure", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 8, "tokens": 0, "vector": null, "score": 0}, {"text": "in this section we'll discuss how to", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 9, "tokens": 0, "vector": null, "score": 0}, {"text": "import data into aviate including our", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 10, "tokens": 0, "vector": null, "score": 0}, {"text": "recommended best practices and some key", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 11, "tokens": 0, "vector": null, "score": 0}, {"text": "considerations", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 12, "tokens": 0, "vector": null, "score": 0}, {"text": "once you're done with this section", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 13, "tokens": 0, "vector": null, "score": 0}, {"text": "you'll be ready to import a real data", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 14, "tokens": 0, "vector": null, "score": 0}, {"text": "set into aviate by putting together what", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 15, "tokens": 0, "vector": null, "score": 0}, {"text": "we've learned about the schema and", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 16, "tokens": 0, "vector": null, "score": 0}, {"text": "imports", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 17, "tokens": 0, "vector": null, "score": 0}, {"text": "to create a webiate object you must load", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 18, "tokens": 0, "vector": null, "score": 0}, {"text": "your Source data build a data object by", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 19, "tokens": 0, "vector": null, "score": 0}, {"text": "mapping your Source data to desired VPX", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 20, "tokens": 0, "vector": null, "score": 0}, {"text": "object properties and add it to your", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 21, "tokens": 0, "vector": null, "score": 0}, {"text": "desired class in waviate", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 22, "tokens": 0, "vector": null, "score": 0}, {"text": "and optionally you can manually specify", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 23, "tokens": 0, "vector": null, "score": 0}, {"text": "an object ID and the vector", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 24, "tokens": 0, "vector": null, "score": 0}, {"text": "if an object ID is not specified maybe", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 25, "tokens": 0, "vector": null, "score": 0}, {"text": "it will create one", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 26, "tokens": 0, "vector": null, "score": 0}, {"text": "it's important to note that if you want", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 27, "tokens": 0, "vector": null, "score": 0}, {"text": "to avoid duplicate objects being created", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 28, "tokens": 0, "vector": null, "score": 0}, {"text": "you can use a deterministic object ID", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 29, "tokens": 0, "vector": null, "score": 0}, {"text": "creation process", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 30, "tokens": 0, "vector": null, "score": 0}, {"text": "if a vector is not specified webiate", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 31, "tokens": 0, "vector": null, "score": 0}, {"text": "will check to see if a vectorizer is set", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 32, "tokens": 0, "vector": null, "score": 0}, {"text": "for the class and if a vectorizer is set", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 33, "tokens": 0, "vector": null, "score": 0}, {"text": "it will create a vector using the", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 34, "tokens": 0, "vector": null, "score": 0}, {"text": "vectorizer", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 35, "tokens": 0, "vector": null, "score": 0}, {"text": "to maximize import speed offers a batch", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 36, "tokens": 0, "vector": null, "score": 0}, {"text": "import process", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 37, "tokens": 0, "vector": null, "score": 0}, {"text": "this process reduces the impact of", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 38, "tokens": 0, "vector": null, "score": 0}, {"text": "network latencies by processing multiple", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 39, "tokens": 0, "vector": null, "score": 0}, {"text": "objects per request", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 40, "tokens": 0, "vector": null, "score": 0}, {"text": "additionally clients like the python", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 41, "tokens": 0, "vector": null, "score": 0}, {"text": "client perform the process in parallel", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 42, "tokens": 0, "vector": null, "score": 0}, {"text": "further increasing the import speed", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 43, "tokens": 0, "vector": null, "score": 0}, {"text": "you should use batch Imports to", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 44, "tokens": 0, "vector": null, "score": 0}, {"text": "significantly improve the speed of data", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 45, "tokens": 0, "vector": null, "score": 0}, {"text": "ingestion", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 46, "tokens": 0, "vector": null, "score": 0}, {"text": "in doing so you can also set batch", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 47, "tokens": 0, "vector": null, "score": 0}, {"text": "parameters such as batch size number of", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 48, "tokens": 0, "vector": null, "score": 0}, {"text": "retries in case of failures and so on", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 49, "tokens": 0, "vector": null, "score": 0}, {"text": "we strongly recommend that you use batch", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 50, "tokens": 0, "vector": null, "score": 0}, {"text": "Imports for any bulk object creation", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 51, "tokens": 0, "vector": null, "score": 0}, {"text": "unless you have a very compelling reason", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 52, "tokens": 0, "vector": null, "score": 0}, {"text": "not to", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 53, "tokens": 0, "vector": null, "score": 0}, {"text": "the batch import process is configured", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 54, "tokens": 0, "vector": null, "score": 0}, {"text": "to handle errors at a batch level and at", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 55, "tokens": 0, "vector": null, "score": 0}, {"text": "individual object level", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 56, "tokens": 0, "vector": null, "score": 0}, {"text": "batch level errors are indicated by the", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 57, "tokens": 0, "vector": null, "score": 0}, {"text": "HTTP Response Code for the batch request", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 58, "tokens": 0, "vector": null, "score": 0}, {"text": "while object level errors are returned", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 59, "tokens": 0, "vector": null, "score": 0}, {"text": "as a part of the response to the batch", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 60, "tokens": 0, "vector": null, "score": 0}, {"text": "creation requests", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 61, "tokens": 0, "vector": null, "score": 0}, {"text": "so it's important to note that even if a", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 62, "tokens": 0, "vector": null, "score": 0}, {"text": "batch generates a successful 200", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 63, "tokens": 0, "vector": null, "score": 0}, {"text": "response there may have been individual", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 64, "tokens": 0, "vector": null, "score": 0}, {"text": "errors at the object level", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 65, "tokens": 0, "vector": null, "score": 0}, {"text": "we'll show you in the code examples", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 66, "tokens": 0, "vector": null, "score": 0}, {"text": "below best practices on how to check by", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 67, "tokens": 0, "vector": null, "score": 0}, {"text": "new errors through callback functions", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 68, "tokens": 0, "vector": null, "score": 0}, {"text": "so to sum up to create a waviate object", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 69, "tokens": 0, "vector": null, "score": 0}, {"text": "build a data object with properties and", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 70, "tokens": 0, "vector": null, "score": 0}, {"text": "add it to a desired class", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 71, "tokens": 0, "vector": null, "score": 0}, {"text": "we recommend that you use batch Imports", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 72, "tokens": 0, "vector": null, "score": 0}, {"text": "unless you have a strong compelling", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 73, "tokens": 0, "vector": null, "score": 0}, {"text": "reason not to because this can greatly", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 74, "tokens": 0, "vector": null, "score": 0}, {"text": "impact your import speed", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 75, "tokens": 0, "vector": null, "score": 0}, {"text": "error handling during import can be done", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 76, "tokens": 0, "vector": null, "score": 0}, {"text": "at the batch level or at individual", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 77, "tokens": 0, "vector": null, "score": 0}, {"text": "object level", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 78, "tokens": 0, "vector": null, "score": 0}, {"text": "you can manually specify an object ID", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 79, "tokens": 0, "vector": null, "score": 0}, {"text": "and Vector for each object in waviate", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 80, "tokens": 0, "vector": null, "score": 0}, {"text": "okay that's it for now thanks for", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 81, "tokens": 0, "vector": null, "score": 0}, {"text": "watching and we'll see you soon", "doc_name": "Schemas Import - Imports", "doc_type": "Video", "doc_uuid": "", "chunk_id": 82, "tokens": 0, "vector": null, "score": 0}]}