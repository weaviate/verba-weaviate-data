{"text": "Dive a little deeper into the key concepts related to authentication, including how the available options are different to each other, ... \nhi and welcome in this video we'll be reviewing the differences between authentication options offered by weaviate in a little bit more depth including Anonymous access API key and openid connect authentication can be complex and something that many users ask us about we provide these options to cater to different users requirements ensuring Securities that taken very seriously but since it is a complex topic let's dive into how each one works in a little bit more detail first let's talk about Anonymous access this is the most simple but also the least secure with this option there's no barrier to interaction if you have access to the wavier instance you can perform any action now with API key or oidc authentication authentication information is passed along to Eva with each request as an additional header the API key method uses a string key that alleviate verifies internally to provide corresponding permissions with oidc though your credentials like the username and password are used to obtain a signed token from an external token issuer like Microsoft OCTA or WCS and passed along to aviate the token is cryptographically signed allowing waviate to verify using information from the token issuer and confirm the owner's identity these tokens also time limited making the system more robust to a token being leaked or intercepted in non-public instances Eva can provide permissions based on the authenticated identity this step is called authorization and is technically different from authentication but is a vital part of the whole process in most cases using a public instance may be too insecure so we recommend using API key Authentication YDC might be a good option for you though if you need visual security but it can't add quite a bit of complexity as mentioned all IDC tokens expire minimizing threads if intercepted the downside though is that these tokens must be refreshed periodically typically every 15 minutes or so if you're using a waviate client this behavior is automated so you don't see it but you can imagine that this will be a very complex process if done manually additionally oidc involves three parties weviate as the resource the token issuer also called the identity provider such as Microsoft OCTA or WCS and the client and each identity provider often uses different configurations and this requires alleviate and the client to match the settings accordingly the complexity required for oidc means that the API Keys usually strike good balance between security and usability however API keys do not expire so if leaked or intercepted they could be used to access your resources until they are manually revoked which is why in some situations the oidc solution might be preferable that's all we have in terms of the comparison of the three authentication methods available with weaviate we hope that this video gives you a good understanding of the differences between the various authentication methods and helps you to choose a preferred option that suits your use case thanks for watching and we'll see you soon ", "type": "Video", "name": "Authentication: Key concepts", "path": "", "link": "https://www.youtube.com/watch?v=Ok9AcWK0R38", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}