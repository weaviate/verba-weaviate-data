{"text": "Laura Ham from Semi Technology explains how to use Weaviate with Jina AI's DocArray. Learn how to set it up easily yourself so ... \nhi everyone i'm laura from semi technologies and\u00a0\nin this video i will explain you how to use vvas\u00a0\u00a0 with gene ii's doc array so docker a is a\u00a0\nlibrary to handle unstructured data and to\u00a0\u00a0 process it embed it and search through it really\u00a0\nefficiently so it's a pythonic api and with this\u00a0\u00a0 library you can use various document stores to\u00a0\nstore the data one of the document stores is wev8 wev8 is a vector search engine and as a vector\u00a0\ndatabase it's you can store and retrieve data\u00a0\u00a0 really fast and it's scalable so it's a good\u00a0\nchoice if you go for a large data set in docker a\u00a0\u00a0 so for this demo i prepared a jupyter notebook\u00a0\nyou can find the code and some example\u00a0\u00a0 that are in this repository which will be the\u00a0\nlink will be in the description of this video in this example i will do a similar image\u00a0\nsearch with fashion images from the h m\u00a0\u00a0 fashion dataset which is available from kaggle okay so before we go to the notebook it's\u00a0\nimportant to have a rev8 instance running\u00a0\u00a0 so the document store there are two options to achieve this first\u00a0\nyou can run revit locally in this case you\u00a0\u00a0 need to have token compose installed and\u00a0\nthe other option is to run a viviet instance\u00a0\u00a0 on the cloud so i will show you both options\u00a0\ni included in the repository a docker compose\u00a0\u00a0 file for abbreviate and the only thing\u00a0\nyou need to do is run docker compose up to start this viv88 instance and\u00a0\nthen it is running on localhost 8080\u00a0\u00a0 so the other option is to run vv8 from the cloud\u00a0\nusing vva cloud service for this you need to\u00a0\u00a0 create an account on refit cloud service\u00a0\nyou can go to console.samitel technology so if you're signed in you\u00a0\ncan create a new eva cluster\u00a0\u00a0 and that's for free so you can choose a name here which will also be the the server name\u00a0\nor the url of your abbreviate instance important here is to choose none when it asks\u00a0\nfor the machine learning model to vectorize data\u00a0\u00a0 because we will do this in doc array so you can choose authentication\u00a0\u00a0 and we don't want any demo data set\u00a0\nloaded in and then you can create um so for now i have it running\u00a0\nlocally let's go to the python notebook you need to have only two libraries installed\u00a0\nif you install docker a full it also installs\u00a0\u00a0 vga's client for you so that's really\u00a0\nconvenient and we use storage vision to\u00a0\u00a0 load in the machine learning model so first let's load in docker a then we would do\u00a0\nsome configuration so um i set some variables for\u00a0\u00a0 the data let's only load in like 50 images for\u00a0\nnow so we can walk through this demo really fast\u00a0\u00a0 you define where the data is located and i also\u00a0\ndefine already which image i will use for querying so as mentioned we have the review running on\u00a0\nlocalhost port 8080 in case you have a weave\u00a0\u00a0 yet instance running on some other location you\u00a0\nyeah need to change the the host location here\u00a0\u00a0 so this initiates the document array we\u00a0\nsee now that there are no documents in\u00a0\u00a0 there yet because we just initiated\u00a0\nit and we're using vv8 as backend so now let's load in data we will\u00a0\nuse docker arrays function from files\u00a0\u00a0 we choose a data path that we defined only 50\u00a0\ndocuments and we use vv8 as our storage mechanism so we see we have 50 documents now in documentary\u00a0\nso those are the 50 unpre-processed images\u00a0\u00a0 oh sorry and we can see them over here so it's\u00a0\nvarious types of clothing then we define a\u00a0\u00a0 preprocessing method we want the the images to\u00a0\nbe smaller to handle them fast with the machine\u00a0\u00a0 learning model we normalize the color and change\u00a0\nthe axis and then we can use documents or dog\u00a0\u00a0 arrays apply function to use this preprocessing\u00a0\nfunction to all the documents really fast so now it pre-processed the 50\u00a0\ndocuments that we have in there next we we will use a machine learning\u00a0\nmodel to create vectors for each image\u00a0\u00a0 which is also called embedding or encoding i use cpu here but if you have a gpu available\u00a0\nit will recognize this if you use this function we use a resnet 50 model and we use\u00a0\ntorch vision to load in this model\u00a0\u00a0 and next we can use docs array embed method to\u00a0\nembed all the documents that we have saved in\u00a0\u00a0 vvate with the machine learning model with\u00a0\nthe cpu and in this case batch size of 20. okay so in 7 seconds we have\u00a0\nall the 50 images embedded this step is optional but i removed the tensor\u00a0\nhere from all the images because now we have\u00a0\u00a0 the vector and by removing the tensor we free\u00a0\nup a lot of memory which will fasten the query\u00a0\u00a0 later on so i recommend you to do this\u00a0\nas well because we don't need the tensor\u00a0\u00a0 anymore okay so next we can query the data\u00a0\nset because now we have all the data loaded in and as i told you before the query image url is\u00a0\nalready defined above so in this case we will\u00a0\u00a0 be querying with this image and the goal\u00a0\nis to find similar images to this image so we apply the same pre-processing steps\u00a0\nwe embed the model as well because we\u00a0\u00a0 want a vector for this query as well and\u00a0\nthen you can find doc arrays find method to find similar images in the\u00a0\ndocs that we have saved in vvate\u00a0\u00a0 with the document query and\u00a0\nthis case a limit of five images okay and then we plot the images that we have as a\u00a0\nresult so as you can see this are quite similar to\u00a0\u00a0 the query image and it's retrieving from\u00a0\nonly 50 images so i think it did a well job\u00a0\u00a0 and that's of course done by resnet 50 model in\u00a0\ncombination with the vector search engine vvate okay that's it you can play around with\u00a0\nit this a bit you can find the link of\u00a0\u00a0 the document of the notebook in in the\u00a0\ndescription of the video okay thank you ", "type": "Video", "name": "weaviate__jina_ai_for_image_search_presented_by_laura_ham", "path": "", "link": "https://www.youtube.com/watch?v=rBKvoIGihnY", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}