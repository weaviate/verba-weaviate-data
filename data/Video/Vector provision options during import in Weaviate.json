{"text": "Discover different vector provision options possible in Weaviate. In this 5 minute video, we explore the various methods to provide ... \nhey there we'll have a look at some \ndifferent ways in which we can provide \nvectors to your objects in web8 \nwe'll show you these options by using \nend-to-end examples in a jupyter \nnotebook you'll need a weeviate instance \nand a python environment even though the \nexamples are in Python the concepts are \nUniversal \nfirst of all you should note there are a \nfew different options for getting \nvectors during import you can have \nwaviate get the vector for you with a \nvectorized module or you can provide \nyour own Vector we'll be covering both \nexamples in this video \nfirst we'll instantiate the Eva client \nin this particular instance we'll \nprovide the API key for the open AI API \nand the URL for our instance \nand here we've got a simple helper \nfunction to display our outputs and \nwe'll test it out by just grabbing the \nmetric Mission about our instance \nand let's quickly check the schema just \nto show you that it's an empty instance \nperfect \nnow we'll load our data the details here \nare important just keep in mind that \nwhat we're loading is our set of wine \nreviews with a body title country and so \non \nso this is a helper function for loading \nour data \nand now ready to import objects let's \nstart adding some objects with previous \nobtained vectors \nwe'll add a class called wine review to \nthe schema like so with the open AI \nvectorizer set and if we check the \nschema again you'll see that the one \nreview class has been added here and you \nsee them down the bottom that the \nvectorizer is specified as the openai \nmodule and already we're ready to start \nadding objects so what we need to do \nnext is to set up a batch process \nand load our objects one by one and to \nadd it to the batch \nnotice that all we're adding is a data \nobject and the class name and we're done \nand just as a reminder the data object \nlooks like that with no vectors in it so \ndid it work let's take a look \nlet's run an aggregate query with a \ncount it looks like we've got 50 objects \nin our database that looks pretty good \nlet's try a vector search \nlet's try a near text query to look for \nsome reviews relating to some fruity \nFrench wines that I enjoy \nso how did we do \nwell it looks pretty good looking at \nthese results the first review talks \nabout some juiciness the second one \ntalks about fruits \nso it's all looking pretty good let's \nmove on to next part \nnow we can try importing objects with \nour own vectors we'll go through the \nsame steps We'll add the objects to \nschema we'll call this the other wine \nreview added to the schema as the new \nclass just note that there's no \nvectorizer specified here \nand we can add objects now we'll leave \nsome arbitrary meaningless vectors for \nthe demonstration here you'll notice \nthat we've got a list comprehension that \ngenerates these vectors they don't mean \nanything but you'll get some unique \nvectors for each object \nso we can run that to import data into \nour database \nand we'll try our Vector search again \nnow we can't use near text as we don't \nhave a vectorizer but we can't use near \nvector and search against an arbitrary \nVector of Our Own \nand when we do we get a series of \nresults and you can see that the top \nresult here is quite close to our source \nvector and when we scroll down the \nvector at the far end or the last of our \nsearch results is the furthest way which \nis the result that we expect fantastic \nwhat if we use another case where we \nprovide the input vectors and use a \nvectorizer how would we do that and why \nwould we do that \nwell let's have a look at the how first \nwe'll create a class called the other \notherwise review \nwe'll go through the same process of \nadding it we've added the vectorizer \nback in here we'll add objects \nand in this instance we're going to \ncreate a string out of our data object \nwe're going to go to open Ai and get \nvectors back and we'll pass that Vector \nonto ev8 manually let's try another \nVector search with this setup \nwe'll use the same data object as the \nlast one in the for Loop and we'll use \nthe same Vector that was generated from \nit it looks like the searches work just \nfine with the top result being the same \nas our query object and the rest of them \nlooking pretty sensible as well but more \nimportantly this setup is useful because \nwe can still use near text while making \nuse of our own vectors and we see \nexactly that here we've run the same \nnear text search but with our own \nvectors and we're able to do that \nbecause the vectors come from the same \nmodel which in this case is open AI so \nin summary you've seen that you can \nprovide your vector to aviate or have \nweeviate handle the vectorization as to \nwhich one you use it really depends on \nwhat you're after if you provide a \nvector with the object that's the one \nthat wev8 will use keep in mind that if \na vectorize is not specified you cannot \nuse near text so in some cases using a \nvectorizer and uploading your own Vector \nmight give you the best of both worlds \nthanks for watching we'll see you next \ntime \n", "type": "Video", "name": "Vector provision options during import in Weaviate", "path": "", "link": "https://www.youtube.com/watch?v=x9ztOHUxALg", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": [{"text": "hey there we'll have a look at some", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 0, "tokens": 0, "vector": null, "score": 0}, {"text": "different ways in which we can provide", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1, "tokens": 0, "vector": null, "score": 0}, {"text": "vectors to your objects in web8", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 2, "tokens": 0, "vector": null, "score": 0}, {"text": "we'll show you these options by using", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 3, "tokens": 0, "vector": null, "score": 0}, {"text": "end-to-end examples in a jupyter", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 4, "tokens": 0, "vector": null, "score": 0}, {"text": "notebook you'll need a weeviate instance", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 5, "tokens": 0, "vector": null, "score": 0}, {"text": "and a python environment even though the", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 6, "tokens": 0, "vector": null, "score": 0}, {"text": "examples are in Python the concepts are", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 7, "tokens": 0, "vector": null, "score": 0}, {"text": "Universal", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 8, "tokens": 0, "vector": null, "score": 0}, {"text": "first of all you should note there are a", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 9, "tokens": 0, "vector": null, "score": 0}, {"text": "few different options for getting", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 10, "tokens": 0, "vector": null, "score": 0}, {"text": "vectors during import you can have", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 11, "tokens": 0, "vector": null, "score": 0}, {"text": "waviate get the vector for you with a", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 12, "tokens": 0, "vector": null, "score": 0}, {"text": "vectorized module or you can provide", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 13, "tokens": 0, "vector": null, "score": 0}, {"text": "your own Vector we'll be covering both", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 14, "tokens": 0, "vector": null, "score": 0}, {"text": "examples in this video", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 15, "tokens": 0, "vector": null, "score": 0}, {"text": "first we'll instantiate the Eva client", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 16, "tokens": 0, "vector": null, "score": 0}, {"text": "in this particular instance we'll", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 17, "tokens": 0, "vector": null, "score": 0}, {"text": "provide the API key for the open AI API", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 18, "tokens": 0, "vector": null, "score": 0}, {"text": "and the URL for our instance", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 19, "tokens": 0, "vector": null, "score": 0}, {"text": "and here we've got a simple helper", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 20, "tokens": 0, "vector": null, "score": 0}, {"text": "function to display our outputs and", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 21, "tokens": 0, "vector": null, "score": 0}, {"text": "we'll test it out by just grabbing the", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 22, "tokens": 0, "vector": null, "score": 0}, {"text": "metric Mission about our instance", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 23, "tokens": 0, "vector": null, "score": 0}, {"text": "and let's quickly check the schema just", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 24, "tokens": 0, "vector": null, "score": 0}, {"text": "to show you that it's an empty instance", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 25, "tokens": 0, "vector": null, "score": 0}, {"text": "perfect", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 26, "tokens": 0, "vector": null, "score": 0}, {"text": "now we'll load our data the details here", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 27, "tokens": 0, "vector": null, "score": 0}, {"text": "are important just keep in mind that", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 28, "tokens": 0, "vector": null, "score": 0}, {"text": "what we're loading is our set of wine", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 29, "tokens": 0, "vector": null, "score": 0}, {"text": "reviews with a body title country and so", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 30, "tokens": 0, "vector": null, "score": 0}, {"text": "on", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 31, "tokens": 0, "vector": null, "score": 0}, {"text": "so this is a helper function for loading", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 32, "tokens": 0, "vector": null, "score": 0}, {"text": "our data", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 33, "tokens": 0, "vector": null, "score": 0}, {"text": "and now ready to import objects let's", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 34, "tokens": 0, "vector": null, "score": 0}, {"text": "start adding some objects with previous", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 35, "tokens": 0, "vector": null, "score": 0}, {"text": "obtained vectors", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 36, "tokens": 0, "vector": null, "score": 0}, {"text": "we'll add a class called wine review to", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 37, "tokens": 0, "vector": null, "score": 0}, {"text": "the schema like so with the open AI", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 38, "tokens": 0, "vector": null, "score": 0}, {"text": "vectorizer set and if we check the", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 39, "tokens": 0, "vector": null, "score": 0}, {"text": "schema again you'll see that the one", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 40, "tokens": 0, "vector": null, "score": 0}, {"text": "review class has been added here and you", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 41, "tokens": 0, "vector": null, "score": 0}, {"text": "see them down the bottom that the", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 42, "tokens": 0, "vector": null, "score": 0}, {"text": "vectorizer is specified as the openai", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 43, "tokens": 0, "vector": null, "score": 0}, {"text": "module and already we're ready to start", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 44, "tokens": 0, "vector": null, "score": 0}, {"text": "adding objects so what we need to do", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 45, "tokens": 0, "vector": null, "score": 0}, {"text": "next is to set up a batch process", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 46, "tokens": 0, "vector": null, "score": 0}, {"text": "and load our objects one by one and to", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 47, "tokens": 0, "vector": null, "score": 0}, {"text": "add it to the batch", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 48, "tokens": 0, "vector": null, "score": 0}, {"text": "notice that all we're adding is a data", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 49, "tokens": 0, "vector": null, "score": 0}, {"text": "object and the class name and we're done", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 50, "tokens": 0, "vector": null, "score": 0}, {"text": "and just as a reminder the data object", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 51, "tokens": 0, "vector": null, "score": 0}, {"text": "looks like that with no vectors in it so", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 52, "tokens": 0, "vector": null, "score": 0}, {"text": "did it work let's take a look", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 53, "tokens": 0, "vector": null, "score": 0}, {"text": "let's run an aggregate query with a", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 54, "tokens": 0, "vector": null, "score": 0}, {"text": "count it looks like we've got 50 objects", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 55, "tokens": 0, "vector": null, "score": 0}, {"text": "in our database that looks pretty good", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 56, "tokens": 0, "vector": null, "score": 0}, {"text": "let's try a vector search", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 57, "tokens": 0, "vector": null, "score": 0}, {"text": "let's try a near text query to look for", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 58, "tokens": 0, "vector": null, "score": 0}, {"text": "some reviews relating to some fruity", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 59, "tokens": 0, "vector": null, "score": 0}, {"text": "French wines that I enjoy", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 60, "tokens": 0, "vector": null, "score": 0}, {"text": "so how did we do", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 61, "tokens": 0, "vector": null, "score": 0}, {"text": "well it looks pretty good looking at", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 62, "tokens": 0, "vector": null, "score": 0}, {"text": "these results the first review talks", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 63, "tokens": 0, "vector": null, "score": 0}, {"text": "about some juiciness the second one", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 64, "tokens": 0, "vector": null, "score": 0}, {"text": "talks about fruits", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 65, "tokens": 0, "vector": null, "score": 0}, {"text": "so it's all looking pretty good let's", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 66, "tokens": 0, "vector": null, "score": 0}, {"text": "move on to next part", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 67, "tokens": 0, "vector": null, "score": 0}, {"text": "now we can try importing objects with", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 68, "tokens": 0, "vector": null, "score": 0}, {"text": "our own vectors we'll go through the", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 69, "tokens": 0, "vector": null, "score": 0}, {"text": "same steps We'll add the objects to", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 70, "tokens": 0, "vector": null, "score": 0}, {"text": "schema we'll call this the other wine", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 71, "tokens": 0, "vector": null, "score": 0}, {"text": "review added to the schema as the new", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 72, "tokens": 0, "vector": null, "score": 0}, {"text": "class just note that there's no", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 73, "tokens": 0, "vector": null, "score": 0}, {"text": "vectorizer specified here", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 74, "tokens": 0, "vector": null, "score": 0}, {"text": "and we can add objects now we'll leave", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 75, "tokens": 0, "vector": null, "score": 0}, {"text": "some arbitrary meaningless vectors for", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 76, "tokens": 0, "vector": null, "score": 0}, {"text": "the demonstration here you'll notice", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 77, "tokens": 0, "vector": null, "score": 0}, {"text": "that we've got a list comprehension that", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 78, "tokens": 0, "vector": null, "score": 0}, {"text": "generates these vectors they don't mean", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 79, "tokens": 0, "vector": null, "score": 0}, {"text": "anything but you'll get some unique", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 80, "tokens": 0, "vector": null, "score": 0}, {"text": "vectors for each object", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 81, "tokens": 0, "vector": null, "score": 0}, {"text": "so we can run that to import data into", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 82, "tokens": 0, "vector": null, "score": 0}, {"text": "our database", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 83, "tokens": 0, "vector": null, "score": 0}, {"text": "and we'll try our Vector search again", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 84, "tokens": 0, "vector": null, "score": 0}, {"text": "now we can't use near text as we don't", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 85, "tokens": 0, "vector": null, "score": 0}, {"text": "have a vectorizer but we can't use near", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 86, "tokens": 0, "vector": null, "score": 0}, {"text": "vector and search against an arbitrary", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 87, "tokens": 0, "vector": null, "score": 0}, {"text": "Vector of Our Own", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 88, "tokens": 0, "vector": null, "score": 0}, {"text": "and when we do we get a series of", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 89, "tokens": 0, "vector": null, "score": 0}, {"text": "results and you can see that the top", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 90, "tokens": 0, "vector": null, "score": 0}, {"text": "result here is quite close to our source", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 91, "tokens": 0, "vector": null, "score": 0}, {"text": "vector and when we scroll down the", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 92, "tokens": 0, "vector": null, "score": 0}, {"text": "vector at the far end or the last of our", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 93, "tokens": 0, "vector": null, "score": 0}, {"text": "search results is the furthest way which", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 94, "tokens": 0, "vector": null, "score": 0}, {"text": "is the result that we expect fantastic", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 95, "tokens": 0, "vector": null, "score": 0}, {"text": "what if we use another case where we", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 96, "tokens": 0, "vector": null, "score": 0}, {"text": "provide the input vectors and use a", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 97, "tokens": 0, "vector": null, "score": 0}, {"text": "vectorizer how would we do that and why", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 98, "tokens": 0, "vector": null, "score": 0}, {"text": "would we do that", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 99, "tokens": 0, "vector": null, "score": 0}, {"text": "well let's have a look at the how first", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 100, "tokens": 0, "vector": null, "score": 0}, {"text": "we'll create a class called the other", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 101, "tokens": 0, "vector": null, "score": 0}, {"text": "otherwise review", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 102, "tokens": 0, "vector": null, "score": 0}, {"text": "we'll go through the same process of", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 103, "tokens": 0, "vector": null, "score": 0}, {"text": "adding it we've added the vectorizer", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 104, "tokens": 0, "vector": null, "score": 0}, {"text": "back in here we'll add objects", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 105, "tokens": 0, "vector": null, "score": 0}, {"text": "and in this instance we're going to", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 106, "tokens": 0, "vector": null, "score": 0}, {"text": "create a string out of our data object", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 107, "tokens": 0, "vector": null, "score": 0}, {"text": "we're going to go to open Ai and get", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 108, "tokens": 0, "vector": null, "score": 0}, {"text": "vectors back and we'll pass that Vector", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 109, "tokens": 0, "vector": null, "score": 0}, {"text": "onto ev8 manually let's try another", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 110, "tokens": 0, "vector": null, "score": 0}, {"text": "Vector search with this setup", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 111, "tokens": 0, "vector": null, "score": 0}, {"text": "we'll use the same data object as the", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 112, "tokens": 0, "vector": null, "score": 0}, {"text": "last one in the for Loop and we'll use", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 113, "tokens": 0, "vector": null, "score": 0}, {"text": "the same Vector that was generated from", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 114, "tokens": 0, "vector": null, "score": 0}, {"text": "it it looks like the searches work just", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 115, "tokens": 0, "vector": null, "score": 0}, {"text": "fine with the top result being the same", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 116, "tokens": 0, "vector": null, "score": 0}, {"text": "as our query object and the rest of them", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 117, "tokens": 0, "vector": null, "score": 0}, {"text": "looking pretty sensible as well but more", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 118, "tokens": 0, "vector": null, "score": 0}, {"text": "importantly this setup is useful because", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 119, "tokens": 0, "vector": null, "score": 0}, {"text": "we can still use near text while making", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 120, "tokens": 0, "vector": null, "score": 0}, {"text": "use of our own vectors and we see", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 121, "tokens": 0, "vector": null, "score": 0}, {"text": "exactly that here we've run the same", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 122, "tokens": 0, "vector": null, "score": 0}, {"text": "near text search but with our own", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 123, "tokens": 0, "vector": null, "score": 0}, {"text": "vectors and we're able to do that", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 124, "tokens": 0, "vector": null, "score": 0}, {"text": "because the vectors come from the same", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 125, "tokens": 0, "vector": null, "score": 0}, {"text": "model which in this case is open AI so", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 126, "tokens": 0, "vector": null, "score": 0}, {"text": "in summary you've seen that you can", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 127, "tokens": 0, "vector": null, "score": 0}, {"text": "provide your vector to aviate or have", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 128, "tokens": 0, "vector": null, "score": 0}, {"text": "weeviate handle the vectorization as to", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 129, "tokens": 0, "vector": null, "score": 0}, {"text": "which one you use it really depends on", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 130, "tokens": 0, "vector": null, "score": 0}, {"text": "what you're after if you provide a", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 131, "tokens": 0, "vector": null, "score": 0}, {"text": "vector with the object that's the one", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 132, "tokens": 0, "vector": null, "score": 0}, {"text": "that wev8 will use keep in mind that if", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 133, "tokens": 0, "vector": null, "score": 0}, {"text": "a vectorize is not specified you cannot", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 134, "tokens": 0, "vector": null, "score": 0}, {"text": "use near text so in some cases using a", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 135, "tokens": 0, "vector": null, "score": 0}, {"text": "vectorizer and uploading your own Vector", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 136, "tokens": 0, "vector": null, "score": 0}, {"text": "might give you the best of both worlds", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 137, "tokens": 0, "vector": null, "score": 0}, {"text": "thanks for watching we'll see you next", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 138, "tokens": 0, "vector": null, "score": 0}, {"text": "time", "doc_name": "Vector provision options during import in Weaviate", "doc_type": "Video", "doc_uuid": "", "chunk_id": 139, "tokens": 0, "vector": null, "score": 0}]}