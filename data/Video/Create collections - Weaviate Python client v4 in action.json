{"text": "Accompanying code: https://github.com/weaviate-tutorials/DEMO-pyv4-release-videos v4 of the Weaviate Python client has just ... \nhey there my name's JP and I'm an educator for we8 in this video I want to show you how to create a collection with the new V4 python client for we8 I'm a huge fan of this client because of the way it reduces my cognitive load and difficulty in working with things like creating Collections and hopefully by the time you're done watching this video you'll agree with me as well so let's get started here I'm working with a data set of movies from tmdb I've got a set of movies and a set of reviews so let's create two collections to go with that let's import wave8 and we'll create a connection I'll use embedded we just for convenience let's create the revie collection first I need to create properties now so I'll need to specify a a list of properties like so and there's a custom class called property to use I need to import these classes so what I'll do is I'll import them as a set from wave8 classes. config as WC and what I can do now is to use that and use the property call the property class from here and let's specify the name which will be title and let specify the T data type and again I can use our import just now specify data tyab which is an enum as text oops that should be username that'll be content which is the content of the review and the ID now the username doesn't mean a whole lot so I'm going to skip vectorization um before i' I've had to remember what the parameter for that was but now I can just look up the word skip select that set that as true and let's do the same thing with the ID cool and I want to specify a vectorizer so I'll look up the vectorizer config parameter isn't this nice and I'll use the configure do vectorizer and let's use coh here today and for generative configuration we'll just same thing but instead of a vectorizer I'm configuring a generative module so I'll say generative dot let's use open AI for this and that's it that's our reviews collection configured and we can do the same thing with or similar thing with movies create the name will be mov of course and let's specify properties like we've done before so there'll be w you see property name equals that should be titled this time data type is WC data type text and let's copy a few of those because we want to import a few properties so we have a tagline we have an overview we have a vote average now that's an average score so I believe that's a floating Point number which is number in wei8 we have a release date which should be a date of course so we can operate on them we have a runtime which is an integer we have an IMDb ID which is Handy if you want to look it up on IMDb and that's also text um that's just an ID so I'm going to again skip vectorization let's add that looks like I've forgot the tmdb ID so let's add the tmdb ID here as well I believe that's an integer so let's specified as such um and let's just use the same configuration for our modules here oops that goes at the end of our list now I want to do one more thing here which is to configure the inverted index so again all I need to do is look up the right parameter by there we go inverted index config and I'll use the same configure gen uh Factory and I believe there's an inverted index function here we go and what I'm going to do is to invert the property sorry to index the property length set that as true and down here I'll show you how to cre set the vector index configuration so again that's WC configure Vector index uh let's use hns W and once I call that function I can do things like set the distance metric um I'll just use the standard one but I'll show you that where the where to set that and that'll be in WC Vector distances and that's an En num again so I can set that as cosine see how little typing I have to do along the way this is really really nice let's do one last thing which is to create a cross reference between the movie and our reviews so that'll be references equals now again I don't quite remember what the class is called but I can just have a look within the WC subm module and if I just search for the word reference here we go I can find the right class let's called that uh it's movies it's going to have some review so it's called it has review and what's the target well that will be our review collection now I'm going to do just one more thing which is to close our connection it's not a big deal if you don't do it um but it would be best practice and we do recommend that you do that with the new V4 API and that's it we're done creating our two collections including references between them and all these properties in just a couple of minutes that's it for our collection creation as you saw there I didn't have to do a lot of manual specification of parameters and so on for me that's been a great benefit in using the new python client over the old one it reduces my cognitive load in not having to remember these parameter names as I work with the data and I think it will be for you as well so check it out and let us know how you go next we'll have a look at some data inputs ", "type": "Video", "name": "Create collections - Weaviate Python client v4 in action", "path": "", "link": "https://www.youtube.com/watch?v=xlmgYh1DakY", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}