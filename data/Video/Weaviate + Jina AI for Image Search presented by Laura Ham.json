{"text": "Laura Ham from Semi Technology explains how to use Weaviate with Jina AI's DocArray. Learn how to set it up easily yourself so ... \nhi everyone i'm laura from semi technologies and\u00a0\nin this video i will explain you how to use vvas\u00a0\u00a0 \nwith gene ii's doc array so docker a is a\u00a0\nlibrary to handle unstructured data and to\u00a0\u00a0 \nprocess it embed it and search through it really\u00a0\nefficiently so it's a pythonic api and with this\u00a0\u00a0 \nlibrary you can use various document stores to\u00a0\nstore the data one of the document stores is wev8 \nwev8 is a vector search engine and as a vector\u00a0\ndatabase it's you can store and retrieve data\u00a0\u00a0 \nreally fast and it's scalable so it's a good\u00a0\nchoice if you go for a large data set in docker a\u00a0\u00a0 \nso for this demo i prepared a jupyter notebook\u00a0\nyou can find the code and some example\u00a0\u00a0 \nthat are in this repository which will be the\u00a0\nlink will be in the description of this video \nin this example i will do a similar image\u00a0\nsearch with fashion images from the h m\u00a0\u00a0 \nfashion dataset which is available from kaggle \nokay so before we go to the notebook it's\u00a0\nimportant to have a rev8 instance running\u00a0\u00a0 \nso the document store \nthere are two options to achieve this first\u00a0\nyou can run revit locally in this case you\u00a0\u00a0 \nneed to have token compose installed and\u00a0\nthe other option is to run a viviet instance\u00a0\u00a0 \non the cloud so i will show you both options\u00a0\ni included in the repository a docker compose\u00a0\u00a0 \nfile for abbreviate and the only thing\u00a0\nyou need to do is run docker compose up \nto start this viv88 instance and\u00a0\nthen it is running on localhost 8080\u00a0\u00a0 \nso the other option is to run vv8 from the cloud\u00a0\nusing vva cloud service for this you need to\u00a0\u00a0 \ncreate an account on refit cloud service\u00a0\nyou can go to console.samitel technology \nso if you're signed in you\u00a0\ncan create a new eva cluster\u00a0\u00a0 \nand that's for free so you can choose a name here \nwhich will also be the the server name\u00a0\nor the url of your abbreviate instance \nimportant here is to choose none when it asks\u00a0\nfor the machine learning model to vectorize data\u00a0\u00a0 \nbecause we will do this in doc array \nso you can choose authentication\u00a0\u00a0 \nand we don't want any demo data set\u00a0\nloaded in and then you can create \num so for now i have it running\u00a0\nlocally let's go to the python notebook \nyou need to have only two libraries installed\u00a0\nif you install docker a full it also installs\u00a0\u00a0 \nvga's client for you so that's really\u00a0\nconvenient and we use storage vision to\u00a0\u00a0 \nload in the machine learning model \nso first let's load in docker a then we would do\u00a0\nsome configuration so um i set some variables for\u00a0\u00a0 \nthe data let's only load in like 50 images for\u00a0\nnow so we can walk through this demo really fast\u00a0\u00a0 \nyou define where the data is located and i also\u00a0\ndefine already which image i will use for querying \nso as mentioned we have the review running on\u00a0\nlocalhost port 8080 in case you have a weave\u00a0\u00a0 \nyet instance running on some other location you\u00a0\nyeah need to change the the host location here\u00a0\u00a0 \nso this initiates the document array we\u00a0\nsee now that there are no documents in\u00a0\u00a0 \nthere yet because we just initiated\u00a0\nit and we're using vv8 as backend \nso now let's load in data we will\u00a0\nuse docker arrays function from files\u00a0\u00a0 \nwe choose a data path that we defined only 50\u00a0\ndocuments and we use vv8 as our storage mechanism \nso we see we have 50 documents now in documentary\u00a0\nso those are the 50 unpre-processed images\u00a0\u00a0 \noh sorry and we can see them over here so it's\u00a0\nvarious types of clothing then we define a\u00a0\u00a0 \npreprocessing method we want the the images to\u00a0\nbe smaller to handle them fast with the machine\u00a0\u00a0 \nlearning model we normalize the color and change\u00a0\nthe axis and then we can use documents or dog\u00a0\u00a0 \narrays apply function to use this preprocessing\u00a0\nfunction to all the documents really fast \nso now it pre-processed the 50\u00a0\ndocuments that we have in there \nnext we we will use a machine learning\u00a0\nmodel to create vectors for each image\u00a0\u00a0 \nwhich is also called embedding or encoding \ni use cpu here but if you have a gpu available\u00a0\nit will recognize this if you use this function \nwe use a resnet 50 model and we use\u00a0\ntorch vision to load in this model\u00a0\u00a0 \nand next we can use docs array embed method to\u00a0\nembed all the documents that we have saved in\u00a0\u00a0 \nvvate with the machine learning model with\u00a0\nthe cpu and in this case batch size of 20. \nokay so in 7 seconds we have\u00a0\nall the 50 images embedded \nthis step is optional but i removed the tensor\u00a0\nhere from all the images because now we have\u00a0\u00a0 \nthe vector and by removing the tensor we free\u00a0\nup a lot of memory which will fasten the query\u00a0\u00a0 \nlater on so i recommend you to do this\u00a0\nas well because we don't need the tensor\u00a0\u00a0 \nanymore okay so next we can query the data\u00a0\nset because now we have all the data loaded in \nand as i told you before the query image url is\u00a0\nalready defined above so in this case we will\u00a0\u00a0 \nbe querying with this image and the goal\u00a0\nis to find similar images to this image \nso we apply the same pre-processing steps\u00a0\nwe embed the model as well because we\u00a0\u00a0 \nwant a vector for this query as well and\u00a0\nthen you can find doc arrays find method \nto find similar images in the\u00a0\ndocs that we have saved in vvate\u00a0\u00a0 \nwith the document query and\u00a0\nthis case a limit of five images \nokay and then we plot the images that we have as a\u00a0\nresult so as you can see this are quite similar to\u00a0\u00a0 \nthe query image and it's retrieving from\u00a0\nonly 50 images so i think it did a well job\u00a0\u00a0 \nand that's of course done by resnet 50 model in\u00a0\ncombination with the vector search engine vvate \nokay that's it you can play around with\u00a0\nit this a bit you can find the link of\u00a0\u00a0 \nthe document of the notebook in in the\u00a0\ndescription of the video okay thank you \n", "type": "Video", "name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "path": "", "link": "https://www.youtube.com/watch?v=rBKvoIGihnY", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": [{"text": "hi everyone i'm laura from semi technologies and\u00a0\nin this video i will explain you how to use vvas\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 0, "tokens": 0, "vector": null, "score": 0}, {"text": "with gene ii's doc array so docker a is a\u00a0\nlibrary to handle unstructured data and to\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1, "tokens": 0, "vector": null, "score": 0}, {"text": "process it embed it and search through it really\u00a0\nefficiently so it's a pythonic api and with this\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 2, "tokens": 0, "vector": null, "score": 0}, {"text": "library you can use various document stores to\u00a0\nstore the data one of the document stores is wev8", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 3, "tokens": 0, "vector": null, "score": 0}, {"text": "wev8 is a vector search engine and as a vector\u00a0\ndatabase it's you can store and retrieve data\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 4, "tokens": 0, "vector": null, "score": 0}, {"text": "really fast and it's scalable so it's a good\u00a0\nchoice if you go for a large data set in docker a\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 5, "tokens": 0, "vector": null, "score": 0}, {"text": "so for this demo i prepared a jupyter notebook\u00a0\nyou can find the code and some example\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 6, "tokens": 0, "vector": null, "score": 0}, {"text": "that are in this repository which will be the\u00a0\nlink will be in the description of this video", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 7, "tokens": 0, "vector": null, "score": 0}, {"text": "in this example i will do a similar image\u00a0\nsearch with fashion images from the h m\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 8, "tokens": 0, "vector": null, "score": 0}, {"text": "fashion dataset which is available from kaggle", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 9, "tokens": 0, "vector": null, "score": 0}, {"text": "okay so before we go to the notebook it's\u00a0\nimportant to have a rev8 instance running\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 10, "tokens": 0, "vector": null, "score": 0}, {"text": "so the document store", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 11, "tokens": 0, "vector": null, "score": 0}, {"text": "there are two options to achieve this first\u00a0\nyou can run revit locally in this case you\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 12, "tokens": 0, "vector": null, "score": 0}, {"text": "need to have token compose installed and\u00a0\nthe other option is to run a viviet instance\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 13, "tokens": 0, "vector": null, "score": 0}, {"text": "on the cloud so i will show you both options\u00a0\ni included in the repository a docker compose\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 14, "tokens": 0, "vector": null, "score": 0}, {"text": "file for abbreviate and the only thing\u00a0\nyou need to do is run docker compose up", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 15, "tokens": 0, "vector": null, "score": 0}, {"text": "to start this viv88 instance and\u00a0\nthen it is running on localhost 8080\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 16, "tokens": 0, "vector": null, "score": 0}, {"text": "so the other option is to run vv8 from the cloud\u00a0\nusing vva cloud service for this you need to\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 17, "tokens": 0, "vector": null, "score": 0}, {"text": "create an account on refit cloud service\u00a0\nyou can go to console.samitel technology", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 18, "tokens": 0, "vector": null, "score": 0}, {"text": "so if you're signed in you\u00a0\ncan create a new eva cluster\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 19, "tokens": 0, "vector": null, "score": 0}, {"text": "and that's for free so you can choose a name here", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 20, "tokens": 0, "vector": null, "score": 0}, {"text": "which will also be the the server name\u00a0\nor the url of your abbreviate instance", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 21, "tokens": 0, "vector": null, "score": 0}, {"text": "important here is to choose none when it asks\u00a0\nfor the machine learning model to vectorize data\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 22, "tokens": 0, "vector": null, "score": 0}, {"text": "because we will do this in doc array", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 23, "tokens": 0, "vector": null, "score": 0}, {"text": "so you can choose authentication\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 24, "tokens": 0, "vector": null, "score": 0}, {"text": "and we don't want any demo data set\u00a0\nloaded in and then you can create", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 25, "tokens": 0, "vector": null, "score": 0}, {"text": "um so for now i have it running\u00a0\nlocally let's go to the python notebook", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 26, "tokens": 0, "vector": null, "score": 0}, {"text": "you need to have only two libraries installed\u00a0\nif you install docker a full it also installs\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 27, "tokens": 0, "vector": null, "score": 0}, {"text": "vga's client for you so that's really\u00a0\nconvenient and we use storage vision to\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 28, "tokens": 0, "vector": null, "score": 0}, {"text": "load in the machine learning model", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 29, "tokens": 0, "vector": null, "score": 0}, {"text": "so first let's load in docker a then we would do\u00a0\nsome configuration so um i set some variables for\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 30, "tokens": 0, "vector": null, "score": 0}, {"text": "the data let's only load in like 50 images for\u00a0\nnow so we can walk through this demo really fast\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 31, "tokens": 0, "vector": null, "score": 0}, {"text": "you define where the data is located and i also\u00a0\ndefine already which image i will use for querying", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 32, "tokens": 0, "vector": null, "score": 0}, {"text": "so as mentioned we have the review running on\u00a0\nlocalhost port 8080 in case you have a weave\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 33, "tokens": 0, "vector": null, "score": 0}, {"text": "yet instance running on some other location you\u00a0\nyeah need to change the the host location here\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 34, "tokens": 0, "vector": null, "score": 0}, {"text": "so this initiates the document array we\u00a0\nsee now that there are no documents in\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 35, "tokens": 0, "vector": null, "score": 0}, {"text": "there yet because we just initiated\u00a0\nit and we're using vv8 as backend", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 36, "tokens": 0, "vector": null, "score": 0}, {"text": "so now let's load in data we will\u00a0\nuse docker arrays function from files\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 37, "tokens": 0, "vector": null, "score": 0}, {"text": "we choose a data path that we defined only 50\u00a0\ndocuments and we use vv8 as our storage mechanism", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 38, "tokens": 0, "vector": null, "score": 0}, {"text": "so we see we have 50 documents now in documentary\u00a0\nso those are the 50 unpre-processed images\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 39, "tokens": 0, "vector": null, "score": 0}, {"text": "oh sorry and we can see them over here so it's\u00a0\nvarious types of clothing then we define a\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 40, "tokens": 0, "vector": null, "score": 0}, {"text": "preprocessing method we want the the images to\u00a0\nbe smaller to handle them fast with the machine\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 41, "tokens": 0, "vector": null, "score": 0}, {"text": "learning model we normalize the color and change\u00a0\nthe axis and then we can use documents or dog\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 42, "tokens": 0, "vector": null, "score": 0}, {"text": "arrays apply function to use this preprocessing\u00a0\nfunction to all the documents really fast", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 43, "tokens": 0, "vector": null, "score": 0}, {"text": "so now it pre-processed the 50\u00a0\ndocuments that we have in there", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 44, "tokens": 0, "vector": null, "score": 0}, {"text": "next we we will use a machine learning\u00a0\nmodel to create vectors for each image\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 45, "tokens": 0, "vector": null, "score": 0}, {"text": "which is also called embedding or encoding", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 46, "tokens": 0, "vector": null, "score": 0}, {"text": "i use cpu here but if you have a gpu available\u00a0\nit will recognize this if you use this function", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 47, "tokens": 0, "vector": null, "score": 0}, {"text": "we use a resnet 50 model and we use\u00a0\ntorch vision to load in this model\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 48, "tokens": 0, "vector": null, "score": 0}, {"text": "and next we can use docs array embed method to\u00a0\nembed all the documents that we have saved in\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 49, "tokens": 0, "vector": null, "score": 0}, {"text": "vvate with the machine learning model with\u00a0\nthe cpu and in this case batch size of 20.", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 50, "tokens": 0, "vector": null, "score": 0}, {"text": "okay so in 7 seconds we have\u00a0\nall the 50 images embedded", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 51, "tokens": 0, "vector": null, "score": 0}, {"text": "this step is optional but i removed the tensor\u00a0\nhere from all the images because now we have\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 52, "tokens": 0, "vector": null, "score": 0}, {"text": "the vector and by removing the tensor we free\u00a0\nup a lot of memory which will fasten the query\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 53, "tokens": 0, "vector": null, "score": 0}, {"text": "later on so i recommend you to do this\u00a0\nas well because we don't need the tensor\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 54, "tokens": 0, "vector": null, "score": 0}, {"text": "anymore okay so next we can query the data\u00a0\nset because now we have all the data loaded in", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 55, "tokens": 0, "vector": null, "score": 0}, {"text": "and as i told you before the query image url is\u00a0\nalready defined above so in this case we will\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 56, "tokens": 0, "vector": null, "score": 0}, {"text": "be querying with this image and the goal\u00a0\nis to find similar images to this image", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 57, "tokens": 0, "vector": null, "score": 0}, {"text": "so we apply the same pre-processing steps\u00a0\nwe embed the model as well because we\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 58, "tokens": 0, "vector": null, "score": 0}, {"text": "want a vector for this query as well and\u00a0\nthen you can find doc arrays find method", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 59, "tokens": 0, "vector": null, "score": 0}, {"text": "to find similar images in the\u00a0\ndocs that we have saved in vvate\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 60, "tokens": 0, "vector": null, "score": 0}, {"text": "with the document query and\u00a0\nthis case a limit of five images", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 61, "tokens": 0, "vector": null, "score": 0}, {"text": "okay and then we plot the images that we have as a\u00a0\nresult so as you can see this are quite similar to\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 62, "tokens": 0, "vector": null, "score": 0}, {"text": "the query image and it's retrieving from\u00a0\nonly 50 images so i think it did a well job\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 63, "tokens": 0, "vector": null, "score": 0}, {"text": "and that's of course done by resnet 50 model in\u00a0\ncombination with the vector search engine vvate", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 64, "tokens": 0, "vector": null, "score": 0}, {"text": "okay that's it you can play around with\u00a0\nit this a bit you can find the link of\u00a0\u00a0", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 65, "tokens": 0, "vector": null, "score": 0}, {"text": "the document of the notebook in in the\u00a0\ndescription of the video okay thank you", "doc_name": "Weaviate + Jina AI for Image Search presented by Laura Ham", "doc_type": "Video", "doc_uuid": "", "chunk_id": 66, "tokens": 0, "vector": null, "score": 0}]}