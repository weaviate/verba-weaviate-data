{"text": "This is the recording of Weaviate's first contributors meetup, presented by Laura Ham. More information: - Weaviate ... \nso let's get started uh so yeah againwelcome um i'm uh lava solution engineernow at uh semi technologies and today iwanna uhintroduce uh review to you and alsoa bit on how how you can contribute tothisuh so first a little bit about uh vvateandyeah the problems that it solves so whatwhat is it exactlyand i will demonstrate this with uh somequeries uh so you see how it works andwhat it can douh i will get uh i will then explain youhow viviet actually does this so alittle bit uhmore towards the technology umand then i will show you how to getstarted and how you can contributeand then in the end we can have uh somequestions and maybe a discussion ifyou're open to thatso first a little bit about revit itselfsoabout the ai-based semantic searchenginewe identified that or we know fromsources thataround 80 of the data is unstructuredtextand this comes from forbes actually andthe problemthat comes with this is that it'sdifficult to search throughand it's difficult to classify dataso what exactly is unstructured text ihave an example here ofthree product reviews of disputedproductsand we see that we have some[Music]rating in number of stars we have a dateso that's kind of structured databut we also like most of the data isactually text itselfandthis text is difficult toto search through if you are notsearching byexact matching keywords but alsothere's a lot of information hidden inthese textsso words like fear and worry andthat this person thinks it's absolutelyamazing are all things thatare hidden in this text and you can dosearch and classification for thisso how is this problem solved right nowsearch isuh for example already solved byenhancing thetraditional search engines with machinelearning capabilitiesor through manual effort andclassificationis uh already solved partly by datascientists whowho make models and manual effort wellwhat are the problems with thisso search which isuh solved partly by machine learningcapabilities what we see mostly is thatthere's just a machine learning wrapperaround the results that traditionalsearch enginesreturn andso that partly solves the problem butit's just really difficult to scalemostly on large data setsthen of course data scientists are ableto make really nice classificationmodels alreadybut we see that data scientists areoverqualified to dolike most of the most of the work thatthey're actually doing like thepre-processing of dataand of course they want to build modelsinstead of just pre-processing and allthat stuffand then of course manual effort that'sthat's really expensive and slowand mistakes can happen if you forexample miss classified data hereand this is where we fiat comes in andv8 is a vector search enginewhich means that it has built-in machinelearning modelsto index data and yeah this automaticfactor representation of dataenables to search through it and thisenables that you can findactually data without using exactmatching keywords but just byproviding context or semanticsit is a it has a graph like data modelso the database itself is not a graphdatabase but it'sbuilt upon a graph structure andthen next it's completely api based soit has a restful apibut more importantly a graphql api whichmakes the user experiencepretty good because you can exactly getwhat you're asking for and do semanticsearches with thisi'll show this later it's completelycloud native so you can run it anywhereit has a open source core which meanswell that's also why we're here forright so it it's alluh it's all run on um it's all all thecode sorry it's onon github and you can you can seeeverything in hereand then uh what we see right now ismostly used for automatic classificationand semantic search but we also have usecases where vp8 is used ascore infrastructure for a databaseso that's also possible so first i willi will show you how this uh works umi have a little demo here uh what yousee here is theis what we call the vv8 console it's agraphical user interface what we builttoto query alleviate and in this field ican make queriesin this you will see the results in jsonformatand for this demo i use thei use one of our two demo data setswhich containsnews publications and articles from theusand this contains about uh 3500articles which is not that much but it'senough forfor a demo of course soum yeah let's let's see how graphqlworks and howqueries are built up and just to seewhat kind of data is in thereso i always start like this and for nowi want tosee what kind of data is in there so istart with the get functionand see what kind of things and thenfrom herewe can see what kind ofclasses we have defined so in this dataset we can ask for articlesauthors categories and publications solet's see what kind of publications arein thereand i just want to see their the namefor now so i pressenter and i see different um[Music]publications so i have around 20publications in herefinancial times new yorkers folk etcand we could do the same with articlesso if i do articles andthe title then i see there there's manymany articlesand of all different kinds so this isabout super bowlthere's five reasons to live in colognegermany and so onbut as you can see here this is there'sno magic happening here i'm justrequesting some data from my databasethis is not something really special umso now i would like to show how thesemantic search then then actually worksand this iswhere the power of rev8 is of coursecoming inso let's get back to the publicationsand if i want to do a semantic search ican add a filterto this class publicationand we call we call this the explorefunction sowe want to explore what kind of data isin there and then see the resultsand the concepts define your search termso let's say i'm looking forpublications around the concept offashionand i don't want to see everythingreturnedbut i want to be sure that we've hadassured that 75that the result is 75 certain that it'sactually about fashionso what i'm doing now is i'm stillgetting things i'm getting publicationsand just their namebut only those that are 75 percentuh sure that it's it's around theconcept of fashionand now uh and this is where it getsinteresting now onlythe publication focus returned and asyou can see hereit nowhere uses the concept or the wordfashion and the fact that thispublication is returned folk is justbecause there are articlesfor example linked to this publicationthat are about fashion that mentionwords like words like clothes and trendsmaybebut it has built this context around thepublicationthat it knows it's about fashion so nowif we change it tofinance for example we see that folkdisappearsand we get back financial times andeconomiesand of course we could we could do thesame with uh with the articlesso if i change publications to articlesagainask for the title um maybe not aboutfinance but now about travelingi get back all publications abouttraveling sothe future of travel in 2020 uhcruises so here you see there's no wordtravel used butv8 knows that cruises uhis related to traveling and that's whyit gets returned hereand we can make these queries even morespecificso let's say i'm not only interested intravel but specificallyin in in sailing or travelingby boat or on the c then i canadd a filter and it's called move tofilter move tomeans i'm literally moving through uhthe spaceof our data so i start with traveland i move i want to move to anotherconceptand as i said let's move to sailingand we can move with a certain forcelet's apply it quite strong hereand i press enter i see that onlyresults around sailing or in this casecruisingcruising rain is about rivers uhget return so that's how the semanticsearch works ityou don't have uh to return only thedata that hasexact matching keywords but it's justabout the semantics and the conceptsum so now i just uh entered single wordsbut this also works if youput a whole natural language sentence inthere so let's say traveling incorona times and we see thatif that we get an article backeverything travelers need to know aboutthe huankorana virus so it makesa search query around these conceptsand i can quickly show you that we use agraphdatabase or graph structure in thedatabaseso all the articles in this demo set arelinked to certain publicationsso i can also ask for in whichpublications all the single articlesappear i can do this like thisand ask for the nameso now i not only ask for the title butalso for the publicationand here i can see i have this was thefirstresult so the everything travelers needto know about the coronavirusand is published in in cnn so this iswhere the graph structure comes inall right umso let's get back to the slidesso how how does this actually workuh how how can it return things thatdon't have the exact matching keywordsand this is uh because we built viviatein or we represent datain a large vector space andthis is in contrast to like row columnum there are traditional databasesand also not in a graph structure butit's it's an effective space anda vector space in our case consists of300 dimensions andin their words and concepts and dataobjects areplaced using coordinates which arecalled factorsand weaver learns the context of dataobjects and wordsby representing them in this 300dimensional spaceand here i will use three dimensions forsimplificationbecause i mean who can imagine 300dimensionsso what you see here is actually anempty viviateand all the pink dots that you seethat is that are concepts and words inthe pre-trained language modelas i explained earlier so if you usevvateit now comes with a pre-trained umlanguage model which is used toindex the data that you add later andhow these dots areplaced is about their meaning and theircontextso if i take an example herethe coordinates are placed[Music]by means of their meaning sothat also means that the distancebetween different pointsare uh yeah mean how how close and howfaruh concepts in their meaning lie fromeach otherand so in this example we have likefashion and sweaterthose are really related in theirmeaning but they are very far awayfrom for example article and kovit 19.so as i said this is just an empty butpre-trained language model so there'sthere's no actual user data in thereand so let's let's add adata object how does that workand i have an example of article hereso let's say we want to add an articleto our database with the namethe impact of coronavirus on travelindustry which has maybe a certainsummary of more wordsit has links to authors and links to apublicationwhat we they then does on import time isit takes all these conceptsand makes yeah basically one largesentence or one largestring of it and thenit does some calculations namely uh itcalculates how important each word isso you can imagine that for example thewords coronavirus and travel andindustryare more important they have moremeaning than the words has and inand um it calculates distances and thencomes with in the end one factor of 300dimensionsor three in our example and then it canbe placedin the vector space soif we just add an article about coronavirus and travelingmaybe it will place in the middle ofthese three conceptsand what then happens if you perform asearch queryis that the search query will also getindexed and placed in this vector spaceand then concepts and or data objectsthat will be close to your search vectorwill be returned firstokay um i hope you're still with meafter this this demo andexplanation how it works so i will showyou now how toget started uh with vv8 if you want touse it yourselfum i'm not showing this with a demobecause we don't have all the time ofthe world but i willquickly go through some documentationso if you are the documentation can befound at semi.technologydocumentation and thenthis is review so of course you can readall aboutreview at first but then we have pageson getting startedand on the quick start guideit basically explains everything you candosoi will place the links in the chat lateryes thanksum sorryokay so umlet's see hereum so the quick start guide it explainsyou how tohow to get started with docker composeand thenmake a first schema make you add yourfirst data and uhdo some first queries but this is allvery basic soif you want to add for example more ofyour own data or want to havea real vp running in the cloud or inyour ownmachine you can go to the installationpageand we basically have four differentsetupsso you can choose to use v8 with dockercomposeand you can then run it locally or onthe cloudand we have a nice configuration toolalso toto retrieve the the rightconfiguration file for for dockercompose and you can choose for examplewhichlanguage model language you want to havein therethe second option is cloud deployment sovf8 is also available on google cloudmarketplace and you can find the detailstherethen thirdly we have a refit clusterserviceand this is if you want to havereviewed running in the cloud but youdon't have your owncloud instances available then you canrun it onour cloud services and you can try itout two weeksfor free and it's all explained in theconsole so you need to make an accountin the consoleand then you can create a cluster hereand thenthe sandbox of two weeks is for freeyou can enable disable authenticationyou can even choose to have uh the demodata center that just showed youalready in there and the language andthen you can create itand it will take like five minutes to tostart up this cluster before you can useitand then the last option is withkubernetes and that's really forlarge-scale production setups if youhave really big data setsand so this is not if you want to getstarted i thinkbut we have all the helm chartsavailable if you're interestedand then um since vp8 is allum yeah on api level let's say we havemade already three client librariesin go python and javascript andi'll just show you python now reallyquickly it'savailable just via pip installand yeah you canuse it really easily in your pythonscripts todo all the query operations and they areall explained in a restful apidocumentation and graphql documentationso for example in the graphqldocumentation this is one of the queriesi just showed youso this is a simple query and then wealso have ituh you can see how this is done inpython javascript goor old fashioned with girlso yeah that's that's how you basicallycan get started using your own languageas welland then we have different how-to guidesif youwant to have more details on how to getstarted with specific topicsand then how to contribute so this isthe main theme of this meetup of courseumso we're currently working towards thestandalone version vp8 is nowstill dependent on elasticsearch asa as a back-end graph sorry backhanddatabase but in a bit more than a monthwe are moving to a standalone versionso we're working hard on that but ofcourse there areway more ways to contribute to the opensource vbaand i basically split this up into twoareas so we haveuh first of all you can of coursecontribute on codecode on github um on one of our projectsand second is uh also just providingfeedback or ideas ortesting in in words on one of ourchannelsis of course also contributing onimproving deviateand so onso first contribute in code or github sowe havevarious open projects and umi'll just quickly show you where to findthis and how to get started sofirst one is we have on githubuh on vvcore we have a issues with thelabelgood first issue so if you go tovivian's github i will share the linklater alsoand go to issues thenum you can filter with the labeland you see um issues that areyeah good to start with that are likereally easy and low level to start withcurrently we have one that will be morein the future for sureumsecond one is we want to have areview java client at some point soas i just showed you in thedocumentationwe currently have three client librariesin gold python and javascriptbut since v8 um isyeah on api level and we have heard fromour users that also they want to run vvafrom their java scriptor yeah like draft java codes then umyeah there's currently no like realclient available and we want to makethisavailable and like developing such ajava client can be reallylike rather straightforward becausethey're like thethree clients that we have are reallygood examples andin java it can be made with the samedesign in the same function structurebasicallyand so in our documentation we also havecontributors guide on the right sideum where you can also find informationon how to develop such a vivid client sowe havecertain guidelines for this umwhich functions it for example all needstohave before it can be fully used for vpaso so that's an optionthen we have are always looking for demodata setsso as i said we have two demo data setsavailableand running actually on cloud instancesright now which you candirectly use um but of course vv8is a very generic solution to many manyproblems and many use cases so we'realways looking forother data sets in other for examplebusiness use casesand i can show an example here so wehavei've made a while ago a demo on archivescientific papers so that's like a dataset of 1.7 millionscientific papers and i made somescripts topull the data from internetand then make a schema and then uhimport it to deviateand make test queries and how i set itupalso with like continuous integrationand so on is all uh open on github aswell of course soif you want to use viviate for your ownprojectyour own data set you can look at thisexampleon how to get started with thisand of course we are always open tocollaborate with forming finding formingnew data setsand running it on cloud instances fortesting and so onthen fourth is software testing so ofcourse since it's a software project wedo a lot of testingand this becomes even more important nowthat ourlike core v8 but also all the othergithub repositories are growing but alsoour user base is growingit's super important and then besidesthe usual uh like functional testinglikeunit testing and integration testing wealso want to douh usability testing or scalabilitytesting for exampleand these are all cases that we uh doourselves of courseas well but if you want to test out onyour own data setor with a diff withyourself as user with other users that'sof coursesuper great and super important toimprovewith y8and then lastlywe have quite extensive documentationand as most of you arenew to to review and you willprobably use the documentation a lot toto get startedand and to use specificapi functions and so on and any kind offeedback on this is really important forusum and for vvate because of coursehow the users start using itdetermines on how effie it will actuallybe usedin their projects later uh soany kind of feedback is welcome not onlyumthings that can be improved but maybealso things that you find really helpfulso we can improve thatand then yeah as i just showed youquickly alreadyum we have a contributors guide on uhon the documentation so it's over hereand in the contributors guide you canfindall information on how we developsoftware andwhat the philosophy is behind vv8 andbehinddeveloping for vp8 umand also how to build run and test thecode for exampleand as you can see here how to set upyour localenvironment to get started developingfor vvaand then as i said some guidelines onmakingclients but also we have benchmarks onsome tests that we doon the language model it can all befound hereall right then uh secondly umyou can contribute to improving vvate byuh just giving feedback in one of ourchannelsso uh yeah as i saidplease just try out v8 uh uhsee what what you can do with it andthen you canbring your own use case on open or closedataof course if it's open data that's supergreat because that means you canalso share it with other communitymembersum and also onone of our channels but of course youcan use vva forfor closed data as well umyeah as i said all ideas are welcome soyou can think ofuh also new features or features thatyou think are missing andand post a question on as an issue ongithubor on stack overflow or on slack or onone of our other social media channelsbecause weread them all and we have activecommunity community members on them allso that's greatum yeah so that's what i wanted to shareyou aboutvv8 and how to contribute today", "type": "Video", "name": "Weaviate Contributors Meetup #1", "path": "", "link": "https://www.youtube.com/watch?v=Gd5Fx0fOdfA", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}