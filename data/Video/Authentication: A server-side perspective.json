{"text": "See how to configure Weaviate to allow various authentication options. Learn how to allow public access, or to set it up to require ... \nhi there in this video we'll show youhow to configure weeviate from aserver-side perspectiveyou probably know that wev8 offersmultiple authentication options whichare Anonymous access API keyauthentication and or IDC Authenticationwe'll show you how to configure theseoptions with examples using a Dockerbased vb8 instance note that theprinciples are applicable to kubernetesas well although the variable namesmight be different for Helm chartsplease also note that these arecurrently not applicable WCS instancesbecause they come pre-configured let'sget started let's start by runningweeviate without any authentication nowyou might remember that running waviatewith Docker involves setting up aconfiguration file like this runningDocker compose up Dash D on the shelland running Docker PS we can see there'sa wave 8 instance running and noticethis variable in the configuration fileas the name suggests it means thatanyone can access this instance user GPUnotebook sale that I've set up for thisdemo will instantiate a client here andcheck its connection and just confirmthat it can perform different types oftasks we'll read the schema and thenwrite a new objectand running the cell you can see itworks just fine now let's see whathappens if we switch Anonymous accessoffand restart waviate by running Dockercompose down and Docker compose up againand now if we run the same cell as wedid beforeyou'll see that it takes quite a longtimethen aviate eventually throws anexceptionbecause it has refused our connectionso now let's address that by introducingAPI key based Authenticationto allow users to authenticate by APIkey we need to set up these threeenvironment variableswe'll start by enabling the API keyAuthenticationand we'll add to a list of allowed Keysa test keyand we'll add me as an allowed user andwe'll just restart wave 8 by running thesame commandand to log into wavegate we can just goback to our GPU notebook and add the APIkey that we've defined as a parameterlike soand with the API key defined you seethat we can happily perform all threetasksnext we'll show you how to definedifferent levels of access for differentusersto do so we need to Define authorizationvariables which are these ones shownherefirst we'll need to enabled admin listand we'll Define users who will be partof the admin listand users that will be part of theread-only users listlet's add a new user called Dave as aread-only useradd him to the list of API key usersand the corresponding API key as wellnow if we save those settings andrestart vb8 once again and go to ourJupiter notebooks and swap out our keyas the new key for Dave and run the cellyou'll notice that the first twocommands without any problemsbut we couldn't run the right lastcommand as Dave does not have sufficientpermissions to create objectsif we did want to give Dave full readand write access we can do that bysimply moving his name from the list ofread-only users to the list of adminlist users going through the same stepsnow all three commands run without anyissues using Dave's API key setting upoidc is a very similar process tosetting up API key access we need to setup these variables to match the settingsof the token issuerlet's start by enabling IDCnow the rest of these settings will beunique to your token issuerin our case we'll use WCS as the tokenissuer and you can find those settingsby navigating to the authentication pagein our documentationnow when you scroll down you'll see ourinstructions on how to configureweeviate as the resource these are theoidc settings to be usedso we can just start to copy theseinside configuration filestarting with the oidc issuerthe client IDand the username claimand lastly just as we did before we'llprovide a specific level of permissionsfor the user and we'll do that by addingmy username to the list of admin userslet's now restart waviate and let's seeif those credentials allow us to accesswaviatewe'll just comment out this linespecifying the API keyand let's create a new variablespecifying the oidc credentials theclass to use here is the auth clientpassword class and we just need to passon the username and password asparameters like you see here I've savedthem as environment variables just forsecurityonce you've done that pass on thecredentialswith this parameter as we did beforeand if we run the codeyou can see it works just finespecifying on oidc credentialed user asa read-only user is the same as beforejust get the username and instead ofadding it to the admin list to usersjust add it to the read-only users so ifwe run the same cell we see that just asit did before it runs the first twocommands just fine but it's not able tocreate an object as I don't havesufficient credentialswe hope this video gave you a good ideaof what you need to do to set upauthentication and authorization foryour webiate instancethe variables set up are those thatstart with authentication andauthorization like these and note thatyou can set up a combination of API keybased access as well as oidc but keep inmind that Anonymous access will bedisabled once API key or oidcauthentication is switched onthanks for watching see you next time", "type": "Video", "name": "Authentication: A server-side perspective", "path": "", "link": "https://www.youtube.com/watch?v=0oxL1J0W-Hs", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}