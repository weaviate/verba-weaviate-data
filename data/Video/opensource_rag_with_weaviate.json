{"text": "Dive into the latest update of Verba (v0.3) in our \u201cBuild it with Weaviate\u201d series. In this episode, Edward guides you through the ... \nhey everyone I'm Edward from we8 and Welcome to our exciting series build with we8 today we're going to explore the latest update of our open source tool verba the golden Rec rever we'll take a look at all the new features go through uploading and chatting with the 80 page speciel thesis and install verba on our own device if this sounds interesting let's get started rag stands for retrieval augment generation and allows us to interact with our own data given a query like what is wv8 we access our knowledge base which can consist of documentation blocks or transcripts we then retrieve relevant information through Vector search these retrieve documents are then used as context for large language models to generate a response for us with these Advanced models jetting with data is not just possible it's intuitively simple for developers the challenge has always been to efficiently and accurately search for specific information and we've all been there searching for Solutions on platforms like stack Overflow or Googling for the 10th time how to center a div but when faced with unique problems or navigating through vast documentation these methods might not be enough to get a solution for our individual problem and this is where verar comes into play an open- Source rack tool that transforms how you interact with your data the front end allows you to ingest data using popular libraries like Spacey hugging face unstructured cohere open Ai and many more what makes verba really stand out is that it's easily installable through a pip install and one start command the interactive chat interface not only lets you converse with your data but it also verifies the sources of the information it provides to demonstrate we've deployed a life demo populated with all of our WEA documentation blog posts and video transcripts this demo is your go-to resource for any weate related queries whether you're curious about how hybrid search operates or need guidance on implementing the near text feature in Python verba is here to help you become a better developer verba seamlessly integrates into the open-source ecosystem a hub of innovation and collaboration it's fully equipped to utilize models from hugging phas like sentence Transformers and groundbreaking open- Source llms including meta's lava 2 model but that's at all the newly refactored code in verba opens up a world of possibilities allowing both users and our open source Partners to effortlessly integrate their custom components into verba Rec pipeline let's dive deeper ER into verba's capabilities at its core verba is versatile supporting data ingestion from various formats like text markdown Json and PDF files our chunking process powered by spacy offers two efficient methods to break down your documents Spacey is a lightweight yet powerful tool for natural language processing when it comes to embedding data into vi8 verra stands out by its support for sentence Transformers open AI Ada model and coher model using rat's hybrid search and autocard feature we can retrieve relevant chunks efficiently and precisely hybrid search uses traditional keyword search together with Vector search combining The Best of Both Worlds and improving results significantly and all of this sets the stage for users to choose from a variety of llms to generate responses be it the latest open AI turbo model Lama 2 or C here of course Speed and Performance are key in verba to ensure a good user experience that's why we've implemented token streaming which is enabling faster access to responses we made interactions with verba feel more natural and intuitive by introducing conversational context and to boost efficiency further we enhance our semantic cache which now also includes conversational history this means verba not only responds more quickly but also more contextually understanding the flow of your conversation now let's put verba to the test we'll be ingesting a 80 page B thesis from a good friend of mine which he recently submitted and is Rich with interesting insights this thesis focusing on training a CNN model for asset detection in Germany energy grids is a great way to show how you can use any data to interact with it's it's also a great example scenario where verba must really rely entirely on provided context to navigate and retrieve information so we can't rely on any training data of the llms so in verba we go ahead and click on ADD documents here we can configure our type of reader we want to use for this use case we will utilize the PDF reader part by unstructured to read the thesis so let's select the B thesis file for the upload we now also have the possibility to select a different chunking technique or a different embedding but let's keep it on default and press import after it's done we ingested 621 chunks into wv8 so let's double check on the documents page here we can see and search through all the ingested documents and we can see that our bachor thesis is included with everything set up we can now start asking questions so let's start with what's the goal of this thesis the response is that the thesis is about predicting the presence of four specific Assets in prer households using smart meta data Note that on the right we have the individual chunks that were used to generate the information but let's dive deeper and ask what data was used to train the CNN the the answer is that the CNN was trained on German smart meter data that include hourly measurements of energy consumption well that sounds exciting let's ask about the fscore of the CNN and again note that verba automatically saves the queries to suggest autocompletion in the future there seems to be four F scores for four different predictions wallbox photovoltaic systems battery storage and pump prediction this sounds like a really intense thesis so let's wrap it up and ask about the results as you can see if verba has not the required context it needs to answer the query it will actually say so and try to work with the context it has instead of hallucinating and there you have it in just under a couple of minutes Vera has provided us with detailed insights into this comprehensive document so whether it's a Bor thesis a technical manual or any other data set you can use this tool to improve how you access and interact with information so interest interested in using verba yourself no worries the installation is actually super simple and I'll show you how so first things first we need python on our system preferably version 3.9 or later so let's check our python version by using python D- version before installing verba let's set up a virtual environment you can choose whatever technique you like for this example I'm using virtual an also don't forget to actually activate your environment with the environment now activated we're ready for the next step installing verba we simply use the command pip install golden verba to install verba's base installation which supports cohere and open AI right off the box for those inclined toward hugging face models pip install golden Vero hugging face will seamlessly integrate additional dependencies like Transformers torch and hugging face Hub so let's type in PIP install golden [Music] verba once everything is installed let's create a DOT environment file file to store our API keys for this example we'll add the coher IPI Key by setting the cohere II key variable once that's said we're ready to launch verba with the verba start command that brings the front end to life on Local Host 8000 in verba let's go to the status page that offers us insights into the libraries and keys available to us and let's check if we can also see the coher [Music] key all right let's put it to the test we'll import the Wikipedia page of Minecraft a popular Sandbox game about blocks and now let's ask Roba what is Minecraft uh Frey box game with no goals and allowing large amount of Freedom well this sounds like the micraft I know and there you have it in less than a couple of minutes we set up verba and imported our first piece of data for more detailed instructions on retrieving those API keys from various providers be sure to check out our GitHub page there you will find a comprehensive guide covering all installation options and WEA deployment methods verba is built in collaboration together with the open source community and partners the new modular architecture enables users to easily add new functionality to tailor verba to their specific needs the new version of verba could not have been done without you the community and a great contribution from various users we're super thankful for the support and hope that you keep supporting open source we're excited to share this cool Journey with you and we keep working on adding feutures to verba in this video we have had a closer look into the new verba update how to use it to interact with our data and how to install it on our device I really hope you enjoyed watching this video and I hope to see you next time bye ", "type": "Video", "name": "opensource_rag_with_weaviate", "path": "", "link": "https://www.youtube.com/watch?v=IiNDCPwmqF8", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}