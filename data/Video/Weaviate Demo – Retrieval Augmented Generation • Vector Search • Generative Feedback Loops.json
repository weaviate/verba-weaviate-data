{"text": "Weaviate Vector Database Demo by Bob van Luijt \u2022 Retrieval Augmented Generation \u2022 Vector Search & Hybrid Search ... \nhello everybody we are going to look atthe retrieval augmented generation demobased on the weavate factor database agenerative model and a vectorizationmodel and we're going to look at aconcept called generative feedback loopsthat are you know closely related toRack it is described in this blog postwe're going to use Airbnb data andthat's also in this blog post soeverything that I'm about to show you issomething you can try out yourself aswell this is the Vivid console so thisis where you can connect to a V8instance that's running on the Vividcloud service I'm going to use graphqlto search through the data set but youcan also use Python JavaScript Java gowhatever you like so let's look at whatwe have here in this data set so thisdata set contains Airbnb listings so aUC bunch here so here like the host namethe name the neighborhood the price roomtype and those kind of things butone thing that you might notice is thatthere's no description and that's onpurpose because this data set simplydoes not contain descriptions so onething that we can do is that we canapply rack and rack works something likethis so we have a module inviator doesit for you so here we go so generateand then we say we want to see a singleresult so that means rather than doingall of the results we go one by oneand then we say for the single resultwe give it a promptand the prompt is I've prepared thishere this is the The Prompt we're goingto useso I just copy this in and basicallywe're saying like here write a shortAirbnb description for the listing andthis is how we Define the property nameso that is related to this name and thenwe say like include the name of the hostetc etc and let's do that for the firstthree just to get an understanding ofwhat's actually happening so let's runthat query and see what happensso what you see here is actually rag inaction so now we have theumhere we have the listing and now we havea result that is generated based on thatlisting right so it's a nice listingum a description based on this you knowsparse set of information that we'vegiven it but the problem isor well not the problem but theinteresting situation is that this islike a one-way Street ride because webasically pipe the results through thegenerative model and get this backbut the cool thing is if you canactually store that back in our databaseand search over it soum there's a way to do it and we've hitit's very simple and here I have apython example so you see here I havethe exact sameum uh prompt and this is basically alittle you know snippet of python go toupdate all the listings with generatedcontent so let's run that and see whathappensso let's go back here and now the thingis we can remove this complete sectionbecause we don't need it and let's runthat same query as we did beforelet's remove the limit so here we goso as you can see here we now have theselistings but they are now stored in thedescription field and this is where thevectorization module of review it kicksin because let's look at the firstlistingand now we can actually say well didthis listing at avector embedding and then I should seethe answer is yes so this first listingif we scroll all the way down this isthe vector embedding that we've given tothis listing so what we can do with thatis that we now can do Vector searchso let's do a hybrid search where wecombine uhum a the vector index with the beam 25index and let's search for let me thinkacozy place near a park too oh my dogright so what's going to happen when Ihit search is basically that the querygets vectorizedit's simultaneously simultaneously doeseffective search in a hybrid search andit will return some resultso here we goso now you see it Returns the resultwhere it says welcome to John's cleaninquiry Department located by thebeautiful Park etc etc so this isprobably a good result but the coolthing here is that we've now been ableto do Vector searchover a description that was not in theoriginal data set but we can actuallyyou know keep you know going so now wecan basically take the generateddescription and we can do another racksearch so there we go generatesingle result let's go here singleresult and then we go to prompt and thenwe can say something like um oh here wego we can say something likeI don't knowwhy is the following agooduh listingto my dog something like I don't knowsomething like that right and then we'rebasically going to say we want thedescription so we're going to get thedescription and now if you run thiswe're basically gonna again vectorizethe queryget this data object back and then usethe generated content to try to get thisquestion answered so let's see whathappens here we goso now we get back as you can see thesame resultbut it also gives an answer this lessonis good option for working your dogbecause one the apartment is locatednear a beautiful Park well etc etc sothis is an example of using the vectordatabase doing Vector search andapplying retrieval augmented generationor rankplus we've now introduced this conceptof generative feedback loops where webasically store the data that's comingout of rack back into the database sothat we can search over itum I hope this was helpful and I'mlooking forward to see what you willbuild with vv8 and these models andthese modules", "type": "Video", "name": "Weaviate Demo \u2013 Retrieval Augmented Generation \u2022 Vector Search \u2022 Generative Feedback Loops", "path": "", "link": "https://www.youtube.com/watch?v=VAxrREiugxQ", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}