{"text": "00:00 - Introduction 03:57 - Install Weaviate 10:05 - Running Weaviate with Docker 11:57 - Working with a Weaviate schema ... \nso again that is the the golden smithwas more to look at the setup schemasimporting uh data and working withgraphql within wv88uh again there are other meetups plannedas well more deep dives more abouthorizontal scalability those kind ofthings the goal of this one is moregeneric so we're going to look atinstallation as setup so how you canwork with the wv8 i'm going to run aninstallationi'm going to show you how you canconfigure an installation we're going totalk about schema becausesomething that is important within vv8is the uhis the schema we it works for the schemawe're going to look at importing datawe're going to look at the clients thatyou can use actually interact with theapis coming out of ev8and last but not least we're going tolook a little bit at the graphqlinterfaceum the graphql interface is often usedtoyou know show bf's capabilitiesum in this situation i'm going to lookmore at graphql from the perspective ofwhen we create a scheme and if we workwith a schemasoyou might have seen this drawing moreoften or is this visual and what we tryto show with this visual is thatumwe've hit is not only a tool to workwith and secure machinery models it'sactually a database on its ownso what you see in the center andsomething that you also see when we goover the installation is that you canalso choose to run vf8 standalone we seealso some community members do thatbecause for example they have their ownvectors or they have very specificmodels that they want to work withand then the power sits in the fact thatyou can store both the data object asyou can see here with my mouse and thefactory representation ofthe data object how you're representingitand you can choose to or have fifavectorized data for you so as you cansee here we have text factorization wehave image factorization we currentlyhave also some community members workingon audio we know people working on videobut what we now have out of the box istext factorization and imagevectorizationor you have these other modulesfor example to connect semantic searchor question answering and those kind ofthings so it's very important to bear inmind so you can you can use we've runwe've had standalone but then you haveto provide your own vectors to representyour dataor you can use one of these modules torepresent the data something we willalso go overimportant to bear in mind the the schemathat we'll be looking at abbreviate as aclass propertyschemaimportant also to bear in mind thatsometimes people refer to it as a graphdatabase which it is not with it is avector database the focus is onvector searchbut we've decided to adopt thethe graph data modelthat we get from graphql to representthe data so regardless if you think ofvf8 as aa nosql database where you have dataobjects representing the dataor maybe even if you look think a littlebit more in in a sequel like structurewhere every i don't know every row orsomething has a as a factorypresentationwe have chosen this representation andthe easiest way to think about that isthat every data object so what you seehere in the yellowishcircle with a clause on a propertygets a vector representation that youcan place that in the vector space wellthis is a very simplistic one becausethis is an x y and as you will see laterthesemachine learning models outputmore complex vectors or morehyperspace vectors or if you want tocall them so but that's basically theconcept so that's what makes umvivid as a databasedifferent so it's notfocusing necessarily pure on the nosqlpartnot purely focusing on on the graph partis really focusing on working with thesewith these vectorssolet's dive right in from the perspectiveof the of the documentation so if you goto vvh documentationthis is the page where you start and thefirst thing that you want to look at isthe is the installation and one of thethings that we created to install withthis and the customize your we've yetset upway more information if you want to gomore into kubernetes or the cloudservice or what have you you can look atthose as well buta nice way to get started is to look atthe uh the customizer and the customizeris just a menu where you can exactlywalk through to basically configure thisimageso we start from the perspective of thecenter so what we've had version do youwant to use well needless to say that italways starts with the hand but evenwith the latest versionso we selected abbreviated versionthen you select the media type so themedia type is referring to here what yousee with the text factorization or theimage vectorizationso actually if iclick the drop down menu we can see textimages text and imagesor noneif i select none i'm basically saying ionly want to use this center piece sothis is the piece that people are usingif they just want to store their dataobjects and have their own vectorrepresentationswe're not going to do that so we'regoing to say like we're going to go fora for a text media typeand it automatically asks which one doyou want to use so we have two moduleshere you see text modulesand those are in line with the modulesyou see in the left hand side the texteffect modulesso we havethe contextionary that is based on gloveand and or fast textand is only utilizing cpu so this one isoften used for for exampleclassification tasks or where speed isof the essence or where gpus areunavailableor we have the transformersumso let's choose the transformerswe have a few pre-packaged transformermodules as you can see here so the mostused for semantic searchhoweverif you have your owntransformer model you can use it as wellsowhat you can do is that you can if yougo into theso let's go in here so if you go intothe menu item of the text effecttransformersyou can even uh load a publiclyavailable hugging face model intointo one of these modules as wellbut for now we're going to go with theprepackaged modules which means as muchas as you will see in a bit that thecontainers are just we prepared thecontainers for you so you don't have todo anythingthen we have for example the q a moduleas you can see here as well so this isrepresenting this modulei'm going to disable that for nowwe have named entity recognition gonnaof disabled as well spell check modulei'm going to keep thatdisabled as wellgpu support so if you're running amachine that supports gpu you can justsimply enable itumi'm not going to do that because i'm notgoing to run it locally and i don't haveagpu available on this on this laptopumimportant to mention for these modulesis thateven if you want to umyou can oh let me accept somebodyso what you can do is you can use thesebasic modules but what you can even dois that you can create custom modulesand we willdive a little bit further in what thatexactly means but the last meetup fromtwo weeks ago that my colleague laurapresentedshe really dives into these custommodules but i'll say a few words aboutthat in a bit as welland so we're going to keep the gpusupport disabledthen we have this isa not for community users this is forenterprise users so i'm gonna usedisable this as well and then you canuse select your desired runtime and i'mrunning it on my local machine so i'mgonna go for docker composeand what you see that happens is just itoutputs a curl command that downloadsthe docker compose fileand what i'm going to do is i'm justgoing to select this docker compose filejust to look at it so that we canquickly look at what's actuallyhappening sowhat you see hereis that wev88 is build so if we go backto this image againeverything is packaged in separatecontainers so the more modules youselect that's perfectly fine but themore containers you will be runningso here you see of course the the thethe core container if you willthat is we've ate itselfthere's some configuration attached toit which of course in the documentationyou can find more about that as wellbut here for example you see that we'vechosen the text-to-effect transformersmodulethe image that we pre-packaged that'srelated to that and we set cuda for gputo zeroand here you see that the inference apiis actually here the transformersuh text-to-effect transformers at port8080 which refers to this one so if inow would go backand if i would say well i'm going tothat's going to a previous step andlet's saythat i'm going touh well let's enable the spell checkmoduleif i now go further andi look at another docker compose file soi'm going to select this as wellthen you seethat in the configurator that'sautomatically added right so you now seeyour textspell checkthe image that's related to that andthen you see that besides thetransformer inference apiumthere's also the spell check inferenceapi so the more modules you add the morethat it automatically adds hereum and here you see actually the modulesthat they are enabled there's not reallya restriction to it what you even can dowhich is notavailable to the configurator because itwould be a very obscure setup but youcould even choose to have multipleinference apis for text-to-fact moduleswhy that is is something that we willlook at at thewhen we look at creating the schemabut what i did i already downloaded oneof these files so if i now uh look atthis filehere we goso here you see i've created one i'vedownloaded a file which has a texteffect transformercuda is disabled um and of course vpitself so if you now currently look atmy talker setup which is nothing isrunning as you can seei can do simply do docker compose up andit will take these um this configurationso sometimes people say like hey thesethese transformers uh containers are bigthey are they are over a gigabytebecause they contain the actual modulesnow maybe also nice to look at what'shappening here because we sometimes getquestions about that as wellis that the the messages that umwith outputs are as descriptive aspossiblesohere you see for example that we've itisstartedbut that it's waiting in this case forthetransformer module to start up whichtakes some time to bootand then in that container you see thatit'srunning it's running on cpuat some point that's just like okay i'mi'm readyand then you see that we've here justlike okay umuhhere it says like i could not rebuildthe graphql schema which is correctbecause it's a empty weave gateand then it says okay i'm ready i'mserving with it at port 8080 andlocalhostwhich you can simply check by goingthere so let's go to localhostand then you see this is website alsohere to the api we try to be asdescriptive as possible to describewhat'swhat's happeningso for example hey you can look at themeta endpoint to get some basicinformationbut also at the schema endpoint whichbrings me to the next step in we've hadbecause as we see from the menu that ifyou now have a weave yet running themost important thing is that you want tocreate while i say schemasthat you want to create a schemaand the schema has the class propertystructureapologies the class property structurethat you wanna that you wanna representand there's a bunch of data typesavailable for properties which we willgo over as well but if you go to therestful api endpoint you look atthe schemayou can for example look at create aclass and it's explained exactly what'savailable what options properties areavailable there's a simplerequest available in anylanguage that you likeor there's a complete example availablewe are going to look at the curl exampleand the reason that i'm doing that isbecause i want to give you a demo thatis a programming language agnosticso this is just purely speaking to theto the apiimportant to know is that although someof the client libraries have specificfunctionality in them for example toregulate batching and those kind ofthingsumin general everything is happening tothe api so thethe client libraries are just ways toaccess the uh the restful apinow i prepared something here as well soif you want to write something to theschema as you can see here from the umuhephron we need to post something to v1schemaand the first thing that we might wantto do is that we want to create a clauseso let's look at that sowe want to create a clause and theclause a class name can be anything anynoun or any verb we are about to releasealess strict way of defining classes butfor currently for now these arewords the reason that we use words isbecause sometimes as you will see in abituh peoplewant to use the class names for theproperty names in the factorizationprocessso let'stake for this example let's use the worddocumentimportant to know every a class can haveanyyou can use any word so any nounthat you can think of to describe it andif you can even changechain themfor example if you would say likedocument aboutcarsthis would be of ohwithout the typo this would be a validclass nameuh what we've heard would do if youdecide to factorize the class name itwould just use split these words likethis and say okay i'm gonna use the worddocument about and carstofactorize contentnext we want we need to give adescriptionso let's sayexampleclassand then in the the list of informationthat we need to provide are the otherpropertiesso the properties is an array because asyou could see herein this example a class can have one ormore properties attached to itif you don't set any you need to set aproperty because if you don't set anyproperty if there's no metadataavailable to theuh to the class one thing that youalways get automatically and that youdon't have to set it with it is a uniqueidentifier with it will always assign anid or you can assign your own idthese properties are written with alower case we kind of adopted that froman rdf kind of way of writing so a classstarts with a capitaland uma property starts with a with alowercase so we can say nameand then we can say for example title sofor example the documenthas a title now what we also need to dowhat you can see from the scheme wherewe need to provide it adata typewhich i will copy here that's easier thedata types that we have availablearehereso dear all the data types that we haveavailableso string string arrays integers integerarrays etcwe also haveblob data typesand what is important to bear in mindthat is the vectorizer that you havechosenneeds that information so for example atext vectorizer needs a stringor atext data type to to vectorize somethingbut if you for example would have chosenimage vectorizer you need to blob datatype because you the image that you willprovide with it with will be used tocreate that vector representationso let's keep that to stringand then we need to always give it adescription so let's also just say heretestpropertynow what is in this is the least amountof information that you need to givewe've yet um it will take all thedefault uh settings to to to createthese umthe class in this case however it isinteresting to take a look at a fewspecific things that we can set andmost importantly when it comes toindexingit has to do with the moduleconfiguration so the moduleconfigurations you can set them it'sbest to look at that here from theexamplewe can be very specific for exampleabout the vectorizers that we want tochoose solet's say that we have a case where wehave a text objects and image objects wecan actually tell vp8 i want you tofactorize one class for example with thewith the text effect vectorizer or withan image to fact vectorizerand here this is what i meant withfactorized class name you can set thatto true or to false so let's justtake this information and justput it in so this is what it would looklikeand what we've now done what we've nowdone is that we've extendedhere we go we've extended theconfiguration a little bit because itnow says vectorize class name is to trueand i'm going to set that to falsewhat that means is that if i would havea document and i would have a title andthe title would be for examplethe the title of i don't know an articlewhat you would get is the following soyou would get a the class documentthere is the property title and then thetitle is likelet's call it fubarwhat weave here does is that if i wouldset this to truewhat we it would do is that it wouldactually take literally the worddocumentto create a vector representation ofthat class nameso if i now set this to falseit will not take the document anymore soit will only now take the property nameand the um and the content that we willadd later in the as data in the dataobjectso i can do the same thing here as wellso and this by the way needs to betransformerbecause it's like we're not using a thecontext scenario transformer and we cando the equivalent for the uh here forthe propertiesso i'm going to copy that as wellso here i'm sayinglet's also put this to falsealso transformer ohand what this would do is that if we saywell we're only going to take theinformation the data that we're going tostore in here to create a factorypresentationdepends on your use case what you wantbut we see in practice that actuallyoften these are set to sorry thesefactorize class name and factorizeproperty name are set to falsewhat does skip mean skip says like doyou want this to be part of the umof the vectorization process solet's say for example that i create asecond property let's just copy thisand i'mgoing to call thatsubtitlethere might be a situation where ithat i want to have these thisinformation there but i did that i wantto skip theumthe factorization of the subtitleand i don't want tovectorize in this case the word subtitleso now it will only take the data thatwe're giving as a title to vectorizeuhlet's see so this by the way this needsto be lowercasei was like why is it red here we goso this for example would create a dataobject that says likeum i'm going to create aa class which is a documentthat's the description example class themodule configuration says like it'sfocusing on transformersthat's the module that we selected thatwe're running right nowwe do not want to factorize the classname we have a property that is titleand we have another property that issubtitle they both take strings as datatypesand here we're going to skip theindexing and we're going to not umvectorize the property namelet me quickly double check that i setthat correctlylet's think it is transformersplurallet me also see if this is correctthere you goyeah so i think this should be correctsoif i now gonna i don't know why this hasared underline but basically i'm going topost as the json tothe endpoint localhost and then schemasohere we golet's see if i made a mistake thereand i didn't so what we now can do isthat if you go back to weave yetso you see this is the previous one wehad schema which has no classes but ifyou now refresh ityou see here we have our document rightand it you see it also set some basic umor defaultconfiguration but here we said forexample factorized class name to falseetclet's see if ithis should have been transformersokayso here you see how it set thatinformation and now it's important thatif i now take this information and i goto theto the console if you go toconsole.semada technology so i'm nowgoing to quickly jump to thegraphql interface i'll go back to theschema but just to show you somethingwhat you can do is you can alwaysconnect to a vp8 that's running on yourlocalhost sothat's just running that's just runningon your local machine or reviewconnected to it will never send any datato the cloud it's justumit's just a front-end that you canaccess the graphql interface easily soif i now connect it and i go to thequery module so what you can see is thatwe've created the class documentso if i now go in there and i say getlet me increase a little bit you willsee that the first class that i now canaccess is document the one that we justcreatedwhich has title and which has subtitleand if i now run this query you'll seethat it's empty because we haven't addedany datanowone more thing that i want to show toyou related to the umto the schemais that if we now create a newclass so we have here document and let'ssay that we have aparagraph for exampleexampleuh graphso we can saylet's say that we take alsolet's say that we have content let's saythat is of the data type textso now we say like we have content thatis text we're gonna not skip it so skipis false we're gonna not factorize theproperty nameand we're gonna saytest property for paragraphbut what we now can also do is that wecan make a reference to document so howthat's often you see that we say indocumentfor examplethe data typeis going to be documentbecause we just we have documentso we can say like the data typesdocumentumwe're gonnanot factorize anything related to thatand that's property fordocumentcraftnow if i'm not gonna run this sorryi'll just send it to the restful apihere we goif i nowrefresh my um my current module lookwhat i can do now i can a do againnow paragraph is also availableand i can say well there was a there'scontent of the paragraphand in documentso this is and then we have the dataobject of the documentand we can also see that if we refreshhere the schema now you see the documenthere but you also see the paragraph hereso this is in the mostsorry this is in the most basic form away to create the schema and how you canquery through itthat brings me to theimporting data and the clientssowhat we seeis that a lot of people use the where'smy documentation yeah so a lot almostnobody uses the the curl uh uh endpointi'm just using that tobe programming language agnosticso people choose one of these[Music]client libraries to import data we seethat a lot of people use thethe python client so what you can see isthat if you add data which we callyou objects actually see so let me godown here so youohwhere is it create a data objectso have we say like we post to theobject's endpointso here you see for example an exampleof a data objectand then we see here we see the curlequivalent and this is the pythonequivalentwhat we do not have inside we've gatebut outside vp8 is for exampleways to automate batching so weave itdoes have a restful batching endpoint sothat you can add multipledata objects at the same time but forexample one of the nice things that's inthe python client is that you can sayoh no sorry that's actually hereapologiesso that you can say batch data and thenhere in python for example you see thereare all kinds of methods that you canuse method one method two et cetera toautomatically um uh create these badsizesthis isa very nice feature this was actuallysuggested by one of the communitymemberswhere it automatically determines uhbased on the setup of your v8 how manyumobjects can be can be processedso it automatically scales and andinsides and it decreases in size when uhthe machine needs some more time toprocess data for examplelet me go back toobjectsso let me createone data objectsolet's do that from the perspective ofcurl as well so let me just copy thisso what we here do is actually to addsomethingis that we really follow thethe structure that we have in our schemaso let's say for the sake of argumentthat we're gonna work with the documentso we know we have the class documentyou can choose to specify your ownunique identifier of affiliate do it soi'm gonna just go foruhi just wanna review do iti'm gonna set my titleand thenthis is thetitle of thedemo objectand i believe we also hadsub titlethis is the subtitlelittlesub titleso here we see that in line with wherewe here havedocumentand the property title and subtitlei can actually define them right herewhen i add these data objectsso let's go back to the graphql overviewif i now run documentand i say title subtitle there's no datain there right so it's emptyso what i now can do is that i can takethis informationpaste it inmaybe it's a little bit nicer if i typethat to jqnow and what you see that's happeningright now is that it added the dataobject you already see the vectorrepresentation that it gave the dataobjectand then you see like it created theclause it returned a 200 codeit defined a unique identifier and hereyou see thethe information that i that i added sowhen i rerun this queryyou see here is our document and thething is because we told we've yet thatwe want to not only use the database butalso the text factorization partif i now sayshow me the um sorry additional from thefactory representationthen it shows both the factorypresentation as you can seeas well as the uh the data itself wheredid it get that vector uh from well itgot that vector from thetransformer module that we selectedi'm going to take one more step so i'mgoing to step now into our demo data setbecause otherwise i'll i need to keepaddingmanually keep addingdata objectsso if i now go back to our documentationwhat is handy to know that is if you goto thegraphql interface examplesyou see these green bulbs here whereevery example query is something thatyou can try out real timeso here you see for example this dataset has articles and publicationsso i give this example quite often soi'm just going to keep it short but hereyou see like we have publication we havea namewe have multiple data objects hereall these data objects have these vectorrepresentations that they've gotten fromthe transformers moduleso now what i can do is something likethis something like this so i can saynear textlet meyeahconcepts and then for examplemegazine aboutfashion limited to the first resultand now it will vectorize based on thetext to factorize the queryand it will match that against all thefactors that we have for in this casepublications so if i run that query yousee it returns folk and we can even sayfor folk that that has a factorrepresentationas well so this is the factorypresentation in this case representingscroll down all the wayfocusso that is howthe schemais used within we've gate to add data soimportant as a quick recapso we have chosen in this setup to onlywork with the text vectorization and ofcourse the vva database itselfyou can choose multiple modules if youlikeand these modules what they do is thatthey add here in for every classthey add functionality so to give you apractical example in this data set thisdata set has atext vectorizerbut it also has for example the questionanswering module enabled and so what thequestion answeringmodule does is so let's say i can saytitle i can say summaryso this data set contains a few thousandarticles so if i say askask is enabled by setting the questionanswering modulei can say question and then i can sayseei can tell we've yet to find the answerin the summarylimited to the first result and bear inmindask only becomes available if you in theconfiguration if you've enabled thequestion answering module you don't haveto it's only if you need itand then also this additional featurebecomes available which is of courseanswer and then result and certaintyso this is an example of using the q amodule over this data set so if i runthis query you see that it retains theanswer based on all these articlesso that's how you based on your use casecan decide what kind of modules you likeand sometimes we even see people thatcreate our own modulesagain if you want to create your ownmodule look at the previous meetup videoby michael diglara where she explains indetail how that works how you can createyour own modulesetc let's see if there's morenope that is basically i know i'mtalking for 35 minutes already that'sbasically what i wanted to share so i'mvery curious to hear if that if you haveany questions based on this presentationthanks for listening by the wayi have a questioni have a data set whichit contains uhbasically it's it's a json uh and someof thethe classes that i have they havesubclasses of it so if i want to makeproperties out of it how do how do i getchilds in my uhin my schemayeah so the the best way to do that iswith work with these with thesecrawfrest and cross references so let mequickly share my screen againand you can make as many crossreferences as you like so i'm going backto thisdemo data set with these articlesso let me write a very simple querynothing fancy happening here so andthis query says as much as like okayshow me the first article that you havein the the data setright so here we just have a an articlethat said the titlebut as you said you have sub classes nowthis an article actually also has asubclass because it's in a publicationso what we can say now is like inpublicationon publicationand then the name and what you will seeif i run this queryyou see that this is this is an articlethat was published on fox newsand as you can see it is a nesteddata object and you can evengo as far askeep these nets going so you can havelike a nestedcross reference in your data objectwhich can have anothernested data object etc so for example ithink here we have for examplehas articlesso then i can even go as far as hisarticle oh yessorryarticle apologiesand it says title so this is not a nicecircular thing so we go from articleswe take the first article title we lookat the publication that it has which hasa name which we know is fox and whichhas articles again so then we can sayokay show me then those articlesso if you know you see how that's nestedsowe have a title which is the inpublicationfolks which has articles againand now if i open that you see thearticles that are in hereand one more way to show this is thatfor example if you now look at it fromthat perspective not from the articlesbut from the publications you could sayfor examplepublicationnamenow let me alsosay likelimitoneso you say and that's again that's foxso now i can also see here it hasarticleshome articleso that is how you can how you can chainthem together what's also nice to knowis that you can even use thesevector searches within them so forexamplethe publication example that i showedwith uhfolk for exampleif when i say okay conceptsand thenseeingabout fashion and then i say limiteduhlimited to the first resultso what you will see herethat let me close this so it shows folkand then it shows actually the articlesthat are in vogue so here you see allkinds of fashion related articlesso hopefully that answers the questionany otherquestion that i can answersilence on the goalwe got uh unview myself here so you weresaying that laura two weeks ago gave acustom modules meetup and in the futureyou're going to talk about horizontalscaling is thatkind of the access to informationuh sorry one more time the last part ofthe of the of the questionso yeah you mentioned uh laura had donethe the custom modules before that'salready available but the or you wouldalso talk about horizontal scalingand yes that in the future that thatdoesn't exist right now inoh yeah you can actually so let me sharemy screen againso the umin the document documentationso if you go to uh custom modulesyou can actually see there's a video sothat's from two weeks ago where lara ispresenting how you can create custommodulestheif you look at the architecture and theroadmap there's a video from mycolleague achen talking about the deepdive and the complete roadmaptwo weeks from now there will also be ameetup that's only abouthorizontal scalability and i believethat even the first uh release candidatewill be presented in two weeks for for ahorizon scalability sowe aim to have horizontal scalabilityavailable in in just a few weeks fromnowperfect thankyou very welcomeany other questions that i can answerinthat caseif there are no other questionsthen um the last thing for me to say islike thank you very much for your timeum thank you for listeningum you can come on our slack channel ifyou like so there's like a lot of peopleon the slack channel where you can askquestions where you can interact withwith the teamyou of course also have the uhthe documentation that i just showed youeverything is available to the websiteeverything is part of the open sourcepackageso um we're looking very much forward tohere the the things that you're buildingwith wv88 and again that well thank youso much for uhfor listening and have a nice rest ofthe day or nice evening depending onwhere you are in the world butthank you so muchsee you next time everybody thank youbye bye thanks", "type": "Video", "name": "Weaviate Meetup \u2013 Getting Started (setup, vectorizers, schemas, importing data and GraphQL)", "path": "", "link": "https://www.youtube.com/watch?v=L0Y_zZR8FRI", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}