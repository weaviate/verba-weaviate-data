{"text": "Hey everyone! Thank you so much for watching the 59th Weaviate podcast with Luca Beurer-Kellner! Luca is the lead author and ... \nhey everyone thank you so much for \nwatching another episode of the wevia \npodcast I'm super excited to welcome \nLuca Bureau Kelner Luke is the lead \nauthor of lmql a super exciting new \nprogramming language for large language \nmodels and Tool use and I think kind of \nthis space is just continually evolving \nof what these llm Frameworks are going \nto look like and I think lmql clearly \nadds something to this conversation so \nbefore going any further Luca thank you \nso much for joining the podcast \nyeah thank you Connor for having me um \nhappy to talk about Alexa and also yeah \nthe entire space a bit yeah awesome so \nmaybe before we even get into the \ndetails of lmql could you describe kind \nof like your research path and your PhD \nstudent at eth and like what led you \ninto uh working with large language \nmodels \nyeah so I'm in my PhD at dth currently I \nbriefly I did my bachelor's in Berlin \nand also my Master's Master stand here \nin cerica dth \nand yeah I guess \nbefore I came into llms I really was in \nthe field or I still am in the field of \nprogramming languages \num really something that fascinated me \nfor my entire studies so far Bruce Lee I \nalso worked at the company building \nmostly tooling and a language in the \nJavaScript ecosystem and they are doing \nmy masters I also got um \ntook a few machine learning lectures \nstarted to look into this a bit and in \ngeneral my PhD studies are basically \nare at this intersection of machine \nlearning and programming languages and \nyeah like a year ago basically we \nstarted to look into llms because they \nseem to get more and more powerful and \ncapable of doing many things and this \nwas like even before church 50 came out \nso \nbasically a different era if you look at \nit from today \num and yeah so we started working on on \nllms and started to think about how can \nwe program with this like is there some \nprogramming language perspective in here \nand that's how we started working on \nlmgl \nyeah that's so interesting I love how \nthe lmql like just for me there's just \nthe syntax of it how you have kind of \nlike it's like an SQL where it's like \nselect from where it has this kind of \nlook and so I think it would kind of be \nI'm really interested in also touching \non that you know pre-chat gbt how you \nwere thinking about that before that but \nI'd like to just let's keep \ntransitioning like your perspective on \nprogramming languages like what like \nwhat is it a large language model \nprogramming language \nyeah I mean that's a great question like \nobviously um \nfrom an academic setting it made sense \nto start to think about this in terms of \nprogramming systems because I mean \npreviously machine learning models were \nmostly just models that were trained to \ndo one task well you put something in \nyou get something out but now with \nmodels that can take free text input \nalso like diffusion models for instance \njust becomes more of an interactive \num form of of programming or interacting \nwith these models and when we set out to \nbuild something in the space we were \nmostly Modified by this perspective of \nprogramming language models like having \nmachine learning models that offer this \nform of programmability of you can \ncompose them you can make them do \ndifferent things and really um to start \nto look at this from this this \nperspective \nso I've kind of had a similar \nperspective but coming from sort of The \nEnsemble learning perspective where you \nkind of like Ensemble model predictions \nand especially you know like these ideas \nlike hugging gbt where you're routing \ninferences to like you have some kind of \ntask and you break up the task into \nwhich of these models could perform each \nof the subtests it also kind of reminds \nme of this recent work on gorilla it's a \nlarge language model from Berkeley \nthat's like fine-tuned to use particular \ntools so it sounds like you have that \nperspective of like composing machine \nlearning inferences together to kind of \nsay okay you're the lawyer or like \nyou're the image generation model like \nlike this kind of segmentation of model \ninferences the uh correct understanding \nyeah definitely I would say this is \nalmost already the next step like this \nis the step of this is the Master model \nsupermodel that composes different \nmodels like in Ensemble learning right \nand we essentially moving this \nresponsibility of composing models to a \nhuman programmer \num so so we say Okay youth you humans \ncan also compose machine learning models \nin this way or like developer program I \ncan do this \num \nit's true that of course this entire \nprogram of how to compose these things \nthe llm generated \num \nI think this works with reasonable \nsuccess so far and I think there's a lot \nof potential in there \num but yeah with the project we're \nmostly focused on \nproviding this to to Google program is \nnot necessarily in fully synthesizing \nthis this program that's that's being \nexecuted on a higher level \nyeah I think like the to me the \nchallenge of Designing that how you \nsynthesize the program and the challenge \nand say like Lang chain llama index or \nsay semantic kernel Gina AI deep set is \nuh like the abstractions change kind of \nright and so I when I first saw lmql and \nthe syntax of it I thought it was \nsomething that was kind of like \nfundamentally different from sort of \nwrapping abstractions in like python \nclasses \nis there something to this kind of lmql \nthat would help like how are you \nthinking about sort of your \nunderstanding of the abstractions \nevolving over time and how you would uh \nyou know adapt with I hope that question \nwasn't too open-ended \nno I I totally see uh where you're going \nwith this like I think there's \nlots of new Crown to cover and I think \nthat's also the reason why lots of \npeople have lots of different ideas on \nhow to abstract these things \nthe design philosophy that we are \nfollowing so far is mostly \nnot from this top-down perspective of \nhow can we abstract things in the space \nit's really coming from \nhow do language models work internally \nso \nwe started with the perspective of \nthe Auto request the flash language \nmodels are token by token predictors and \nthere's these decoding algorithms like \nyou can do arguments to calling you can \nsampling you can do beam search you can \ndo even more advanced things \num and to start from this perspective \nthinking about how can this core Loop of \ntoken by token by token prediction be \noptimized how can we control this more \ntightly on the one hand with \nconstraining and on the other hand with \num scripted execution like \nthis way that lmql enables you to use do \ntemplate based text generation \nyeah I think the template based thing is \none of the instant things that jumped \nout to me about Lang chain when it was \nfirst released is like you know you're \nchaining together language model calls \nand you put it in the um you put the \noutput in the input but um I understand \nwhat you said about ARG Max and the \ninternals of large language models \nlike I when I first saw lmql I saw that \nlike you can switch ARG Max with beam \nsearch with say this there's another \npaper called flare I've made a paper \nsummary video this on weevier where it's \nthis thing where you would sample the \nnext sentence and then look at the \nuncertainty of those tokens and if it's \nuncertain you would then retrieve again \nbasically that there are all sorts of \ndecoding things you can do and yeah \nthat's pretty novel I don't think um you \nknow the the like the other Frameworks I \nthink because they treat the language \nmodel apis as sort of black boxes right \nso \nI don't know if like I don't even think \nopen AI with their API gives you that \noption to um \nuh you know like have beam search or \nlike maybe it's just cooked into kind of \nlike the temperature right like but or \nlike tuning those kind of things \nexactly like yeah I guess like um \nso how much opportunity is there to \nbecause don't you need to have like \nuncertainty calibration and all sorts of \nthings like that in order to make that \nkind of thing work \nyeah yeah definitely you do um it's \ninteresting like \num actually depending on what API you \nuse with open AI especially if you use \nthe now deprecated completion apis you \nactually do get this information at \nleast on a limit in a limited form they \ndo some obfuscation log it's sometimes \nvery I assume for for um to protect \nagainst \num model distillation but you can \nactually get some of this out of there \nit's obviously it's a bit restricted but \nwe put a lot of work in making it \ncompatible and exactly for this reason \nbecause the black box is actually not \nthat black after all especially with \nopen models obviously you have full \naccess you get all of this information \nand even with open AI models you get \nsome of this information and you can in \nfact Implement beam search on top of \nthese apis \num now this completion apis are being \ndeprecated but actually what what opener \nannounced in the same blog post is that \nwith the chat API they will also add \nlogin access in the future I assume \nagain a limited form but I hope they're \ndefinitely up to it that we can maintain \nthe support because in the end of my air \nmodels are what most people use these \ndays \nyeah sorry it's like jogging my memory I \nwas trying to think of something I'm \njust kind of it's so interesting but \nlike I do remember that you can like \nhighlight the tokens on the API and yeah \nobviously the open language models and \nyeah sorry so so yeah so that kind of \nidea of the decoding I think just um I \nguess the question I wanted to ask you \nand sorry that took me a while to form \nthis is just um like it sounds like that \nalone would be quite a like that would \nbe a product by itself is how to decode \nfrom a language model do you see that as \nlike being a a big like the the amount \nof algorithms that you can write in that \nspace like we see so much about \ninference acceleration whether you're \ntrying to quantize the weights or you \nknow compress the model with knowledge \ndistillation or pruning but just that \nkind of like you know I don't know too \nmuch I know like greed greedy decoding \nbeam search I think there's like some \nkind of contrastive sampling in there \nlike how how much research is there in \nthat just like how you decode from the \nlanguage model \nyeah so this is lots a lot of research \nactually this is an entire um research \nfield on its own especially kind of in \nmachine translation they use very \nsophisticated Advanced versions of beam \nsearch they there's a Monte Carlo based \nkind of sampling methods that are coming \nout now I think the the core difference \nhere is obviously decoding on top of \nlanguage models especially if you have \nto work around open air restrictions for \ninstance can be expensive and will also \nbe slower even though they can lead to \num better results and I think most \nat least at this stage of \num like L&M hacking and practical LM \ndevelopment most people will just use \narcmics decoding this is fast this is \nmore or less cheap \num but I definitely see lots of \npotential to apply this in the future of \ncourse what will what it will need is \nactually a library that sort of or lmgl \nmaybe an ecosystem that actually \nimplements all these decoders and makes \nthem accessible to users that want to \nuse them practically because oftentimes \nunfortunately you only find them in \nsomewhat esoteric research and \nrepository so this is not \num directly usable for many or many \npractical developers so far I mean \noverall I see a lot of potential in \napplying most of this research to to the \nspace that's that's um evolving now \nyeah I think especially with the if the \nopen source language like just generally \nis the cost of inference gets cheaper \nand cheaper which seems to be you know \nevery I feel like every week There's a \nnew open source like I've grown tired of \nkeeping up with it honestly it's so \nintensive just the news of it but it's \nlike I think I see the two things like \nearlier I mentioned Flair Flair as you \nsample the next sentence and if there's \na high uncertainty you would then do \nanother search query to get better \ninformation maybe for that and that \nobviously with our interest in weviate \nand retrieval augmented generation has a \nhuge application but you mentioned Monte \nCarlo tree search and there's this other \nreally exciting uh paper called tree of \nthoughts where you know you sample these \nPathways maybe you have some kind of \nthing that would like cut um cut nodes \nand then you know keep sampling and so \non but um yeah so and that kind of thing \nreminds me of like the you know like the \nalphago that how it had that Monte Carlo \ntree serves that kind of look ahead \nsearch how do you see that kind of like \nlook ahead search and language modeling \nyeah I think this is a really \ninteresting Direction I also see again \ncoming from programming languages \nthere's really cool projects that we're \ngoing looking at and maybe hopefully \nwill find time to eventually do um I \nthink that's cool essentially if you \nthink about these like three or fourths \nfor instance it's a form of \num yeah X search-based programming like \nyou build these reasoning algorithms if \nyou want to call it that that and \nthey are essentially defined a third \nprocedure in this tree where you expand \nthoughts or like hypothesis and and like \nforms of reasoning the llm produces and \nultimately of of course this this is \nintuitively it makes a lot of sense that \nthis will actually help um with overall \naccuracy and quality although again like \nI think prerequisite for this is that \ninference will become much cheaper much \nfaster and also should run in parallel \nof course so you can actually explore \nmany branches at the same time \num also like ultimately I think the big \nadvantage of these methods is \nyou can run an llm and if it doesn't \ngive you the output you expect you can \nrun it again you can sample from an llm \nright but this is sort of a never-ending \nprocess like in the end each time could \nbe the one time that it eventually works \nout but there's no guarantee so um \nultimately what you actually want is the \npower of l m is this rate this this um \nability to sample but also a form of \ncombinatorial search through the space \nof possible answers so that you get some \nguarantee that eventually you will find \nsome model some solution to the problem \nthat you're looking for and um I think \nthere's cool hybrid solutions that you \nget to build in the space and I see lots \nof potential area \nhmm \nyeah what you're saying is really \ninspiring just I think just generally \nthis is like connecting like model based \nreinforcement learning where the agent \nhas like a model of its environment so \nit can simulate you know action \ntrajectories and I guess there's all \nsorts of like exploring exploiting that \nyou could do even within traversing your \nown world model right like usually I \nthink in reinforce and learning you \nthink of explore exploit is like uh \nstrategies you should take when \ninteracting with your environment I \nthink there's like um \nuh I don't remember the name of the \npaper but something where you know \nthere's like intrinsic motivation where \nthe the desire of the exploration is to \nstrengthen the world model and then this \nlanguage model is the way it can \nsimulate you know different trajectories \nit's also fascinating but so yeah so I \nwanted to kind of definitely touch on \nthat because I think when I first looked \nat lmql seeing the ARG Max I imagined \npeople listening who are looking into \nlnql that might be one of the newer \nthings to look into and then but let's \nkind of I want to talk also just about \nbroadly how lmql connects L alums with \ntools and sort of like generally your \nperspective on you know that kind of \ntool use concept \nyeah definitely so this big priority or \nI mean in the end our whole philosophy \nis to say well can we sort of interweave \njust general programming language like \nand python in our case like lmgl is \nessentially a superset of python you can \njust write whatever you would write in \nPython with the ability to to ask or \nlike query a language model along the \nway and during execution and this means \nyou can actually go forth and back with \na language model called Tools in between \ncalled external retrieval systems like \nyour vector database polar information \nand this enables a very seamless and \nvery close coupling of of llm prompting \ngetting some results and possibly a \nstructured form executing some core as \nan external tool and then going back to \nthe model so so \num from that perspective this is really \ncore DNA for us like just the whole idea \nwe want to essentially bring this from \nprogrammability and use of external \ntools to the prompting itself \num looking a bit into the future we also \nhave a couple of \nfeatures that were assumedly merged and \nUpstream which will be \nenabling of much more easily so so \nessentially there will be a seamless way \nto just expose some functions to the \nmodel and it will be able to call them \nalong the way without the need for you \nto specify a specific \num protocol of how the model calls the \nfunction and how results are fed back so \nso definitely a direction we are also \nactively exploring \nyeah I'd love to just kind of like that \nway of how you expose functions to the \nlanguage model to get a little more \nclarity on that because I see you know \nopen AI funks I think they're calling it \nor you know or it's like the Json \ndictionary kind of syntax I see in lmql \nyou it looks like you know it it's like \na hybrid between Python and SQL and sort \nof how it looks and there's like you \nknow death where you define like the \ncalculator and stuff so so yeah I guess \nlike um \nyeah like the design of how you're going \nto prompt the interface of functions \ntowards to large language models and I \nthink \nyeah I hope that's not to like not \nspecific enough of a question I guess \nlike um \nthere's something interesting as well \nabout uh there's another paper from Omar \nkatab and others called demonstrate \nsearch predict where they would also \ncouple examples of how to use two tools \nor tasks broadly where you add kind of \nexamples into this sort of thinking as \nwell \nso yeah hopefully that sets the stage of \num yeah I mean \nthat like a very good I'm starting with \nthe function chords this is obviously a \nvery interesting um thing that they \nenable now \num \nwe do intend to implement this although \nnot really just wrapping their API we \nactually what our goal of lmql in \ngeneral is to not be model specific so \nwe intend to implement something very \nsimilar that essentially works like \nfunction calls a bit more seamless \nbecause we're already in Python so we \ncan already you just pass the function \nyou don't need to \num bother with Json schemas and \neverything \num but we actually want to make this not \naugmented specific so this will also \njust work the same way with open source \nmodels basically abstracting whatever \nyou need to do on the back end to make \nthis work \num also like another detail that I'm not \nsure many people \num know about is that actually the \nfunction calling of opmaya is not \nstrictly robust in a sense that it may \nstill hallucinate the format it does not \nstrictly adhere to the to the schema all \nthe time because ultimately it's based \non fine tuning not actually on on \nStrictly forcing the model to fit to the \nto the schema and the schema so um yeah \nour standards are more in the space of \nbeing vendor agnostic \num and actually providing these strong \nguarantees because we can do this with \nour constraint decoding engine \ncan we assume that the constrained \ndecoding engine I've seen like \nstructured output parser from Lang chain \nand I'm you know familiar with this of \nmyself where you try to have it like \noutput a Json dictionary and then your \nthe idea is you're going to parse the \nkeys in the output from the language \nmodel and it's like so important that it \num you know followed the rules sort of \nso is this just kind of like um \nyou know like if it's doesn't output and \nthe square angular bracket after search \nyou reject it like what are the ideas \nbehind constrained sampling \nyeah so I think this is one of the \nbiggest issues with if you think about \nEllen Amsterdam programmability \nperspective this is one of the biggest \nissues like in regular programs you \nwrite a function as you know whatever \nyou call this function it will do what \nyou wrote down like typically these are \nnot \num randomized in behavior \num but with llms it doesn't quite work \nthis way like all the examples you used \nduring development could be fine but \nthen um at in practice when some user \nuses this function indirectly because \nthey use your product \nthis may just fail for for arbitrary \nreasons like there's no it's really hard \nto get a grasp on why they failed \nsometimes \num and this makes programming actually \nreally hard right this means functions \nfail randomly and not just in a they \nproduce the wrong output sense but they \ndon't even produce output in the right \nformat like this is sort of the \ninterface robustness is not even given \nso so I think and this is one of the \ncore challenges I still see with llm \nprogramming and also what we try to work \non is make this interface 100 and even \nif the result doesn't end up being \ncorrect this you can deal with but if \nthe format does is not correct you \nessentially get \nthe equivalent of null Point exceptions \nin your language and this will typically \ncrash your program unless you handle it \nsomehow \num very reflexively but this is also \nreally difficult to work with \nyeah I love that you just named that \ninterface robustness I hadn't heard that \nparticular phrase and I think that just \nNails it right on the head I'm familiar \nwith robustness and deep learning as \nwell like you know some of the stuff Dan \nHendricks did with um like image \nclassifiers where he would show that you \nknow if you increase the brightness or \nmake the image snowy all of a sudden \nthat imagenet test set accuracy goes \nfrom like 95 to like 40 accuracy and you \nknow obviously that kind of thing is \nmanifested in language models as well \nand so prompting it to use a tool you \nknow could create that kind of thing um \nyeah it's a really fascinating kind of \nthing is just forcing it to use the \ntools and I guess kind of one more thing \nbefore moving on topics I wanted to get \nyour opinion on earlier I mentioned \ngorilla gorillas like llm fine-tuned to \nuse particular tools like you know \nGitHub CLI to make pull requests and \nstuff and I've been thinking really \nheavily about you know with weaviate you \nknow we V8 you can see weaviate as a \ntool \nI see kind of two schools of thought \nwe're thinking about this you can either \njust think about retrieval augmented \ngeneration in a pretty blind way where \nyou the vector search engine just gives \nyou context blindly sort of and then you \njust put that into the input or you can \nthink of it as a tool where you're \ndeciding like which of the classes \nbecause it's you know like vector \ndatabase like you have like different \nclasses for your data you like which of \nthese classes do I want to search \nthrough which of the properties do I \nwant to access or you know maybe even \nformulating your queries this one's a \nlittle hand wavy but maybe the idea of \num you have a particular query that you \nwould say oh I want to wait bm25 higher \nthan Vector search for this one or I \nwant to re-rank it with a cross encoder \nso like generally kind of like the the \ntool of levia like using the API so I \nthink heavily about whether we should \ntrain a language model that you know is \nlike that glue between \nusing Eva so so I guess the the question \nis like how do you see these kind of \nlanguage models fine-tuned to a \nparticular tool whether that's weviate \nor Wolfram Alpha or you know what have \nyou \nI mean fundamental is \nI mean it's very clear that fine tuning \nwill help the model to adhere to \nwhatever you \nwanting it to do \num \ncoming back to rent a faith robust and \nfine tuning is just the same we'll just \nfail in the same way maybe at a lower \nrate but I guess the problem here is if \nyou have more than one call and you have \na low percentage of each call failing in \nsome you will have actually a High um \nhigh probability of things failing \nlike of course you want to um you want \nthe language models to actually be \nfinding to exactly what you \nneeded to do \non the other hand what I hear and \nwhatever I think is the most one of the \nmost um \nyeah fun aspects about elements and also \nlike in terms of inner economical terms \nthe fact that you don't have to train \nthem is actually one of the biggest \nadvantages and biggest strengths right \nreactional purpose multi multi-task \nlisteners and you don't have to train \nthem meaning you don't have to invest \nthe effort and time to build data sets \nand in some situations this may not even \nbe possible like it's sometimes really \nhard to construct these kind of data \nsets \nyeah I guess like is a solution to \ninterface robustness just you take the \noutput and then you say \ntemplate it and say did you follow the \ninstructions all right and then see if \nit revises output right isn't that kind \nof like the um \nthey used to have an uh there was a name \nfor that kind of prompting I think \nreflection spelled funny like with an X \nyeah I mean just one way to do it \nif you assume some \nindependent error rate eventually you \nwill get there \nand practice usually there's no \nguarantee and if something is wrong it's \ntypically because there's some \nweak spot in the model and even if you \nmake it revise its output it may still \nhave somehow some weird internal state \nthat makes it repeatedly make the wrong \ndo the wrong thing right \nnow concretely how we implement this and \nalso the fundamental technique behind us \nthat other Frameworks start to pick up \non also is the idea of constraint \ndecoding meaning \nyou don't even allow the model in terms \nof interface robustness to produce \nsomething that would be illegal you \nforce it to produce it it's a bit like \nlike one very traditional way of doing \nthis is just hooking up parser and say \nyou can only produce tokens that are \nactually \num allowed next according to my grammar \nand this makes the make sure that the \nmodel will only produce outputs that are \nconsistent with your grammar and this \nmeans you can pass this robustly and \nthere will never be a situation where \nyou will end up with an output that you \ncan't parse in the sense so essentially \nyou force the model strictly to adhere \nto a certain for output format and \nthere's no need to revise or even \num depending on how you do it definitely \neven not even a \num you don't even need to tell the model \nabout this like you can just restrict it \nstrictly restrict its output \ndistribution to only fit in this format \nthat you provide \nit's making me think of like \num you know like automata Theory and all \nthat kind of um like grammar regular \nexpression that kind of \nbecause I'm just like kind of you know \ngetting the story of Luca interest in \nprogramming languages and now it's \ntaking it in this kind of Chomsky like \num perspective so you think about it and \ncan you help me kind of understand \nthat perspective of like formal \nlanguages a little further and how that \nwould Inspire this design \nyeah so actually the parallels to a \nparasu and also like trumpskin and \nlanguage theory is is \num very clear and and also in in terms \nof expressiveness you can very much um \nlike anchor it there like if if you \nthink about from a person's perspective \nit is it is essentially a dynamically \nconstructed parser that's hooked up to \nyour language model and that will make \nsure that the that or the language model \ncan only use the follow set as you would \nname it in in parser terms \num of tokens that will can actually \nfollow at the current position it's a \nbit like when you write code in your IDE \nand you open code assist it will only \nallow you to insert identifiers and \nkeywords that actually are legal at this \nposition in a program \nhmm \nwell yeah so that was an awesome tour I \njust gained a ton of understanding of \nwhat a what an llm programming language \nwould mean especially in this context of \num you know of uh interfacing it with \nfunctions and having it adhere to the \nsyntax or having it adhere to that this \nkind of thing um so kind of skipping \ntopics I I wanted to jump ahead to \nsomething that just blew my mind when I \nsaw it which was the lmql playground I \nthink this is such a cool visual \ndemonstration of these you know complex \nlanguage model calls \ncan you tell me about the design of it \nyeah so we um essentially when we in the \nprocess of building um we started to \nalso build a graphical or visual \ndebugger interface \nwhich is actually fully available on the \nweb so invite everyone to just go to its \nlmgl.ai playground you can actually run \nall of nmql in the browser in this \ngraphic user interface which will allow \nyou to gain a better understanding of \nwhat's actually happening also \nespecially on the decoder level if you \nalways wanted to see like a visual \nrepresentation of how beam search works \nor what other tokens the model has \nconsidered at particular points and \nduring generation like all the different \nrates that were not explored actually \nthis is a really cool way to see this \num also big shout out by the way to the \nEmpire Diet team they're building a \npython webassembly version of python and \nthis is the only reason that lmql \nactually can even run in the process so \nthis is also a really awesome project \num now the playground itself \nI would say it's that it out as a \ndebugging tool and we still use it \nheavily in that sense because it enables \nus to really \ngoes token by token step by step we do a \nlot of token by token computations \nmasking validation \num also all about decoding algorithms \nthat are branching can be visualized as \nit is a craft view that actually allows \nyou to see all the different sequences \nthat are being decoded how they relate \nto each other what's the origin of of \nthe coding in general so and this helps \na lot and but then again yeah on from an \neducational perspective it's also really \ninteresting to explore just from as a \nuser I would say um you would learn a \nlot about internals \num \nwe also buy by the way provide actually \nwe haven't this paper is not public yet \nbut this will come out soon \nwe Implement now Implement a high level \nlibrary for implementing custom decoders \nso \nit's something like Trio thoughts for \ninstance or more advanced beam search \nvariants you could now Express very \neasily with a high level language in \nlmgl and or in the internet of nmql and \nyou would get all of this tooling for \nfree so you can write your own decoder \nsee the graphical results in the in the \ninspector on the playground \num and play around with this yeah \nI definitely want to come back to that \nbut just kind of like for our listeners \ncoming to lmqo for the playground for \nthe first time could you explain like \nhow it would visualize say Auto G Auto \ngbt is this problem where it's kind of \nlike you know write a set of tasks and \nthen start executing the tasks and then \nreflect on you know our is the execution \nof these tasks getting me closer to my \ngoal and I think it's one of these \nthings that we you know is so like it's \nsuch a compelling idea but then it's \nkind of hard to tame it in the real \nworld and I think this is like having \nthis kind of visualization can you just \nkind of maybe explain the TL like the \nhigh level explanation like this kind of \nexample of this you know like recursive \ndo you need to keep doing things sort of \nyeah so act that's I mean that's a great \npoint I think \num now the current state of energy or \nthe NPR playground is we really focus on \nthis single query query meaning an LGL \nquery is usually a long prompt that \nkeeps on extending you can have \ndifferent parts for the elements called \nbut ultimately you you're generating one \ntext document in a sequential order \nuntil you come to an end when you have \ndone or gotten all your results \num \nthings like Auto GPT or more like \ncompositional Frameworks where you chain \ncalls together \num obviously actually have more than one \nsuch call \nand we definitely plan to add this \num but for this we still we first have \nto realize all our plans in a \ncompositional \num space as well \num but potentially what you want really \nis \na regular debugger with function calls \nand stacks and the stack frame and have \nlike recursive chords being in the \ncontext of their parent calls right you \ncan jump into them go token by token go \nback out see the parent call like like \nthis kind of tooling definitely \num would be very useful \num although I'm not really all for \nReinventing the real you so maybe \nthere's also a very smart integration \nthat you could do with \nexisting python-based debuggers adding \nthe lower level of when you execute a \nprompt function you can actually also \nstep token by token \nfascinating so it's so that kind of \nparallel of you know how you would do a \nstack Trace with you know any kind of \nlike you know C plus plus code or so on \ncompared to maybe like yeah we've seen \nlike laying flow where we have like \nthese dags that kind of you know show \nlike um uh you know I call the \ncalculator I got the result or like I \nwrote this python code I executed it and \nthat kind of thing um \nyeah well it's pretty interesting I mean \nI don't think I have a great uh question \njust um yeah like I that hearing that \nparallel really opened up my \nunderstanding of it comparing it with \nthe traditional stack tracing and \ndebugging that already exists and yeah \nit makes perfect sense so that stuff \nwould translate you know right into this \nkind of language model stuff so \nyeah I think um maybe \num with the lmql playground I guess and \nkind of like also when you originally \nland on lmql uh you have these set of \nexamples could you maybe describe like \nan example to listeners that you know \nyou particularly like and helps kind of \nillustrate lmql \nyeah sure um so I think one of the the \nsimplest and and \nOne Step Beyond just asking Church 50 \nsomething prompting method is basically \ncalled Channel thought right this is so \nstand with me this will be new um \nessentially the idea is to not ask \nlanguage model to directly provide a \nresponse but instead you you first ask \nthe model to but you provide a question \nyou ask the model to provide um a \nreasoning how it would come to a \nresponse so essentially you just ask the \nmodel to reason step by step and then \neventually after that did this you ask \nnow give me the answer meaning you um \nyou help the model in sort of providing \na small algorithm basically on how to \narrive to add an answer instead of just \ndirectly producing it and this has been \nshown to to create success and that this \nworks really well like this is much \nbetter than just directly producing the \nanswer and the way you would do this for \ninstance in lmgl is you just write you \nwrite down the question and your query \ncode you write let's think step by step \nthen you have a placeholder that you \ninsert where all the model reasoning \ngoes and then you ask a model in a the \nfollow-up statement Now give me the \nanswer \num and this actually also enables you to \nhave like free text reasoning the model \nwill do some \nnumber arithmetic maybe whatever kind of \nreasoning is required and then \neventually when you actually want to \nretrieve the answer you can then \nleverage for instance lmql constraints \nsaying okay now I want an integer number \nthat represents the the answer \num coming back to interface robustness \nthis means you have sort of a natural \nlanguage based reasoning process but the \noutput the return value of your run \nfunction actually will be an integer \nvalue that you can robustly handle the \nrest of your program code so I think \nthis this um illnesses quite well like \nthe sort of standard process of how lmgl \ntypically works \nyeah that's a really great clarification \nof um you know the difference between \nwhen you want to enforce the structured \noutput parsing compared to where you \nwant to let it just have the open-ended \nreasoning and um maybe to read this to \nlisteners to kind of also get you know \nfor people just listening and not also \nlooking at this uh you know if you go to \nlmql.ai where you click Chain of Thought \nand that's kind of the example that \nwe're talking through right now \nso you have the ARG Max and then you \nhave a question it was September 1st \n2021 a week ago what is the date 10 days \nago in mm slash DD slash yyy Quest like \nyou know forcing that kind of uh \nstructure already and then but then you \ngive the answer choices where you have \nyou know a b c d e f these are each like \ndates formatted like that then you have \nlet's think step by step and then you \nhave reasoning and then you say \ntherefore among a through b the answer \nis result can you tell me a little more \nabout \nlike reasoning and result and just how \nlmql parses that \nso essentially you have to read it like \na sequential program it's executed top \nto bottom left to right and top level \nstrings that you see in the query are \njust um pass to the model as prompt and \nwhenever you have in your top level \nstring a placeholder variable in in \nsquare brackets this is when we actually \ninvoke the language model to produce a \nresponse \num and to prompt the language model will \nget for this particular call is whatever \ntext has been consumed so far by a \nsequential execution of your program \nand the language model will come to \nnaturally come to an end typically a \nlanguage models Just Produce some end of \nsequence token with return some some \ntext that represents the reasoning and \nin an nmgl in problem logic this means \nafter executing the statement there is a \nvariable defined in your program context \nit's called reasoning which will just be \na string \nand you can access the string you can \nprint the reasoning the llm used you can \nalso just ignore it it will from now on \nthe part of the follow-up prompts that \nyou will send to the language model so \nhere in this example you will continue \nyou will prompt the model therefore the \nanswer is and the model will actually \nsee its previous output so in the next \ncore when we produce the actual result \nand it will see us reasoning it will see \nthe original question it will see the \nnew prompt asking it to produce an \nanswer \nand for result this final placeholder \nvariable here and we have additionally \ndefined constraints so we can actually \nnow limit the language model to say \nwell result should be one of a to F and \nwe can enforce this strictly which can \njust limit the distribution of the model \nto be only across a through F and no \nother tokens are allowed which means we \ncan we have guarantees about the format \nof this final output right \num because in practice what will happen \nthis works most of the time and then at \nsome \num odd generate case the model will just \nuse some other letter maybe or something \nelse entirely \num and you can't parse this and by using \nconstraints in lmgr you can actually \nguarantee this will be one of a through \nF and there's no other way that this \nweapon will terminate the return value \nwill be one of those and this means you \ncan just return this without value to \nyour property logic you can also use it \nto index an array with limited options \nin this case and this through our work \nrobustly without any need to do output \nparsing or somehow some some fussy logic \nto validate ourselves \nyeah I I love the way it like where \nresult in you know a b c d how you have \nthat syntax I think yeah it's really \nit's super cool I mean I I have played \nwith a lot of problems where you're \nsaying like if and that you know like \nyou're prompting it with if else kind of \nlogic where you say if and then some \nabstract natural language description of \nwhat to do with the thing and then then \noutput like you know no change needed or \nwhatever right and so this syntax to \nconstrain it to certain valuables as you \ndiscussed and then or constrain it to be \na type maybe even like make sure it's \nBoolean would achieve that same kind of \nbut like I guess because it is free text \nbut yeah like this kind of syntax is so \nelegant and so it brings me to my next \nquestion which is kind of a Harrier \nquestion is and you know you know like \nit's such a convincing thing I would \nlove to get running with this like how \ndoes this integrate with the existing \nFrameworks like I know there's an \nintegration with llama index like is \nthis just kind of treated as like one of \nthe structured output parsers how does \nlmql kind of like what is the early \nstage of this integrating in the current \nsort of like llm software tools \nyes I actually I'm quite happy about the \ncurrent state of integrating like \nessentially we can integrate with all of \nthem more or less \nand the reason for this is that most \nFrameworks are um compositional and they \nhave this black box perspective and they \ndo lots of training cards together or \nlike even in some kind of tree structure \nand I'm index they do lots of \ninteresting things \nbut since they assume the language model \nitself is a black box and lmgl mostly \noperates in this black box we can always \njust fit in this black box State it's a \nblack box to them they have no \nassumption about its inner workings and \nlmgl fills this black box leveraged some \nmore some more advanced information from \nthe llm and so in that sense we can for \ninstance a link chain we can just \noperate as a chain component we can just \nit's just a lmql lmql queries are just \npython functions and and this fits very \nwell with multiple positional framework \nso so there's lots of um yeah to be had \nfrom each other so on the one hand we \ncan use dama index or next chain to \nretrieve use with all their retrieval \nIntegrations to insert them into the \nprompt on the other hand lmql programs \ncan be used as part of your agent where \nwe have like Auto GPT variants using \nlmql all sorts of projects just employed \nas sort of the as a fundamental building \nblock and what they're building \ncompositionally with L M's \nyeah it's amazing I I guess like kind of \nthe other thing is like you know I I \nlove this kind of like the llms write \nthe code and I think this um like I love \nthis question of like I feel like the \nllm itself could be prompted to write \nlmql code like if you uh you know say uh \nyou give it these I think nine examples \nof tell a joke packing list Chain of \nThought and then you give it these \nexamples then ask the LM to write new \nthings do you think about interfacing \nlmq well that way \nyeah I mean it's it's um obviously in \nthe current uh \nday and age this is number one thing \npeople talk about also to us and \nobviously as PL people like we work on \nprogramming languages we design when a \nmodel and concise abstractions that's \nour at least a labor of love and that \nthis hurts a bit like \nwe build a nice programming language and \nthen people don't want to use it they \njust want to llm to use it \num which is actually an entirely \ndifferent very interesting program can \nwe build the programming languages that \nare work particularly well with llms \num because this is fundamentally they \nuse the lnfs are really good at using \nfor instance python because it's popular \non the internet but what if we decide \nthe language that was by on by on first \nprinciples based on being an interface \nto LMS and not to humans this is a very \ninteresting problem I think to work on \nlike to see lots of potential there as \nfar as it comes to lmql \num we have some limited experience with \nthis essentially for instance if you \nwrite Adam Q L and you're editor of \nchoice and you have for instance GitHub \nco-pilot installed \num GitHub copilot will after a few \ndemonstrations of lmql effortlessly \nwrite lmql like it's so close to Python \nand semantics are mostly declarative \nthat it's not really hard for for um \nthe auto completion models to pick up on \nthis \num we haven't done more for our \nexperience experiments with intenders \num \nso there may be something there for us \nit's mostly about time currently like we \nhave so many directors and projects to \nexplore \num incredibly busy these days so so \nhopefully at some point we can we get to \nwork on this but yeah not not directly \nright now it's not a priority first \nyeah super cool yeah it's very \ninteresting hearing the um the \nfrustration of a designer of programming \nlanguages \nyeah so you mentioned the you know the \ntime thing and they I'm very curious \njust kind of you know I've learned so \nmuch from talking with you in these 45 \nminutes you certainly seemed like you \nhave a really you know exciting vision \nfor the future of this what are some of \nthese like um you know future projects \ndirections that you're going with lqo \nso I mean on a high level I think the \nmost fascinating thing to me being a PL \nand machine learning person is this this \nnew generation of models that's \nprogrammable so suddenly like you can \nprompt them to do things you can compose \nthem in new ways they're not just one \ntask reasoners they're multitask \nlisteners and for me this is incredibly \ninteresting I think also um talking to \npeople in in like bigger labs \nthere is interest in building models \nthat are programmable in the sense maybe \neven Beyond prompting like maybe we can \nfind more formal languages train \nFoundation models on different kinds of \ndata that are programmable and \ncomposable in the sense so so I think in \ngeneral this field is is really amazing \nI think multi-modality definitely want \nto integrate this \num not sure about the programming models \nthere for instance programming with \nimages is very different usually than \nvisually and then with text like text is \nobviously the most the closest thing to \nto code as well so um yeah we'll \ndefinitely explore this this I think \nthis is incredibly interesting \nin Array like also our industry paper \nthe core Insight is prompting is \nprogramming like this enables a new form \nof of programming that will be \nfundamentally different from what we \nknow so far because \nyou don't have to specify every detail \nyou have these new reasoning engines \nthat you can use as building blocks you \ncan make fussy things hard things that \nare things that were hard so far \nsuddenly became much easier to do with l \nand m so so it's very interesting to \nexplore it in this way \ncarve it out on a much more concrete \nlevel we also have lots of things you \nwant to do with lmgl of course \num we're definitely thinking about \ncompositional stuff like chaining stuff \ntogether mapreduce Style computations \nwith llms and I've for now we're very \nminimalistic we try not to add too many \nabstractions \nthe feedback from the community often is \nvery harsh with regards to these \num I think there should be well thought \nout it's hard to find the right \nattractions as long as things are moving \nthat fast but we definitely have some \nideas around like algorithmic use as \nwell like llm-based sorting algorithms \nfor instance or like just using llms as \ndata transformation tools to go from one \nform to another in a much more machine \nlearning based way \nand then like something that's more or \nless coming up more or less immediately \nis also types like we will add types to \nlmql we have intentional types for now \nbut this will extend to \num reg X matching but also structural \ntypes like \ndata classes Json \num yeah I think this will be really \nuseful and correct practical to have \nalso valid and programming in general \nyeah that's a I love that you know \nfuture perspective also immediately very \ngrounded I you know I learned a lot \nabout you like the structured output \nparsing and being I think one of the key \nconstraints to enforce with a large \nlanguage model uh programming I love \nthis kind of moving data from one format \nto the other like CSV to Json that's \njust like a common thing that people \nwant to use but um \nso I really wanted to earlier I brought \nthis up quickly there's there's this \nother uh I wouldn't compare I wouldn't \ncall it quite like um \nlmql but uh demonstrate search predict \nDSP basically the idea is um \nlike one part of the idea that I \nunderstand well and I'm sure I'm already \na much better description of it but like \nmy understanding of it let me like Frame \nIt That Way first is like you would \nretrieve some examples of a task so you \nhave some input output of like \nI don't know how I like to respond to \nemails about we V8 something's \nparticular like that and then it will \num look at intermediate tool use kind of \nchains to to get to that output that \nyou've demonstrated and you give it a \nfew examples of it and so it will \ncompile some kind of like intermediate \nreasoning chain sort of and it makes me \nthink and then you you know because you \nmentioned the multitask learning kind of \nperspective and I guess I'm just I hope \nthat I'm framing this right but like \nthis thing about like gradient descent \nis it still needed to adapt to new tasks \nor do we just kind of like compile new \nchains of tool use and checking parts \nand adding structured parsing and \nin the middle I hope that question is \nclear \nyeah \nI mean coming from core machine learning \nmodels \nI'm not ready to give up on on gradient \ndescent let's say am I before I worked \nalso on differentiable programming \nlanguages and actually I think there's \nlots of really cool potential to explore \nthere like there's this ongoing debate \nalso about is prompting enough or will \nprompting actually eventually die and \nand fine-tuning ruler wise again \num obviously for now the more resource \nuh conscious thing to do with protein \nbecause you don't have to spin up your \nown GPU machine some of these really \nlarge models are not even feasible to \ntrain for smaller companies but then \nlike there's these much more very \ninteresting Pathways to to fine-tune \nmodels now \nso I think actually um and we're \nthinking about this like \ncompletely \num dismissing the the neural layer that \nactually is below below the text layer \nthat we have now is I think it's it's \nnot um \nwe shouldn't do this like I think \nthere's lots of \num bottlenecking like the text layer is \nactually a bottleneck like especially if \nyou chain multiple chords together \num lots of information is lost in just \nputting the output text of one call into \nthe next call like the model has very \nrich representations internally so I \nthink actually composing models and also \nlarge pre-trend models on a neural level \nlike actually passing hidden States \nlatent representations along this could \nbe really interesting in the future \nobviously for now it's also a resource \nissue like you need gpus you need to run \nthis model small or less locally to do \nthis \num but yeah thinking longer into the \nfuture I think \nwe may even go back to the neural layer \nnot say on the text layer I think text \nlayer is also something that was born \nout of the practicality and and for \neconomical reasons \nso oh this is it's really really \ninteresting I like I'm really \nfascinating in these architectures like \nretro Fusion indicator memorizing \nTransformers long llamas one that John \ntrengrove at levia sent to me today just \nlike the latest iteration of this where \nyou you know you have the um attention \nover vectors retrieved by something like \na vector I don't want to say Vector \ndatabase because you know like a vector \nindex like it's something to facilitate \napproximate nearest neighbor search at \nlike absolutely enormous scale and then \nthe difference is instead of just \nputting that in the input layer you put \nit in layer like eight out of 12 of the \nTransformer and it attends over those \nlatent representations and you could \nimagine like there's this other paper \ncalled uh Transformers are Universal \ncomputation engines or something that \nshows that image embedding spaces can be \nprocessed by text embedding models and \nwhen you give it the latent space and \nthe intermediate layer not the input so \nand then you're describing this \ncomposability thing \nso it's like this idea of having some \nkind of debugging for that kind of \narchitecture as well that kind of like \nintermediate so so yeah like um how do \nyou see those kind of architectures \nbeing realized though is it going to \ntake someone you know just just trying \nto you know change out maybe one of the \nopen models like MPT or falcon or say \nyou know gbt3 is modified to have this \nkind of extension because you know like \nwhat's kind of the state of that like \nputting the latent representations in \nthe middle of other models and combining \nmodels and then combining models that \nway it's really fascinating stuff \nyeah so I mean I think um \nif we look at open air what they do \num currently they're very into this we \nhave a text-based API you put text and \nyou get text out and the chat apis are \nmuch more limited than the previous \ncompletion apis they're moving more \ntowards this it's a match function it \ndoes sometimes that's what you want it \nto do \num obviously that's actually moving away \nfrom this interface that we would need \nto implement more um neurally based \nsystems and so I guess to do this right \nnow the only way is to actually work \nwith open models \num I also can see if this actually works \nout like I'm sure many people work on \nthese kind of issues also already if \nthis in the end \num \nas promising also to them I can imagine \nthem opening this up maybe providing \nsome kind of platform \nI mean at this point we don't know \num I think for now we are \neven open it as GPU constrained at least \nthis further now so actually exposing \nthis kind of much deeper \num \ninterface would be difficult for now \nand probably also from a proprietary \nperspective not too smart like if you \nleak your hidden States model \ndistillation becomes much easier of \ncourse so yeah I guess if you want to \nimplement this today you will probably \nhave to withhold two open models \num \nand then for other things more \nproprietary apis it will be interesting \nto see a red interfaces go like our chip \nD4 will also at some point accept image \ninput which will be a limited form of \nthis or less red you can now also embed \nsome image and this will be passed \nthrough to the text model to be \nprocessed by the text model \nyeah it's hard to tell at this point I \nthink um resource constraints \nit's for everyone with those constraints \nare currently the bottleneck to do this \nyeah it's totally this is this \nconversation has totally opened my eyes \nto how this is I've heard these things \nthat those these rumors on Twitter and \nso on that gbt4 is like a mixture of \nexperts model and I think the \narchitecture of mixture of experts is \nkind of like a composable model in one \nit kind of reminds me of just like you \nknow like lottery ticket hypothesis \nshowing that sparse networks can you \nknow carry the burden and so it probably \nwhat happens is we have this like mix of \nsparse networks it's kind of like that \num a thousand brains Theory uh it's been \na long time since I reflected that but \nlike that kind of idea that you you have \nthis kind of composability within dense \narchitectures as is but if you \nexplicitly separate it \nhi so I mean it really makes me think \nabout like whether Vector indexes would \ncompose embeddings from multiple models \nas well it's not something I've ever \nthought about like having like open AI \nembeddings as well as clip and uh like \nyou know the Ada two text embeddings \nwith the clip embeddings like totally \nseparate models but in the same kind of \nindex and \nuh yeah there's just so many interesting \nideas to that I think really so yeah uh \nso yeah it definitely got on the train \nof thinking towards the future it you \nknow I think we're mostly thinking of \ncomposing model inferences purely \nthrough the text input text output kind \nof landscape do you think like I think \nwe're we might be dreaming a little bit \ndo you think that's how long do you \nthink that'll still be the most common \nway of interfacing models with each \nother \nwow I mean at this point it's really \nhard to say things are moving so fast \nalthough yeah \nit's really hard to tell like at this \npoint \num bigger shops closing down more and \nmore means also that any day someone \nwith some new model this has something \nbigger and and the tire research fields \nare being disrupted by this more or less \nso it's hard to tell where this is going \num I think from a programming \nperspective the text layer definitely is \nsomething very accessible like \ncoming from PL \nhaving a model that takes natural \nlanguage input and thus more or less \nwhat you tell it to do is the best \nprogramming language in the world right \nit's just natural language \nand there's this incredibly accessible \nto so many people that's also read so \nmany people use chat GPT because they \nessentially \nthey're essentially just overnight learn \nto code because they can just instruct \nyour computer to do something and it \ndoesn't and like \nhaving a lot of passion about coding I \nget them like obviously this is amazing \nto them having disability now and \nbut so in that sense I think the text \nlayer is really interesting as an input \nas an output of course you can also do \nimages I've seen really cool projects \nabout \nmodels outputting code that then renders \nas user interface this is also really \ncool like personally I've grown a bit \ntired of reading long wordy paragraphs \nof \na language model output like the scenes \nthis seems to take it like for my \npresent test this takes too long I will \ntell you \num effective in taking out up this \nconfig information \num \nso yeah I think there's lots of \num benefits to the text layer \num especially for like \neveryone that's not super technical and \nwants just wants to use some some \nchatbot API or some chatbot interface to \nget some answers to their questions \nyeah I think I mean this whole \nperspective I think most of the \nllm Frameworks I don't like \nI guess it's like I still think of lmql \nthis way even though I think of you as a \nscientist like like I think what we're \ntalking like what we started talking \nabout about discomposable models I still \ndon't quite understand how that would \nwork and Allen kill quite yet but I'm \nsure that you'll figure that out but it \njust like um \nlike moving past text being the how the \nbottleneck for uh language model chains \nlanguage model tools interacting with \nothers even just with embedding so like \nmaybe let me take a step back and tell \nthis kind of like you know like we have \nthis feature in weba called ref to VEC \nthat we often use for recommendations so \nyou know I'm Connor and I like these \nthree basketball shoes and so then I \nhave like this Vector that captures my \ntaste in basketball shoes or like say my \ntaste in movies right and then I have \nLucas taste in movies and maybe we find \nsome you know we average these vectors \nand then a generative model you know \nproduces a movie that would be something \nthat me and Luca would like \nyeah it's kind of like moving into \ntensors or vectors I mean how do llm \nFrameworks get there like it's such a \nit's such a eye-opening idea \nI think it's totally different Paradigm \nlike I I think \nand and it makes sense like we're \ncurrently building things for the text \nlayer and and this is really cool and \nfun if we I think this would be a \ndifferent thing like there would be I \nguess different abstractions I mean I'm \nnot even convinced that we landed on the \nright abstractions currently on the text \nlayer there and also the models are \nstill moving so so who knows where this \nwill go like essentially we just have to \ntry out most things and then see what \nworks right and then \ngoing to this more um \nlike I would say that what you propose \nthis sort of averaging of vectors and \nthen putting this into a model that this \nis definitely some form of composable or \nprogrammable model and at that point \nright you you really Define a program of \nwhat you want and then the model sort of \nexecutes steps that that you um Define \nyour algorithm right so um \nyeah I mean I mean \nI think it's it's probably not a time \nyet that this actually works or this is \nactually \num something people do or build \nI mean in research for sure but but like \nnot optional on the level of llm and \ntooling \num but once this actually becomes \npossible I think also lots of \ninteresting new programming ideas will \ncome up no new Frameworks new languages \nand yeah with the current lmgl \num I think we would move a lot in the \npresence of such a such thing \namazing Luca thank you so much I think \nyou know just um you know firstly \nunderstanding lmql when I first saw I \nthink just like you know when I first \nsaw the lmql my first impression \npersonally was it reminded me of levier \ndesign how we have kind of like a \ngraphql API as well as these client \nlibraries and you kind of can see the \ndifference in in my opinion it's easier \nto design the graphql and I because I \nkind of feel like the syntax of lmql \nlooks like that compared to a lot of \nthese Frameworks like you know I don't \nwant to name them but like that require \nall this buy-in you know this is a \nlittle more open-ended than that so I \nwas always already super impressed with \nlmql the lmql playground is a visual \nthing I'd highly recommend people to see \nthat because it's it's brilliant really \nit the way that it lets you visualize \nthis complex prompt uh execution is \nreally super novel and then those ideas \naround structured output parsing that \nkind of like wear clause in the lmql \nsyntax and how that restricts the thing \nall amazing stuff and then start adding \nmore thing but how lmql already \nintegrates with llama index Lang chain \nyou know is something you can kind of \nget running with and then it just kind \nof towards the end of our conversation \nthis discussion of you know the text \nbottleneck that just really opened my \neyes into how the space could evolve so \nyou know Luca thank you so much for the \npodcast I think you're you know building \na super incredible tool and you \ndefinitely have the Visionary aspect of \nseeing where this technology is headed \nuh before we wrap up could you give \nlisteners like your media like how to \nfollow along with you like are you \nprimary publishing papers are you on \nTwitter \nthey are definitely um you can I mean \nlmgl you just find at lmgl.ai \nwe also have Twitter account \num and I'm also on Twitter um our \ncalendar maybe we can link it somewhere \nyou can follow me there \num \nand yeah also please if you want to try \nout lmql do so we have the Discord we \nalways most of the time we're online and \nhelping people also so please feel free \nto reach out there as well and and happy \nto help and discuss also like more \nbroadly and then I'm programming and \nright this can go yeah and thank you so \nmuch for having me yeah well quickly let \nme ask I'm curious about your \nperspectives on this Discord uh \nCommunity how has your experience been \nbuilding something like that for a new \ntechnology like this \num it's it's \num I actually really like interacting \nwith people talk to them a lot \num it's a bit overwhelming to be honest \nthis is my first open source project at \nthis scale it's a lot of support \nrequests and all of us and the team \nalready have full-time jobs so \nessentially it's another full-time job \nto do this um but at the same time the \ncommunity feedback also has been quite \nquite amazing and and people start to \ncontribute \num and we are still like very much \nwelcoming everyone who wants to to hack \non lmgl \num brainstorm and \nand also like happy to help out \nbeginners talk about the issues with NFL \nmaybe you didn't want to get something \nrunning with totally I'm happy to help \nwith that \nyeah I think it'll be it'll be a really \ncool demonstration of um you know \nCommunity feedback plus this science \nthis vision of it and yeah I'm super \nexcited to follow along with it Luca \nthank you so much for joining the weba \npodcast this is truly one of my \nfavorites I learned so much about the \nlarge language model space and how this \ncan develop \nthank you so much for having me Conor \n", "type": "Video", "name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "path": "", "link": "https://www.youtube.com/watch?v=cuWLPHDAQ5g", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": [{"text": "hey everyone thank you so much for", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 0, "tokens": 0, "vector": null, "score": 0}, {"text": "watching another episode of the wevia", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1, "tokens": 0, "vector": null, "score": 0}, {"text": "podcast I'm super excited to welcome", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 2, "tokens": 0, "vector": null, "score": 0}, {"text": "Luca Bureau Kelner Luke is the lead", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 3, "tokens": 0, "vector": null, "score": 0}, {"text": "author of lmql a super exciting new", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 4, "tokens": 0, "vector": null, "score": 0}, {"text": "programming language for large language", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 5, "tokens": 0, "vector": null, "score": 0}, {"text": "models and Tool use and I think kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 6, "tokens": 0, "vector": null, "score": 0}, {"text": "this space is just continually evolving", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 7, "tokens": 0, "vector": null, "score": 0}, {"text": "of what these llm Frameworks are going", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 8, "tokens": 0, "vector": null, "score": 0}, {"text": "to look like and I think lmql clearly", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 9, "tokens": 0, "vector": null, "score": 0}, {"text": "adds something to this conversation so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 10, "tokens": 0, "vector": null, "score": 0}, {"text": "before going any further Luca thank you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 11, "tokens": 0, "vector": null, "score": 0}, {"text": "so much for joining the podcast", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 12, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah thank you Connor for having me um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 13, "tokens": 0, "vector": null, "score": 0}, {"text": "happy to talk about Alexa and also yeah", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 14, "tokens": 0, "vector": null, "score": 0}, {"text": "the entire space a bit yeah awesome so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 15, "tokens": 0, "vector": null, "score": 0}, {"text": "maybe before we even get into the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 16, "tokens": 0, "vector": null, "score": 0}, {"text": "details of lmql could you describe kind", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 17, "tokens": 0, "vector": null, "score": 0}, {"text": "of like your research path and your PhD", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 18, "tokens": 0, "vector": null, "score": 0}, {"text": "student at eth and like what led you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 19, "tokens": 0, "vector": null, "score": 0}, {"text": "into uh working with large language", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 20, "tokens": 0, "vector": null, "score": 0}, {"text": "models", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 21, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah so I'm in my PhD at dth currently I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 22, "tokens": 0, "vector": null, "score": 0}, {"text": "briefly I did my bachelor's in Berlin", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 23, "tokens": 0, "vector": null, "score": 0}, {"text": "and also my Master's Master stand here", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 24, "tokens": 0, "vector": null, "score": 0}, {"text": "in cerica dth", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 25, "tokens": 0, "vector": null, "score": 0}, {"text": "and yeah I guess", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 26, "tokens": 0, "vector": null, "score": 0}, {"text": "before I came into llms I really was in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 27, "tokens": 0, "vector": null, "score": 0}, {"text": "the field or I still am in the field of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 28, "tokens": 0, "vector": null, "score": 0}, {"text": "programming languages", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 29, "tokens": 0, "vector": null, "score": 0}, {"text": "um really something that fascinated me", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 30, "tokens": 0, "vector": null, "score": 0}, {"text": "for my entire studies so far Bruce Lee I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 31, "tokens": 0, "vector": null, "score": 0}, {"text": "also worked at the company building", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 32, "tokens": 0, "vector": null, "score": 0}, {"text": "mostly tooling and a language in the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 33, "tokens": 0, "vector": null, "score": 0}, {"text": "JavaScript ecosystem and they are doing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 34, "tokens": 0, "vector": null, "score": 0}, {"text": "my masters I also got um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 35, "tokens": 0, "vector": null, "score": 0}, {"text": "took a few machine learning lectures", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 36, "tokens": 0, "vector": null, "score": 0}, {"text": "started to look into this a bit and in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 37, "tokens": 0, "vector": null, "score": 0}, {"text": "general my PhD studies are basically", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 38, "tokens": 0, "vector": null, "score": 0}, {"text": "are at this intersection of machine", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 39, "tokens": 0, "vector": null, "score": 0}, {"text": "learning and programming languages and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 40, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah like a year ago basically we", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 41, "tokens": 0, "vector": null, "score": 0}, {"text": "started to look into llms because they", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 42, "tokens": 0, "vector": null, "score": 0}, {"text": "seem to get more and more powerful and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 43, "tokens": 0, "vector": null, "score": 0}, {"text": "capable of doing many things and this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 44, "tokens": 0, "vector": null, "score": 0}, {"text": "was like even before church 50 came out", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 45, "tokens": 0, "vector": null, "score": 0}, {"text": "so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 46, "tokens": 0, "vector": null, "score": 0}, {"text": "basically a different era if you look at", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 47, "tokens": 0, "vector": null, "score": 0}, {"text": "it from today", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 48, "tokens": 0, "vector": null, "score": 0}, {"text": "um and yeah so we started working on on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 49, "tokens": 0, "vector": null, "score": 0}, {"text": "llms and started to think about how can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 50, "tokens": 0, "vector": null, "score": 0}, {"text": "we program with this like is there some", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 51, "tokens": 0, "vector": null, "score": 0}, {"text": "programming language perspective in here", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 52, "tokens": 0, "vector": null, "score": 0}, {"text": "and that's how we started working on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 53, "tokens": 0, "vector": null, "score": 0}, {"text": "lmgl", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 54, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah that's so interesting I love how", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 55, "tokens": 0, "vector": null, "score": 0}, {"text": "the lmql like just for me there's just", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 56, "tokens": 0, "vector": null, "score": 0}, {"text": "the syntax of it how you have kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 57, "tokens": 0, "vector": null, "score": 0}, {"text": "like it's like an SQL where it's like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 58, "tokens": 0, "vector": null, "score": 0}, {"text": "select from where it has this kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 59, "tokens": 0, "vector": null, "score": 0}, {"text": "look and so I think it would kind of be", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 60, "tokens": 0, "vector": null, "score": 0}, {"text": "I'm really interested in also touching", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 61, "tokens": 0, "vector": null, "score": 0}, {"text": "on that you know pre-chat gbt how you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 62, "tokens": 0, "vector": null, "score": 0}, {"text": "were thinking about that before that but", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 63, "tokens": 0, "vector": null, "score": 0}, {"text": "I'd like to just let's keep", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 64, "tokens": 0, "vector": null, "score": 0}, {"text": "transitioning like your perspective on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 65, "tokens": 0, "vector": null, "score": 0}, {"text": "programming languages like what like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 66, "tokens": 0, "vector": null, "score": 0}, {"text": "what is it a large language model", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 67, "tokens": 0, "vector": null, "score": 0}, {"text": "programming language", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 68, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I mean that's a great question like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 69, "tokens": 0, "vector": null, "score": 0}, {"text": "obviously um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 70, "tokens": 0, "vector": null, "score": 0}, {"text": "from an academic setting it made sense", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 71, "tokens": 0, "vector": null, "score": 0}, {"text": "to start to think about this in terms of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 72, "tokens": 0, "vector": null, "score": 0}, {"text": "programming systems because I mean", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 73, "tokens": 0, "vector": null, "score": 0}, {"text": "previously machine learning models were", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 74, "tokens": 0, "vector": null, "score": 0}, {"text": "mostly just models that were trained to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 75, "tokens": 0, "vector": null, "score": 0}, {"text": "do one task well you put something in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 76, "tokens": 0, "vector": null, "score": 0}, {"text": "you get something out but now with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 77, "tokens": 0, "vector": null, "score": 0}, {"text": "models that can take free text input", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 78, "tokens": 0, "vector": null, "score": 0}, {"text": "also like diffusion models for instance", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 79, "tokens": 0, "vector": null, "score": 0}, {"text": "just becomes more of an interactive", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 80, "tokens": 0, "vector": null, "score": 0}, {"text": "um form of of programming or interacting", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 81, "tokens": 0, "vector": null, "score": 0}, {"text": "with these models and when we set out to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 82, "tokens": 0, "vector": null, "score": 0}, {"text": "build something in the space we were", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 83, "tokens": 0, "vector": null, "score": 0}, {"text": "mostly Modified by this perspective of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 84, "tokens": 0, "vector": null, "score": 0}, {"text": "programming language models like having", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 85, "tokens": 0, "vector": null, "score": 0}, {"text": "machine learning models that offer this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 86, "tokens": 0, "vector": null, "score": 0}, {"text": "form of programmability of you can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 87, "tokens": 0, "vector": null, "score": 0}, {"text": "compose them you can make them do", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 88, "tokens": 0, "vector": null, "score": 0}, {"text": "different things and really um to start", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 89, "tokens": 0, "vector": null, "score": 0}, {"text": "to look at this from this this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 90, "tokens": 0, "vector": null, "score": 0}, {"text": "perspective", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 91, "tokens": 0, "vector": null, "score": 0}, {"text": "so I've kind of had a similar", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 92, "tokens": 0, "vector": null, "score": 0}, {"text": "perspective but coming from sort of The", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 93, "tokens": 0, "vector": null, "score": 0}, {"text": "Ensemble learning perspective where you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 94, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of like Ensemble model predictions", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 95, "tokens": 0, "vector": null, "score": 0}, {"text": "and especially you know like these ideas", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 96, "tokens": 0, "vector": null, "score": 0}, {"text": "like hugging gbt where you're routing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 97, "tokens": 0, "vector": null, "score": 0}, {"text": "inferences to like you have some kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 98, "tokens": 0, "vector": null, "score": 0}, {"text": "task and you break up the task into", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 99, "tokens": 0, "vector": null, "score": 0}, {"text": "which of these models could perform each", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 100, "tokens": 0, "vector": null, "score": 0}, {"text": "of the subtests it also kind of reminds", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 101, "tokens": 0, "vector": null, "score": 0}, {"text": "me of this recent work on gorilla it's a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 102, "tokens": 0, "vector": null, "score": 0}, {"text": "large language model from Berkeley", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 103, "tokens": 0, "vector": null, "score": 0}, {"text": "that's like fine-tuned to use particular", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 104, "tokens": 0, "vector": null, "score": 0}, {"text": "tools so it sounds like you have that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 105, "tokens": 0, "vector": null, "score": 0}, {"text": "perspective of like composing machine", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 106, "tokens": 0, "vector": null, "score": 0}, {"text": "learning inferences together to kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 107, "tokens": 0, "vector": null, "score": 0}, {"text": "say okay you're the lawyer or like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 108, "tokens": 0, "vector": null, "score": 0}, {"text": "you're the image generation model like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 109, "tokens": 0, "vector": null, "score": 0}, {"text": "like this kind of segmentation of model", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 110, "tokens": 0, "vector": null, "score": 0}, {"text": "inferences the uh correct understanding", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 111, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah definitely I would say this is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 112, "tokens": 0, "vector": null, "score": 0}, {"text": "almost already the next step like this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 113, "tokens": 0, "vector": null, "score": 0}, {"text": "is the step of this is the Master model", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 114, "tokens": 0, "vector": null, "score": 0}, {"text": "supermodel that composes different", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 115, "tokens": 0, "vector": null, "score": 0}, {"text": "models like in Ensemble learning right", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 116, "tokens": 0, "vector": null, "score": 0}, {"text": "and we essentially moving this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 117, "tokens": 0, "vector": null, "score": 0}, {"text": "responsibility of composing models to a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 118, "tokens": 0, "vector": null, "score": 0}, {"text": "human programmer", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 119, "tokens": 0, "vector": null, "score": 0}, {"text": "um so so we say Okay youth you humans", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 120, "tokens": 0, "vector": null, "score": 0}, {"text": "can also compose machine learning models", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 121, "tokens": 0, "vector": null, "score": 0}, {"text": "in this way or like developer program I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 122, "tokens": 0, "vector": null, "score": 0}, {"text": "can do this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 123, "tokens": 0, "vector": null, "score": 0}, {"text": "um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 124, "tokens": 0, "vector": null, "score": 0}, {"text": "it's true that of course this entire", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 125, "tokens": 0, "vector": null, "score": 0}, {"text": "program of how to compose these things", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 126, "tokens": 0, "vector": null, "score": 0}, {"text": "the llm generated", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 127, "tokens": 0, "vector": null, "score": 0}, {"text": "um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 128, "tokens": 0, "vector": null, "score": 0}, {"text": "I think this works with reasonable", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 129, "tokens": 0, "vector": null, "score": 0}, {"text": "success so far and I think there's a lot", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 130, "tokens": 0, "vector": null, "score": 0}, {"text": "of potential in there", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 131, "tokens": 0, "vector": null, "score": 0}, {"text": "um but yeah with the project we're", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 132, "tokens": 0, "vector": null, "score": 0}, {"text": "mostly focused on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 133, "tokens": 0, "vector": null, "score": 0}, {"text": "providing this to to Google program is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 134, "tokens": 0, "vector": null, "score": 0}, {"text": "not necessarily in fully synthesizing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 135, "tokens": 0, "vector": null, "score": 0}, {"text": "this this program that's that's being", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 136, "tokens": 0, "vector": null, "score": 0}, {"text": "executed on a higher level", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 137, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I think like the to me the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 138, "tokens": 0, "vector": null, "score": 0}, {"text": "challenge of Designing that how you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 139, "tokens": 0, "vector": null, "score": 0}, {"text": "synthesize the program and the challenge", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 140, "tokens": 0, "vector": null, "score": 0}, {"text": "and say like Lang chain llama index or", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 141, "tokens": 0, "vector": null, "score": 0}, {"text": "say semantic kernel Gina AI deep set is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 142, "tokens": 0, "vector": null, "score": 0}, {"text": "uh like the abstractions change kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 143, "tokens": 0, "vector": null, "score": 0}, {"text": "right and so I when I first saw lmql and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 144, "tokens": 0, "vector": null, "score": 0}, {"text": "the syntax of it I thought it was", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 145, "tokens": 0, "vector": null, "score": 0}, {"text": "something that was kind of like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 146, "tokens": 0, "vector": null, "score": 0}, {"text": "fundamentally different from sort of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 147, "tokens": 0, "vector": null, "score": 0}, {"text": "wrapping abstractions in like python", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 148, "tokens": 0, "vector": null, "score": 0}, {"text": "classes", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 149, "tokens": 0, "vector": null, "score": 0}, {"text": "is there something to this kind of lmql", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 150, "tokens": 0, "vector": null, "score": 0}, {"text": "that would help like how are you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 151, "tokens": 0, "vector": null, "score": 0}, {"text": "thinking about sort of your", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 152, "tokens": 0, "vector": null, "score": 0}, {"text": "understanding of the abstractions", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 153, "tokens": 0, "vector": null, "score": 0}, {"text": "evolving over time and how you would uh", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 154, "tokens": 0, "vector": null, "score": 0}, {"text": "you know adapt with I hope that question", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 155, "tokens": 0, "vector": null, "score": 0}, {"text": "wasn't too open-ended", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 156, "tokens": 0, "vector": null, "score": 0}, {"text": "no I I totally see uh where you're going", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 157, "tokens": 0, "vector": null, "score": 0}, {"text": "with this like I think there's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 158, "tokens": 0, "vector": null, "score": 0}, {"text": "lots of new Crown to cover and I think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 159, "tokens": 0, "vector": null, "score": 0}, {"text": "that's also the reason why lots of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 160, "tokens": 0, "vector": null, "score": 0}, {"text": "people have lots of different ideas on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 161, "tokens": 0, "vector": null, "score": 0}, {"text": "how to abstract these things", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 162, "tokens": 0, "vector": null, "score": 0}, {"text": "the design philosophy that we are", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 163, "tokens": 0, "vector": null, "score": 0}, {"text": "following so far is mostly", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 164, "tokens": 0, "vector": null, "score": 0}, {"text": "not from this top-down perspective of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 165, "tokens": 0, "vector": null, "score": 0}, {"text": "how can we abstract things in the space", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 166, "tokens": 0, "vector": null, "score": 0}, {"text": "it's really coming from", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 167, "tokens": 0, "vector": null, "score": 0}, {"text": "how do language models work internally", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 168, "tokens": 0, "vector": null, "score": 0}, {"text": "so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 169, "tokens": 0, "vector": null, "score": 0}, {"text": "we started with the perspective of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 170, "tokens": 0, "vector": null, "score": 0}, {"text": "the Auto request the flash language", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 171, "tokens": 0, "vector": null, "score": 0}, {"text": "models are token by token predictors and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 172, "tokens": 0, "vector": null, "score": 0}, {"text": "there's these decoding algorithms like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 173, "tokens": 0, "vector": null, "score": 0}, {"text": "you can do arguments to calling you can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 174, "tokens": 0, "vector": null, "score": 0}, {"text": "sampling you can do beam search you can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 175, "tokens": 0, "vector": null, "score": 0}, {"text": "do even more advanced things", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 176, "tokens": 0, "vector": null, "score": 0}, {"text": "um and to start from this perspective", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 177, "tokens": 0, "vector": null, "score": 0}, {"text": "thinking about how can this core Loop of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 178, "tokens": 0, "vector": null, "score": 0}, {"text": "token by token by token prediction be", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 179, "tokens": 0, "vector": null, "score": 0}, {"text": "optimized how can we control this more", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 180, "tokens": 0, "vector": null, "score": 0}, {"text": "tightly on the one hand with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 181, "tokens": 0, "vector": null, "score": 0}, {"text": "constraining and on the other hand with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 182, "tokens": 0, "vector": null, "score": 0}, {"text": "um scripted execution like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 183, "tokens": 0, "vector": null, "score": 0}, {"text": "this way that lmql enables you to use do", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 184, "tokens": 0, "vector": null, "score": 0}, {"text": "template based text generation", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 185, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I think the template based thing is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 186, "tokens": 0, "vector": null, "score": 0}, {"text": "one of the instant things that jumped", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 187, "tokens": 0, "vector": null, "score": 0}, {"text": "out to me about Lang chain when it was", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 188, "tokens": 0, "vector": null, "score": 0}, {"text": "first released is like you know you're", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 189, "tokens": 0, "vector": null, "score": 0}, {"text": "chaining together language model calls", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 190, "tokens": 0, "vector": null, "score": 0}, {"text": "and you put it in the um you put the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 191, "tokens": 0, "vector": null, "score": 0}, {"text": "output in the input but um I understand", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 192, "tokens": 0, "vector": null, "score": 0}, {"text": "what you said about ARG Max and the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 193, "tokens": 0, "vector": null, "score": 0}, {"text": "internals of large language models", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 194, "tokens": 0, "vector": null, "score": 0}, {"text": "like I when I first saw lmql I saw that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 195, "tokens": 0, "vector": null, "score": 0}, {"text": "like you can switch ARG Max with beam", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 196, "tokens": 0, "vector": null, "score": 0}, {"text": "search with say this there's another", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 197, "tokens": 0, "vector": null, "score": 0}, {"text": "paper called flare I've made a paper", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 198, "tokens": 0, "vector": null, "score": 0}, {"text": "summary video this on weevier where it's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 199, "tokens": 0, "vector": null, "score": 0}, {"text": "this thing where you would sample the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 200, "tokens": 0, "vector": null, "score": 0}, {"text": "next sentence and then look at the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 201, "tokens": 0, "vector": null, "score": 0}, {"text": "uncertainty of those tokens and if it's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 202, "tokens": 0, "vector": null, "score": 0}, {"text": "uncertain you would then retrieve again", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 203, "tokens": 0, "vector": null, "score": 0}, {"text": "basically that there are all sorts of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 204, "tokens": 0, "vector": null, "score": 0}, {"text": "decoding things you can do and yeah", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 205, "tokens": 0, "vector": null, "score": 0}, {"text": "that's pretty novel I don't think um you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 206, "tokens": 0, "vector": null, "score": 0}, {"text": "know the the like the other Frameworks I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 207, "tokens": 0, "vector": null, "score": 0}, {"text": "think because they treat the language", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 208, "tokens": 0, "vector": null, "score": 0}, {"text": "model apis as sort of black boxes right", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 209, "tokens": 0, "vector": null, "score": 0}, {"text": "so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 210, "tokens": 0, "vector": null, "score": 0}, {"text": "I don't know if like I don't even think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 211, "tokens": 0, "vector": null, "score": 0}, {"text": "open AI with their API gives you that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 212, "tokens": 0, "vector": null, "score": 0}, {"text": "option to um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 213, "tokens": 0, "vector": null, "score": 0}, {"text": "uh you know like have beam search or", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 214, "tokens": 0, "vector": null, "score": 0}, {"text": "like maybe it's just cooked into kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 215, "tokens": 0, "vector": null, "score": 0}, {"text": "like the temperature right like but or", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 216, "tokens": 0, "vector": null, "score": 0}, {"text": "like tuning those kind of things", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 217, "tokens": 0, "vector": null, "score": 0}, {"text": "exactly like yeah I guess like um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 218, "tokens": 0, "vector": null, "score": 0}, {"text": "so how much opportunity is there to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 219, "tokens": 0, "vector": null, "score": 0}, {"text": "because don't you need to have like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 220, "tokens": 0, "vector": null, "score": 0}, {"text": "uncertainty calibration and all sorts of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 221, "tokens": 0, "vector": null, "score": 0}, {"text": "things like that in order to make that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 222, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of thing work", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 223, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah yeah definitely you do um it's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 224, "tokens": 0, "vector": null, "score": 0}, {"text": "interesting like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 225, "tokens": 0, "vector": null, "score": 0}, {"text": "um actually depending on what API you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 226, "tokens": 0, "vector": null, "score": 0}, {"text": "use with open AI especially if you use", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 227, "tokens": 0, "vector": null, "score": 0}, {"text": "the now deprecated completion apis you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 228, "tokens": 0, "vector": null, "score": 0}, {"text": "actually do get this information at", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 229, "tokens": 0, "vector": null, "score": 0}, {"text": "least on a limit in a limited form they", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 230, "tokens": 0, "vector": null, "score": 0}, {"text": "do some obfuscation log it's sometimes", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 231, "tokens": 0, "vector": null, "score": 0}, {"text": "very I assume for for um to protect", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 232, "tokens": 0, "vector": null, "score": 0}, {"text": "against", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 233, "tokens": 0, "vector": null, "score": 0}, {"text": "um model distillation but you can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 234, "tokens": 0, "vector": null, "score": 0}, {"text": "actually get some of this out of there", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 235, "tokens": 0, "vector": null, "score": 0}, {"text": "it's obviously it's a bit restricted but", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 236, "tokens": 0, "vector": null, "score": 0}, {"text": "we put a lot of work in making it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 237, "tokens": 0, "vector": null, "score": 0}, {"text": "compatible and exactly for this reason", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 238, "tokens": 0, "vector": null, "score": 0}, {"text": "because the black box is actually not", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 239, "tokens": 0, "vector": null, "score": 0}, {"text": "that black after all especially with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 240, "tokens": 0, "vector": null, "score": 0}, {"text": "open models obviously you have full", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 241, "tokens": 0, "vector": null, "score": 0}, {"text": "access you get all of this information", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 242, "tokens": 0, "vector": null, "score": 0}, {"text": "and even with open AI models you get", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 243, "tokens": 0, "vector": null, "score": 0}, {"text": "some of this information and you can in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 244, "tokens": 0, "vector": null, "score": 0}, {"text": "fact Implement beam search on top of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 245, "tokens": 0, "vector": null, "score": 0}, {"text": "these apis", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 246, "tokens": 0, "vector": null, "score": 0}, {"text": "um now this completion apis are being", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 247, "tokens": 0, "vector": null, "score": 0}, {"text": "deprecated but actually what what opener", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 248, "tokens": 0, "vector": null, "score": 0}, {"text": "announced in the same blog post is that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 249, "tokens": 0, "vector": null, "score": 0}, {"text": "with the chat API they will also add", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 250, "tokens": 0, "vector": null, "score": 0}, {"text": "login access in the future I assume", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 251, "tokens": 0, "vector": null, "score": 0}, {"text": "again a limited form but I hope they're", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 252, "tokens": 0, "vector": null, "score": 0}, {"text": "definitely up to it that we can maintain", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 253, "tokens": 0, "vector": null, "score": 0}, {"text": "the support because in the end of my air", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 254, "tokens": 0, "vector": null, "score": 0}, {"text": "models are what most people use these", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 255, "tokens": 0, "vector": null, "score": 0}, {"text": "days", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 256, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah sorry it's like jogging my memory I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 257, "tokens": 0, "vector": null, "score": 0}, {"text": "was trying to think of something I'm", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 258, "tokens": 0, "vector": null, "score": 0}, {"text": "just kind of it's so interesting but", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 259, "tokens": 0, "vector": null, "score": 0}, {"text": "like I do remember that you can like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 260, "tokens": 0, "vector": null, "score": 0}, {"text": "highlight the tokens on the API and yeah", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 261, "tokens": 0, "vector": null, "score": 0}, {"text": "obviously the open language models and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 262, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah sorry so so yeah so that kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 263, "tokens": 0, "vector": null, "score": 0}, {"text": "idea of the decoding I think just um I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 264, "tokens": 0, "vector": null, "score": 0}, {"text": "guess the question I wanted to ask you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 265, "tokens": 0, "vector": null, "score": 0}, {"text": "and sorry that took me a while to form", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 266, "tokens": 0, "vector": null, "score": 0}, {"text": "this is just um like it sounds like that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 267, "tokens": 0, "vector": null, "score": 0}, {"text": "alone would be quite a like that would", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 268, "tokens": 0, "vector": null, "score": 0}, {"text": "be a product by itself is how to decode", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 269, "tokens": 0, "vector": null, "score": 0}, {"text": "from a language model do you see that as", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 270, "tokens": 0, "vector": null, "score": 0}, {"text": "like being a a big like the the amount", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 271, "tokens": 0, "vector": null, "score": 0}, {"text": "of algorithms that you can write in that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 272, "tokens": 0, "vector": null, "score": 0}, {"text": "space like we see so much about", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 273, "tokens": 0, "vector": null, "score": 0}, {"text": "inference acceleration whether you're", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 274, "tokens": 0, "vector": null, "score": 0}, {"text": "trying to quantize the weights or you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 275, "tokens": 0, "vector": null, "score": 0}, {"text": "know compress the model with knowledge", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 276, "tokens": 0, "vector": null, "score": 0}, {"text": "distillation or pruning but just that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 277, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of like you know I don't know too", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 278, "tokens": 0, "vector": null, "score": 0}, {"text": "much I know like greed greedy decoding", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 279, "tokens": 0, "vector": null, "score": 0}, {"text": "beam search I think there's like some", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 280, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of contrastive sampling in there", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 281, "tokens": 0, "vector": null, "score": 0}, {"text": "like how how much research is there in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 282, "tokens": 0, "vector": null, "score": 0}, {"text": "that just like how you decode from the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 283, "tokens": 0, "vector": null, "score": 0}, {"text": "language model", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 284, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah so this is lots a lot of research", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 285, "tokens": 0, "vector": null, "score": 0}, {"text": "actually this is an entire um research", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 286, "tokens": 0, "vector": null, "score": 0}, {"text": "field on its own especially kind of in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 287, "tokens": 0, "vector": null, "score": 0}, {"text": "machine translation they use very", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 288, "tokens": 0, "vector": null, "score": 0}, {"text": "sophisticated Advanced versions of beam", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 289, "tokens": 0, "vector": null, "score": 0}, {"text": "search they there's a Monte Carlo based", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 290, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of sampling methods that are coming", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 291, "tokens": 0, "vector": null, "score": 0}, {"text": "out now I think the the core difference", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 292, "tokens": 0, "vector": null, "score": 0}, {"text": "here is obviously decoding on top of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 293, "tokens": 0, "vector": null, "score": 0}, {"text": "language models especially if you have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 294, "tokens": 0, "vector": null, "score": 0}, {"text": "to work around open air restrictions for", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 295, "tokens": 0, "vector": null, "score": 0}, {"text": "instance can be expensive and will also", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 296, "tokens": 0, "vector": null, "score": 0}, {"text": "be slower even though they can lead to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 297, "tokens": 0, "vector": null, "score": 0}, {"text": "um better results and I think most", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 298, "tokens": 0, "vector": null, "score": 0}, {"text": "at least at this stage of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 299, "tokens": 0, "vector": null, "score": 0}, {"text": "um like L&M hacking and practical LM", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 300, "tokens": 0, "vector": null, "score": 0}, {"text": "development most people will just use", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 301, "tokens": 0, "vector": null, "score": 0}, {"text": "arcmics decoding this is fast this is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 302, "tokens": 0, "vector": null, "score": 0}, {"text": "more or less cheap", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 303, "tokens": 0, "vector": null, "score": 0}, {"text": "um but I definitely see lots of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 304, "tokens": 0, "vector": null, "score": 0}, {"text": "potential to apply this in the future of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 305, "tokens": 0, "vector": null, "score": 0}, {"text": "course what will what it will need is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 306, "tokens": 0, "vector": null, "score": 0}, {"text": "actually a library that sort of or lmgl", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 307, "tokens": 0, "vector": null, "score": 0}, {"text": "maybe an ecosystem that actually", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 308, "tokens": 0, "vector": null, "score": 0}, {"text": "implements all these decoders and makes", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 309, "tokens": 0, "vector": null, "score": 0}, {"text": "them accessible to users that want to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 310, "tokens": 0, "vector": null, "score": 0}, {"text": "use them practically because oftentimes", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 311, "tokens": 0, "vector": null, "score": 0}, {"text": "unfortunately you only find them in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 312, "tokens": 0, "vector": null, "score": 0}, {"text": "somewhat esoteric research and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 313, "tokens": 0, "vector": null, "score": 0}, {"text": "repository so this is not", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 314, "tokens": 0, "vector": null, "score": 0}, {"text": "um directly usable for many or many", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 315, "tokens": 0, "vector": null, "score": 0}, {"text": "practical developers so far I mean", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 316, "tokens": 0, "vector": null, "score": 0}, {"text": "overall I see a lot of potential in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 317, "tokens": 0, "vector": null, "score": 0}, {"text": "applying most of this research to to the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 318, "tokens": 0, "vector": null, "score": 0}, {"text": "space that's that's um evolving now", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 319, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I think especially with the if the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 320, "tokens": 0, "vector": null, "score": 0}, {"text": "open source language like just generally", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 321, "tokens": 0, "vector": null, "score": 0}, {"text": "is the cost of inference gets cheaper", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 322, "tokens": 0, "vector": null, "score": 0}, {"text": "and cheaper which seems to be you know", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 323, "tokens": 0, "vector": null, "score": 0}, {"text": "every I feel like every week There's a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 324, "tokens": 0, "vector": null, "score": 0}, {"text": "new open source like I've grown tired of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 325, "tokens": 0, "vector": null, "score": 0}, {"text": "keeping up with it honestly it's so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 326, "tokens": 0, "vector": null, "score": 0}, {"text": "intensive just the news of it but it's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 327, "tokens": 0, "vector": null, "score": 0}, {"text": "like I think I see the two things like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 328, "tokens": 0, "vector": null, "score": 0}, {"text": "earlier I mentioned Flair Flair as you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 329, "tokens": 0, "vector": null, "score": 0}, {"text": "sample the next sentence and if there's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 330, "tokens": 0, "vector": null, "score": 0}, {"text": "a high uncertainty you would then do", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 331, "tokens": 0, "vector": null, "score": 0}, {"text": "another search query to get better", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 332, "tokens": 0, "vector": null, "score": 0}, {"text": "information maybe for that and that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 333, "tokens": 0, "vector": null, "score": 0}, {"text": "obviously with our interest in weviate", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 334, "tokens": 0, "vector": null, "score": 0}, {"text": "and retrieval augmented generation has a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 335, "tokens": 0, "vector": null, "score": 0}, {"text": "huge application but you mentioned Monte", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 336, "tokens": 0, "vector": null, "score": 0}, {"text": "Carlo tree search and there's this other", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 337, "tokens": 0, "vector": null, "score": 0}, {"text": "really exciting uh paper called tree of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 338, "tokens": 0, "vector": null, "score": 0}, {"text": "thoughts where you know you sample these", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 339, "tokens": 0, "vector": null, "score": 0}, {"text": "Pathways maybe you have some kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 340, "tokens": 0, "vector": null, "score": 0}, {"text": "thing that would like cut um cut nodes", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 341, "tokens": 0, "vector": null, "score": 0}, {"text": "and then you know keep sampling and so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 342, "tokens": 0, "vector": null, "score": 0}, {"text": "on but um yeah so and that kind of thing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 343, "tokens": 0, "vector": null, "score": 0}, {"text": "reminds me of like the you know like the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 344, "tokens": 0, "vector": null, "score": 0}, {"text": "alphago that how it had that Monte Carlo", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 345, "tokens": 0, "vector": null, "score": 0}, {"text": "tree serves that kind of look ahead", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 346, "tokens": 0, "vector": null, "score": 0}, {"text": "search how do you see that kind of like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 347, "tokens": 0, "vector": null, "score": 0}, {"text": "look ahead search and language modeling", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 348, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I think this is a really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 349, "tokens": 0, "vector": null, "score": 0}, {"text": "interesting Direction I also see again", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 350, "tokens": 0, "vector": null, "score": 0}, {"text": "coming from programming languages", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 351, "tokens": 0, "vector": null, "score": 0}, {"text": "there's really cool projects that we're", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 352, "tokens": 0, "vector": null, "score": 0}, {"text": "going looking at and maybe hopefully", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 353, "tokens": 0, "vector": null, "score": 0}, {"text": "will find time to eventually do um I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 354, "tokens": 0, "vector": null, "score": 0}, {"text": "think that's cool essentially if you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 355, "tokens": 0, "vector": null, "score": 0}, {"text": "think about these like three or fourths", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 356, "tokens": 0, "vector": null, "score": 0}, {"text": "for instance it's a form of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 357, "tokens": 0, "vector": null, "score": 0}, {"text": "um yeah X search-based programming like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 358, "tokens": 0, "vector": null, "score": 0}, {"text": "you build these reasoning algorithms if", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 359, "tokens": 0, "vector": null, "score": 0}, {"text": "you want to call it that that and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 360, "tokens": 0, "vector": null, "score": 0}, {"text": "they are essentially defined a third", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 361, "tokens": 0, "vector": null, "score": 0}, {"text": "procedure in this tree where you expand", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 362, "tokens": 0, "vector": null, "score": 0}, {"text": "thoughts or like hypothesis and and like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 363, "tokens": 0, "vector": null, "score": 0}, {"text": "forms of reasoning the llm produces and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 364, "tokens": 0, "vector": null, "score": 0}, {"text": "ultimately of of course this this is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 365, "tokens": 0, "vector": null, "score": 0}, {"text": "intuitively it makes a lot of sense that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 366, "tokens": 0, "vector": null, "score": 0}, {"text": "this will actually help um with overall", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 367, "tokens": 0, "vector": null, "score": 0}, {"text": "accuracy and quality although again like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 368, "tokens": 0, "vector": null, "score": 0}, {"text": "I think prerequisite for this is that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 369, "tokens": 0, "vector": null, "score": 0}, {"text": "inference will become much cheaper much", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 370, "tokens": 0, "vector": null, "score": 0}, {"text": "faster and also should run in parallel", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 371, "tokens": 0, "vector": null, "score": 0}, {"text": "of course so you can actually explore", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 372, "tokens": 0, "vector": null, "score": 0}, {"text": "many branches at the same time", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 373, "tokens": 0, "vector": null, "score": 0}, {"text": "um also like ultimately I think the big", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 374, "tokens": 0, "vector": null, "score": 0}, {"text": "advantage of these methods is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 375, "tokens": 0, "vector": null, "score": 0}, {"text": "you can run an llm and if it doesn't", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 376, "tokens": 0, "vector": null, "score": 0}, {"text": "give you the output you expect you can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 377, "tokens": 0, "vector": null, "score": 0}, {"text": "run it again you can sample from an llm", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 378, "tokens": 0, "vector": null, "score": 0}, {"text": "right but this is sort of a never-ending", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 379, "tokens": 0, "vector": null, "score": 0}, {"text": "process like in the end each time could", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 380, "tokens": 0, "vector": null, "score": 0}, {"text": "be the one time that it eventually works", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 381, "tokens": 0, "vector": null, "score": 0}, {"text": "out but there's no guarantee so um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 382, "tokens": 0, "vector": null, "score": 0}, {"text": "ultimately what you actually want is the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 383, "tokens": 0, "vector": null, "score": 0}, {"text": "power of l m is this rate this this um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 384, "tokens": 0, "vector": null, "score": 0}, {"text": "ability to sample but also a form of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 385, "tokens": 0, "vector": null, "score": 0}, {"text": "combinatorial search through the space", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 386, "tokens": 0, "vector": null, "score": 0}, {"text": "of possible answers so that you get some", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 387, "tokens": 0, "vector": null, "score": 0}, {"text": "guarantee that eventually you will find", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 388, "tokens": 0, "vector": null, "score": 0}, {"text": "some model some solution to the problem", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 389, "tokens": 0, "vector": null, "score": 0}, {"text": "that you're looking for and um I think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 390, "tokens": 0, "vector": null, "score": 0}, {"text": "there's cool hybrid solutions that you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 391, "tokens": 0, "vector": null, "score": 0}, {"text": "get to build in the space and I see lots", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 392, "tokens": 0, "vector": null, "score": 0}, {"text": "of potential area", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 393, "tokens": 0, "vector": null, "score": 0}, {"text": "hmm", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 394, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah what you're saying is really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 395, "tokens": 0, "vector": null, "score": 0}, {"text": "inspiring just I think just generally", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 396, "tokens": 0, "vector": null, "score": 0}, {"text": "this is like connecting like model based", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 397, "tokens": 0, "vector": null, "score": 0}, {"text": "reinforcement learning where the agent", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 398, "tokens": 0, "vector": null, "score": 0}, {"text": "has like a model of its environment so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 399, "tokens": 0, "vector": null, "score": 0}, {"text": "it can simulate you know action", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 400, "tokens": 0, "vector": null, "score": 0}, {"text": "trajectories and I guess there's all", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 401, "tokens": 0, "vector": null, "score": 0}, {"text": "sorts of like exploring exploiting that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 402, "tokens": 0, "vector": null, "score": 0}, {"text": "you could do even within traversing your", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 403, "tokens": 0, "vector": null, "score": 0}, {"text": "own world model right like usually I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 404, "tokens": 0, "vector": null, "score": 0}, {"text": "think in reinforce and learning you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 405, "tokens": 0, "vector": null, "score": 0}, {"text": "think of explore exploit is like uh", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 406, "tokens": 0, "vector": null, "score": 0}, {"text": "strategies you should take when", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 407, "tokens": 0, "vector": null, "score": 0}, {"text": "interacting with your environment I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 408, "tokens": 0, "vector": null, "score": 0}, {"text": "think there's like um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 409, "tokens": 0, "vector": null, "score": 0}, {"text": "uh I don't remember the name of the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 410, "tokens": 0, "vector": null, "score": 0}, {"text": "paper but something where you know", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 411, "tokens": 0, "vector": null, "score": 0}, {"text": "there's like intrinsic motivation where", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 412, "tokens": 0, "vector": null, "score": 0}, {"text": "the the desire of the exploration is to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 413, "tokens": 0, "vector": null, "score": 0}, {"text": "strengthen the world model and then this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 414, "tokens": 0, "vector": null, "score": 0}, {"text": "language model is the way it can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 415, "tokens": 0, "vector": null, "score": 0}, {"text": "simulate you know different trajectories", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 416, "tokens": 0, "vector": null, "score": 0}, {"text": "it's also fascinating but so yeah so I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 417, "tokens": 0, "vector": null, "score": 0}, {"text": "wanted to kind of definitely touch on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 418, "tokens": 0, "vector": null, "score": 0}, {"text": "that because I think when I first looked", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 419, "tokens": 0, "vector": null, "score": 0}, {"text": "at lmql seeing the ARG Max I imagined", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 420, "tokens": 0, "vector": null, "score": 0}, {"text": "people listening who are looking into", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 421, "tokens": 0, "vector": null, "score": 0}, {"text": "lnql that might be one of the newer", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 422, "tokens": 0, "vector": null, "score": 0}, {"text": "things to look into and then but let's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 423, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of I want to talk also just about", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 424, "tokens": 0, "vector": null, "score": 0}, {"text": "broadly how lmql connects L alums with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 425, "tokens": 0, "vector": null, "score": 0}, {"text": "tools and sort of like generally your", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 426, "tokens": 0, "vector": null, "score": 0}, {"text": "perspective on you know that kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 427, "tokens": 0, "vector": null, "score": 0}, {"text": "tool use concept", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 428, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah definitely so this big priority or", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 429, "tokens": 0, "vector": null, "score": 0}, {"text": "I mean in the end our whole philosophy", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 430, "tokens": 0, "vector": null, "score": 0}, {"text": "is to say well can we sort of interweave", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 431, "tokens": 0, "vector": null, "score": 0}, {"text": "just general programming language like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 432, "tokens": 0, "vector": null, "score": 0}, {"text": "and python in our case like lmgl is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 433, "tokens": 0, "vector": null, "score": 0}, {"text": "essentially a superset of python you can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 434, "tokens": 0, "vector": null, "score": 0}, {"text": "just write whatever you would write in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 435, "tokens": 0, "vector": null, "score": 0}, {"text": "Python with the ability to to ask or", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 436, "tokens": 0, "vector": null, "score": 0}, {"text": "like query a language model along the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 437, "tokens": 0, "vector": null, "score": 0}, {"text": "way and during execution and this means", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 438, "tokens": 0, "vector": null, "score": 0}, {"text": "you can actually go forth and back with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 439, "tokens": 0, "vector": null, "score": 0}, {"text": "a language model called Tools in between", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 440, "tokens": 0, "vector": null, "score": 0}, {"text": "called external retrieval systems like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 441, "tokens": 0, "vector": null, "score": 0}, {"text": "your vector database polar information", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 442, "tokens": 0, "vector": null, "score": 0}, {"text": "and this enables a very seamless and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 443, "tokens": 0, "vector": null, "score": 0}, {"text": "very close coupling of of llm prompting", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 444, "tokens": 0, "vector": null, "score": 0}, {"text": "getting some results and possibly a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 445, "tokens": 0, "vector": null, "score": 0}, {"text": "structured form executing some core as", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 446, "tokens": 0, "vector": null, "score": 0}, {"text": "an external tool and then going back to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 447, "tokens": 0, "vector": null, "score": 0}, {"text": "the model so so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 448, "tokens": 0, "vector": null, "score": 0}, {"text": "um from that perspective this is really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 449, "tokens": 0, "vector": null, "score": 0}, {"text": "core DNA for us like just the whole idea", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 450, "tokens": 0, "vector": null, "score": 0}, {"text": "we want to essentially bring this from", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 451, "tokens": 0, "vector": null, "score": 0}, {"text": "programmability and use of external", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 452, "tokens": 0, "vector": null, "score": 0}, {"text": "tools to the prompting itself", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 453, "tokens": 0, "vector": null, "score": 0}, {"text": "um looking a bit into the future we also", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 454, "tokens": 0, "vector": null, "score": 0}, {"text": "have a couple of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 455, "tokens": 0, "vector": null, "score": 0}, {"text": "features that were assumedly merged and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 456, "tokens": 0, "vector": null, "score": 0}, {"text": "Upstream which will be", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 457, "tokens": 0, "vector": null, "score": 0}, {"text": "enabling of much more easily so so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 458, "tokens": 0, "vector": null, "score": 0}, {"text": "essentially there will be a seamless way", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 459, "tokens": 0, "vector": null, "score": 0}, {"text": "to just expose some functions to the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 460, "tokens": 0, "vector": null, "score": 0}, {"text": "model and it will be able to call them", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 461, "tokens": 0, "vector": null, "score": 0}, {"text": "along the way without the need for you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 462, "tokens": 0, "vector": null, "score": 0}, {"text": "to specify a specific", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 463, "tokens": 0, "vector": null, "score": 0}, {"text": "um protocol of how the model calls the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 464, "tokens": 0, "vector": null, "score": 0}, {"text": "function and how results are fed back so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 465, "tokens": 0, "vector": null, "score": 0}, {"text": "so definitely a direction we are also", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 466, "tokens": 0, "vector": null, "score": 0}, {"text": "actively exploring", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 467, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I'd love to just kind of like that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 468, "tokens": 0, "vector": null, "score": 0}, {"text": "way of how you expose functions to the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 469, "tokens": 0, "vector": null, "score": 0}, {"text": "language model to get a little more", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 470, "tokens": 0, "vector": null, "score": 0}, {"text": "clarity on that because I see you know", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 471, "tokens": 0, "vector": null, "score": 0}, {"text": "open AI funks I think they're calling it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 472, "tokens": 0, "vector": null, "score": 0}, {"text": "or you know or it's like the Json", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 473, "tokens": 0, "vector": null, "score": 0}, {"text": "dictionary kind of syntax I see in lmql", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 474, "tokens": 0, "vector": null, "score": 0}, {"text": "you it looks like you know it it's like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 475, "tokens": 0, "vector": null, "score": 0}, {"text": "a hybrid between Python and SQL and sort", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 476, "tokens": 0, "vector": null, "score": 0}, {"text": "of how it looks and there's like you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 477, "tokens": 0, "vector": null, "score": 0}, {"text": "know death where you define like the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 478, "tokens": 0, "vector": null, "score": 0}, {"text": "calculator and stuff so so yeah I guess", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 479, "tokens": 0, "vector": null, "score": 0}, {"text": "like um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 480, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah like the design of how you're going", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 481, "tokens": 0, "vector": null, "score": 0}, {"text": "to prompt the interface of functions", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 482, "tokens": 0, "vector": null, "score": 0}, {"text": "towards to large language models and I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 483, "tokens": 0, "vector": null, "score": 0}, {"text": "think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 484, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I hope that's not to like not", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 485, "tokens": 0, "vector": null, "score": 0}, {"text": "specific enough of a question I guess", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 486, "tokens": 0, "vector": null, "score": 0}, {"text": "like um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 487, "tokens": 0, "vector": null, "score": 0}, {"text": "there's something interesting as well", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 488, "tokens": 0, "vector": null, "score": 0}, {"text": "about uh there's another paper from Omar", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 489, "tokens": 0, "vector": null, "score": 0}, {"text": "katab and others called demonstrate", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 490, "tokens": 0, "vector": null, "score": 0}, {"text": "search predict where they would also", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 491, "tokens": 0, "vector": null, "score": 0}, {"text": "couple examples of how to use two tools", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 492, "tokens": 0, "vector": null, "score": 0}, {"text": "or tasks broadly where you add kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 493, "tokens": 0, "vector": null, "score": 0}, {"text": "examples into this sort of thinking as", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 494, "tokens": 0, "vector": null, "score": 0}, {"text": "well", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 495, "tokens": 0, "vector": null, "score": 0}, {"text": "so yeah hopefully that sets the stage of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 496, "tokens": 0, "vector": null, "score": 0}, {"text": "um yeah I mean", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 497, "tokens": 0, "vector": null, "score": 0}, {"text": "that like a very good I'm starting with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 498, "tokens": 0, "vector": null, "score": 0}, {"text": "the function chords this is obviously a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 499, "tokens": 0, "vector": null, "score": 0}, {"text": "very interesting um thing that they", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 500, "tokens": 0, "vector": null, "score": 0}, {"text": "enable now", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 501, "tokens": 0, "vector": null, "score": 0}, {"text": "um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 502, "tokens": 0, "vector": null, "score": 0}, {"text": "we do intend to implement this although", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 503, "tokens": 0, "vector": null, "score": 0}, {"text": "not really just wrapping their API we", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 504, "tokens": 0, "vector": null, "score": 0}, {"text": "actually what our goal of lmql in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 505, "tokens": 0, "vector": null, "score": 0}, {"text": "general is to not be model specific so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 506, "tokens": 0, "vector": null, "score": 0}, {"text": "we intend to implement something very", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 507, "tokens": 0, "vector": null, "score": 0}, {"text": "similar that essentially works like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 508, "tokens": 0, "vector": null, "score": 0}, {"text": "function calls a bit more seamless", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 509, "tokens": 0, "vector": null, "score": 0}, {"text": "because we're already in Python so we", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 510, "tokens": 0, "vector": null, "score": 0}, {"text": "can already you just pass the function", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 511, "tokens": 0, "vector": null, "score": 0}, {"text": "you don't need to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 512, "tokens": 0, "vector": null, "score": 0}, {"text": "um bother with Json schemas and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 513, "tokens": 0, "vector": null, "score": 0}, {"text": "everything", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 514, "tokens": 0, "vector": null, "score": 0}, {"text": "um but we actually want to make this not", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 515, "tokens": 0, "vector": null, "score": 0}, {"text": "augmented specific so this will also", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 516, "tokens": 0, "vector": null, "score": 0}, {"text": "just work the same way with open source", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 517, "tokens": 0, "vector": null, "score": 0}, {"text": "models basically abstracting whatever", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 518, "tokens": 0, "vector": null, "score": 0}, {"text": "you need to do on the back end to make", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 519, "tokens": 0, "vector": null, "score": 0}, {"text": "this work", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 520, "tokens": 0, "vector": null, "score": 0}, {"text": "um also like another detail that I'm not", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 521, "tokens": 0, "vector": null, "score": 0}, {"text": "sure many people", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 522, "tokens": 0, "vector": null, "score": 0}, {"text": "um know about is that actually the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 523, "tokens": 0, "vector": null, "score": 0}, {"text": "function calling of opmaya is not", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 524, "tokens": 0, "vector": null, "score": 0}, {"text": "strictly robust in a sense that it may", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 525, "tokens": 0, "vector": null, "score": 0}, {"text": "still hallucinate the format it does not", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 526, "tokens": 0, "vector": null, "score": 0}, {"text": "strictly adhere to the to the schema all", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 527, "tokens": 0, "vector": null, "score": 0}, {"text": "the time because ultimately it's based", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 528, "tokens": 0, "vector": null, "score": 0}, {"text": "on fine tuning not actually on on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 529, "tokens": 0, "vector": null, "score": 0}, {"text": "Strictly forcing the model to fit to the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 530, "tokens": 0, "vector": null, "score": 0}, {"text": "to the schema and the schema so um yeah", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 531, "tokens": 0, "vector": null, "score": 0}, {"text": "our standards are more in the space of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 532, "tokens": 0, "vector": null, "score": 0}, {"text": "being vendor agnostic", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 533, "tokens": 0, "vector": null, "score": 0}, {"text": "um and actually providing these strong", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 534, "tokens": 0, "vector": null, "score": 0}, {"text": "guarantees because we can do this with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 535, "tokens": 0, "vector": null, "score": 0}, {"text": "our constraint decoding engine", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 536, "tokens": 0, "vector": null, "score": 0}, {"text": "can we assume that the constrained", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 537, "tokens": 0, "vector": null, "score": 0}, {"text": "decoding engine I've seen like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 538, "tokens": 0, "vector": null, "score": 0}, {"text": "structured output parser from Lang chain", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 539, "tokens": 0, "vector": null, "score": 0}, {"text": "and I'm you know familiar with this of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 540, "tokens": 0, "vector": null, "score": 0}, {"text": "myself where you try to have it like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 541, "tokens": 0, "vector": null, "score": 0}, {"text": "output a Json dictionary and then your", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 542, "tokens": 0, "vector": null, "score": 0}, {"text": "the idea is you're going to parse the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 543, "tokens": 0, "vector": null, "score": 0}, {"text": "keys in the output from the language", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 544, "tokens": 0, "vector": null, "score": 0}, {"text": "model and it's like so important that it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 545, "tokens": 0, "vector": null, "score": 0}, {"text": "um you know followed the rules sort of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 546, "tokens": 0, "vector": null, "score": 0}, {"text": "so is this just kind of like um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 547, "tokens": 0, "vector": null, "score": 0}, {"text": "you know like if it's doesn't output and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 548, "tokens": 0, "vector": null, "score": 0}, {"text": "the square angular bracket after search", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 549, "tokens": 0, "vector": null, "score": 0}, {"text": "you reject it like what are the ideas", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 550, "tokens": 0, "vector": null, "score": 0}, {"text": "behind constrained sampling", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 551, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah so I think this is one of the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 552, "tokens": 0, "vector": null, "score": 0}, {"text": "biggest issues with if you think about", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 553, "tokens": 0, "vector": null, "score": 0}, {"text": "Ellen Amsterdam programmability", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 554, "tokens": 0, "vector": null, "score": 0}, {"text": "perspective this is one of the biggest", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 555, "tokens": 0, "vector": null, "score": 0}, {"text": "issues like in regular programs you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 556, "tokens": 0, "vector": null, "score": 0}, {"text": "write a function as you know whatever", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 557, "tokens": 0, "vector": null, "score": 0}, {"text": "you call this function it will do what", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 558, "tokens": 0, "vector": null, "score": 0}, {"text": "you wrote down like typically these are", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 559, "tokens": 0, "vector": null, "score": 0}, {"text": "not", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 560, "tokens": 0, "vector": null, "score": 0}, {"text": "um randomized in behavior", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 561, "tokens": 0, "vector": null, "score": 0}, {"text": "um but with llms it doesn't quite work", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 562, "tokens": 0, "vector": null, "score": 0}, {"text": "this way like all the examples you used", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 563, "tokens": 0, "vector": null, "score": 0}, {"text": "during development could be fine but", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 564, "tokens": 0, "vector": null, "score": 0}, {"text": "then um at in practice when some user", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 565, "tokens": 0, "vector": null, "score": 0}, {"text": "uses this function indirectly because", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 566, "tokens": 0, "vector": null, "score": 0}, {"text": "they use your product", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 567, "tokens": 0, "vector": null, "score": 0}, {"text": "this may just fail for for arbitrary", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 568, "tokens": 0, "vector": null, "score": 0}, {"text": "reasons like there's no it's really hard", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 569, "tokens": 0, "vector": null, "score": 0}, {"text": "to get a grasp on why they failed", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 570, "tokens": 0, "vector": null, "score": 0}, {"text": "sometimes", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 571, "tokens": 0, "vector": null, "score": 0}, {"text": "um and this makes programming actually", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 572, "tokens": 0, "vector": null, "score": 0}, {"text": "really hard right this means functions", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 573, "tokens": 0, "vector": null, "score": 0}, {"text": "fail randomly and not just in a they", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 574, "tokens": 0, "vector": null, "score": 0}, {"text": "produce the wrong output sense but they", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 575, "tokens": 0, "vector": null, "score": 0}, {"text": "don't even produce output in the right", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 576, "tokens": 0, "vector": null, "score": 0}, {"text": "format like this is sort of the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 577, "tokens": 0, "vector": null, "score": 0}, {"text": "interface robustness is not even given", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 578, "tokens": 0, "vector": null, "score": 0}, {"text": "so so I think and this is one of the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 579, "tokens": 0, "vector": null, "score": 0}, {"text": "core challenges I still see with llm", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 580, "tokens": 0, "vector": null, "score": 0}, {"text": "programming and also what we try to work", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 581, "tokens": 0, "vector": null, "score": 0}, {"text": "on is make this interface 100 and even", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 582, "tokens": 0, "vector": null, "score": 0}, {"text": "if the result doesn't end up being", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 583, "tokens": 0, "vector": null, "score": 0}, {"text": "correct this you can deal with but if", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 584, "tokens": 0, "vector": null, "score": 0}, {"text": "the format does is not correct you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 585, "tokens": 0, "vector": null, "score": 0}, {"text": "essentially get", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 586, "tokens": 0, "vector": null, "score": 0}, {"text": "the equivalent of null Point exceptions", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 587, "tokens": 0, "vector": null, "score": 0}, {"text": "in your language and this will typically", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 588, "tokens": 0, "vector": null, "score": 0}, {"text": "crash your program unless you handle it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 589, "tokens": 0, "vector": null, "score": 0}, {"text": "somehow", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 590, "tokens": 0, "vector": null, "score": 0}, {"text": "um very reflexively but this is also", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 591, "tokens": 0, "vector": null, "score": 0}, {"text": "really difficult to work with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 592, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I love that you just named that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 593, "tokens": 0, "vector": null, "score": 0}, {"text": "interface robustness I hadn't heard that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 594, "tokens": 0, "vector": null, "score": 0}, {"text": "particular phrase and I think that just", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 595, "tokens": 0, "vector": null, "score": 0}, {"text": "Nails it right on the head I'm familiar", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 596, "tokens": 0, "vector": null, "score": 0}, {"text": "with robustness and deep learning as", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 597, "tokens": 0, "vector": null, "score": 0}, {"text": "well like you know some of the stuff Dan", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 598, "tokens": 0, "vector": null, "score": 0}, {"text": "Hendricks did with um like image", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 599, "tokens": 0, "vector": null, "score": 0}, {"text": "classifiers where he would show that you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 600, "tokens": 0, "vector": null, "score": 0}, {"text": "know if you increase the brightness or", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 601, "tokens": 0, "vector": null, "score": 0}, {"text": "make the image snowy all of a sudden", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 602, "tokens": 0, "vector": null, "score": 0}, {"text": "that imagenet test set accuracy goes", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 603, "tokens": 0, "vector": null, "score": 0}, {"text": "from like 95 to like 40 accuracy and you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 604, "tokens": 0, "vector": null, "score": 0}, {"text": "know obviously that kind of thing is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 605, "tokens": 0, "vector": null, "score": 0}, {"text": "manifested in language models as well", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 606, "tokens": 0, "vector": null, "score": 0}, {"text": "and so prompting it to use a tool you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 607, "tokens": 0, "vector": null, "score": 0}, {"text": "know could create that kind of thing um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 608, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah it's a really fascinating kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 609, "tokens": 0, "vector": null, "score": 0}, {"text": "thing is just forcing it to use the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 610, "tokens": 0, "vector": null, "score": 0}, {"text": "tools and I guess kind of one more thing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 611, "tokens": 0, "vector": null, "score": 0}, {"text": "before moving on topics I wanted to get", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 612, "tokens": 0, "vector": null, "score": 0}, {"text": "your opinion on earlier I mentioned", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 613, "tokens": 0, "vector": null, "score": 0}, {"text": "gorilla gorillas like llm fine-tuned to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 614, "tokens": 0, "vector": null, "score": 0}, {"text": "use particular tools like you know", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 615, "tokens": 0, "vector": null, "score": 0}, {"text": "GitHub CLI to make pull requests and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 616, "tokens": 0, "vector": null, "score": 0}, {"text": "stuff and I've been thinking really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 617, "tokens": 0, "vector": null, "score": 0}, {"text": "heavily about you know with weaviate you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 618, "tokens": 0, "vector": null, "score": 0}, {"text": "know we V8 you can see weaviate as a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 619, "tokens": 0, "vector": null, "score": 0}, {"text": "tool", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 620, "tokens": 0, "vector": null, "score": 0}, {"text": "I see kind of two schools of thought", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 621, "tokens": 0, "vector": null, "score": 0}, {"text": "we're thinking about this you can either", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 622, "tokens": 0, "vector": null, "score": 0}, {"text": "just think about retrieval augmented", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 623, "tokens": 0, "vector": null, "score": 0}, {"text": "generation in a pretty blind way where", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 624, "tokens": 0, "vector": null, "score": 0}, {"text": "you the vector search engine just gives", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 625, "tokens": 0, "vector": null, "score": 0}, {"text": "you context blindly sort of and then you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 626, "tokens": 0, "vector": null, "score": 0}, {"text": "just put that into the input or you can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 627, "tokens": 0, "vector": null, "score": 0}, {"text": "think of it as a tool where you're", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 628, "tokens": 0, "vector": null, "score": 0}, {"text": "deciding like which of the classes", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 629, "tokens": 0, "vector": null, "score": 0}, {"text": "because it's you know like vector", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 630, "tokens": 0, "vector": null, "score": 0}, {"text": "database like you have like different", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 631, "tokens": 0, "vector": null, "score": 0}, {"text": "classes for your data you like which of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 632, "tokens": 0, "vector": null, "score": 0}, {"text": "these classes do I want to search", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 633, "tokens": 0, "vector": null, "score": 0}, {"text": "through which of the properties do I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 634, "tokens": 0, "vector": null, "score": 0}, {"text": "want to access or you know maybe even", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 635, "tokens": 0, "vector": null, "score": 0}, {"text": "formulating your queries this one's a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 636, "tokens": 0, "vector": null, "score": 0}, {"text": "little hand wavy but maybe the idea of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 637, "tokens": 0, "vector": null, "score": 0}, {"text": "um you have a particular query that you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 638, "tokens": 0, "vector": null, "score": 0}, {"text": "would say oh I want to wait bm25 higher", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 639, "tokens": 0, "vector": null, "score": 0}, {"text": "than Vector search for this one or I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 640, "tokens": 0, "vector": null, "score": 0}, {"text": "want to re-rank it with a cross encoder", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 641, "tokens": 0, "vector": null, "score": 0}, {"text": "so like generally kind of like the the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 642, "tokens": 0, "vector": null, "score": 0}, {"text": "tool of levia like using the API so I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 643, "tokens": 0, "vector": null, "score": 0}, {"text": "think heavily about whether we should", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 644, "tokens": 0, "vector": null, "score": 0}, {"text": "train a language model that you know is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 645, "tokens": 0, "vector": null, "score": 0}, {"text": "like that glue between", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 646, "tokens": 0, "vector": null, "score": 0}, {"text": "using Eva so so I guess the the question", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 647, "tokens": 0, "vector": null, "score": 0}, {"text": "is like how do you see these kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 648, "tokens": 0, "vector": null, "score": 0}, {"text": "language models fine-tuned to a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 649, "tokens": 0, "vector": null, "score": 0}, {"text": "particular tool whether that's weviate", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 650, "tokens": 0, "vector": null, "score": 0}, {"text": "or Wolfram Alpha or you know what have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 651, "tokens": 0, "vector": null, "score": 0}, {"text": "you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 652, "tokens": 0, "vector": null, "score": 0}, {"text": "I mean fundamental is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 653, "tokens": 0, "vector": null, "score": 0}, {"text": "I mean it's very clear that fine tuning", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 654, "tokens": 0, "vector": null, "score": 0}, {"text": "will help the model to adhere to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 655, "tokens": 0, "vector": null, "score": 0}, {"text": "whatever you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 656, "tokens": 0, "vector": null, "score": 0}, {"text": "wanting it to do", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 657, "tokens": 0, "vector": null, "score": 0}, {"text": "um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 658, "tokens": 0, "vector": null, "score": 0}, {"text": "coming back to rent a faith robust and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 659, "tokens": 0, "vector": null, "score": 0}, {"text": "fine tuning is just the same we'll just", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 660, "tokens": 0, "vector": null, "score": 0}, {"text": "fail in the same way maybe at a lower", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 661, "tokens": 0, "vector": null, "score": 0}, {"text": "rate but I guess the problem here is if", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 662, "tokens": 0, "vector": null, "score": 0}, {"text": "you have more than one call and you have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 663, "tokens": 0, "vector": null, "score": 0}, {"text": "a low percentage of each call failing in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 664, "tokens": 0, "vector": null, "score": 0}, {"text": "some you will have actually a High um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 665, "tokens": 0, "vector": null, "score": 0}, {"text": "high probability of things failing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 666, "tokens": 0, "vector": null, "score": 0}, {"text": "like of course you want to um you want", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 667, "tokens": 0, "vector": null, "score": 0}, {"text": "the language models to actually be", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 668, "tokens": 0, "vector": null, "score": 0}, {"text": "finding to exactly what you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 669, "tokens": 0, "vector": null, "score": 0}, {"text": "needed to do", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 670, "tokens": 0, "vector": null, "score": 0}, {"text": "on the other hand what I hear and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 671, "tokens": 0, "vector": null, "score": 0}, {"text": "whatever I think is the most one of the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 672, "tokens": 0, "vector": null, "score": 0}, {"text": "most um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 673, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah fun aspects about elements and also", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 674, "tokens": 0, "vector": null, "score": 0}, {"text": "like in terms of inner economical terms", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 675, "tokens": 0, "vector": null, "score": 0}, {"text": "the fact that you don't have to train", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 676, "tokens": 0, "vector": null, "score": 0}, {"text": "them is actually one of the biggest", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 677, "tokens": 0, "vector": null, "score": 0}, {"text": "advantages and biggest strengths right", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 678, "tokens": 0, "vector": null, "score": 0}, {"text": "reactional purpose multi multi-task", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 679, "tokens": 0, "vector": null, "score": 0}, {"text": "listeners and you don't have to train", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 680, "tokens": 0, "vector": null, "score": 0}, {"text": "them meaning you don't have to invest", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 681, "tokens": 0, "vector": null, "score": 0}, {"text": "the effort and time to build data sets", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 682, "tokens": 0, "vector": null, "score": 0}, {"text": "and in some situations this may not even", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 683, "tokens": 0, "vector": null, "score": 0}, {"text": "be possible like it's sometimes really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 684, "tokens": 0, "vector": null, "score": 0}, {"text": "hard to construct these kind of data", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 685, "tokens": 0, "vector": null, "score": 0}, {"text": "sets", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 686, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I guess like is a solution to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 687, "tokens": 0, "vector": null, "score": 0}, {"text": "interface robustness just you take the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 688, "tokens": 0, "vector": null, "score": 0}, {"text": "output and then you say", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 689, "tokens": 0, "vector": null, "score": 0}, {"text": "template it and say did you follow the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 690, "tokens": 0, "vector": null, "score": 0}, {"text": "instructions all right and then see if", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 691, "tokens": 0, "vector": null, "score": 0}, {"text": "it revises output right isn't that kind", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 692, "tokens": 0, "vector": null, "score": 0}, {"text": "of like the um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 693, "tokens": 0, "vector": null, "score": 0}, {"text": "they used to have an uh there was a name", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 694, "tokens": 0, "vector": null, "score": 0}, {"text": "for that kind of prompting I think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 695, "tokens": 0, "vector": null, "score": 0}, {"text": "reflection spelled funny like with an X", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 696, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I mean just one way to do it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 697, "tokens": 0, "vector": null, "score": 0}, {"text": "if you assume some", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 698, "tokens": 0, "vector": null, "score": 0}, {"text": "independent error rate eventually you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 699, "tokens": 0, "vector": null, "score": 0}, {"text": "will get there", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 700, "tokens": 0, "vector": null, "score": 0}, {"text": "and practice usually there's no", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 701, "tokens": 0, "vector": null, "score": 0}, {"text": "guarantee and if something is wrong it's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 702, "tokens": 0, "vector": null, "score": 0}, {"text": "typically because there's some", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 703, "tokens": 0, "vector": null, "score": 0}, {"text": "weak spot in the model and even if you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 704, "tokens": 0, "vector": null, "score": 0}, {"text": "make it revise its output it may still", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 705, "tokens": 0, "vector": null, "score": 0}, {"text": "have somehow some weird internal state", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 706, "tokens": 0, "vector": null, "score": 0}, {"text": "that makes it repeatedly make the wrong", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 707, "tokens": 0, "vector": null, "score": 0}, {"text": "do the wrong thing right", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 708, "tokens": 0, "vector": null, "score": 0}, {"text": "now concretely how we implement this and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 709, "tokens": 0, "vector": null, "score": 0}, {"text": "also the fundamental technique behind us", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 710, "tokens": 0, "vector": null, "score": 0}, {"text": "that other Frameworks start to pick up", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 711, "tokens": 0, "vector": null, "score": 0}, {"text": "on also is the idea of constraint", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 712, "tokens": 0, "vector": null, "score": 0}, {"text": "decoding meaning", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 713, "tokens": 0, "vector": null, "score": 0}, {"text": "you don't even allow the model in terms", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 714, "tokens": 0, "vector": null, "score": 0}, {"text": "of interface robustness to produce", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 715, "tokens": 0, "vector": null, "score": 0}, {"text": "something that would be illegal you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 716, "tokens": 0, "vector": null, "score": 0}, {"text": "force it to produce it it's a bit like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 717, "tokens": 0, "vector": null, "score": 0}, {"text": "like one very traditional way of doing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 718, "tokens": 0, "vector": null, "score": 0}, {"text": "this is just hooking up parser and say", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 719, "tokens": 0, "vector": null, "score": 0}, {"text": "you can only produce tokens that are", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 720, "tokens": 0, "vector": null, "score": 0}, {"text": "actually", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 721, "tokens": 0, "vector": null, "score": 0}, {"text": "um allowed next according to my grammar", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 722, "tokens": 0, "vector": null, "score": 0}, {"text": "and this makes the make sure that the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 723, "tokens": 0, "vector": null, "score": 0}, {"text": "model will only produce outputs that are", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 724, "tokens": 0, "vector": null, "score": 0}, {"text": "consistent with your grammar and this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 725, "tokens": 0, "vector": null, "score": 0}, {"text": "means you can pass this robustly and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 726, "tokens": 0, "vector": null, "score": 0}, {"text": "there will never be a situation where", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 727, "tokens": 0, "vector": null, "score": 0}, {"text": "you will end up with an output that you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 728, "tokens": 0, "vector": null, "score": 0}, {"text": "can't parse in the sense so essentially", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 729, "tokens": 0, "vector": null, "score": 0}, {"text": "you force the model strictly to adhere", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 730, "tokens": 0, "vector": null, "score": 0}, {"text": "to a certain for output format and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 731, "tokens": 0, "vector": null, "score": 0}, {"text": "there's no need to revise or even", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 732, "tokens": 0, "vector": null, "score": 0}, {"text": "um depending on how you do it definitely", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 733, "tokens": 0, "vector": null, "score": 0}, {"text": "even not even a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 734, "tokens": 0, "vector": null, "score": 0}, {"text": "um you don't even need to tell the model", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 735, "tokens": 0, "vector": null, "score": 0}, {"text": "about this like you can just restrict it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 736, "tokens": 0, "vector": null, "score": 0}, {"text": "strictly restrict its output", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 737, "tokens": 0, "vector": null, "score": 0}, {"text": "distribution to only fit in this format", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 738, "tokens": 0, "vector": null, "score": 0}, {"text": "that you provide", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 739, "tokens": 0, "vector": null, "score": 0}, {"text": "it's making me think of like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 740, "tokens": 0, "vector": null, "score": 0}, {"text": "um you know like automata Theory and all", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 741, "tokens": 0, "vector": null, "score": 0}, {"text": "that kind of um like grammar regular", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 742, "tokens": 0, "vector": null, "score": 0}, {"text": "expression that kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 743, "tokens": 0, "vector": null, "score": 0}, {"text": "because I'm just like kind of you know", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 744, "tokens": 0, "vector": null, "score": 0}, {"text": "getting the story of Luca interest in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 745, "tokens": 0, "vector": null, "score": 0}, {"text": "programming languages and now it's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 746, "tokens": 0, "vector": null, "score": 0}, {"text": "taking it in this kind of Chomsky like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 747, "tokens": 0, "vector": null, "score": 0}, {"text": "um perspective so you think about it and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 748, "tokens": 0, "vector": null, "score": 0}, {"text": "can you help me kind of understand", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 749, "tokens": 0, "vector": null, "score": 0}, {"text": "that perspective of like formal", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 750, "tokens": 0, "vector": null, "score": 0}, {"text": "languages a little further and how that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 751, "tokens": 0, "vector": null, "score": 0}, {"text": "would Inspire this design", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 752, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah so actually the parallels to a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 753, "tokens": 0, "vector": null, "score": 0}, {"text": "parasu and also like trumpskin and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 754, "tokens": 0, "vector": null, "score": 0}, {"text": "language theory is is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 755, "tokens": 0, "vector": null, "score": 0}, {"text": "um very clear and and also in in terms", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 756, "tokens": 0, "vector": null, "score": 0}, {"text": "of expressiveness you can very much um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 757, "tokens": 0, "vector": null, "score": 0}, {"text": "like anchor it there like if if you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 758, "tokens": 0, "vector": null, "score": 0}, {"text": "think about from a person's perspective", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 759, "tokens": 0, "vector": null, "score": 0}, {"text": "it is it is essentially a dynamically", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 760, "tokens": 0, "vector": null, "score": 0}, {"text": "constructed parser that's hooked up to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 761, "tokens": 0, "vector": null, "score": 0}, {"text": "your language model and that will make", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 762, "tokens": 0, "vector": null, "score": 0}, {"text": "sure that the that or the language model", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 763, "tokens": 0, "vector": null, "score": 0}, {"text": "can only use the follow set as you would", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 764, "tokens": 0, "vector": null, "score": 0}, {"text": "name it in in parser terms", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 765, "tokens": 0, "vector": null, "score": 0}, {"text": "um of tokens that will can actually", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 766, "tokens": 0, "vector": null, "score": 0}, {"text": "follow at the current position it's a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 767, "tokens": 0, "vector": null, "score": 0}, {"text": "bit like when you write code in your IDE", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 768, "tokens": 0, "vector": null, "score": 0}, {"text": "and you open code assist it will only", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 769, "tokens": 0, "vector": null, "score": 0}, {"text": "allow you to insert identifiers and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 770, "tokens": 0, "vector": null, "score": 0}, {"text": "keywords that actually are legal at this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 771, "tokens": 0, "vector": null, "score": 0}, {"text": "position in a program", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 772, "tokens": 0, "vector": null, "score": 0}, {"text": "hmm", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 773, "tokens": 0, "vector": null, "score": 0}, {"text": "well yeah so that was an awesome tour I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 774, "tokens": 0, "vector": null, "score": 0}, {"text": "just gained a ton of understanding of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 775, "tokens": 0, "vector": null, "score": 0}, {"text": "what a what an llm programming language", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 776, "tokens": 0, "vector": null, "score": 0}, {"text": "would mean especially in this context of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 777, "tokens": 0, "vector": null, "score": 0}, {"text": "um you know of uh interfacing it with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 778, "tokens": 0, "vector": null, "score": 0}, {"text": "functions and having it adhere to the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 779, "tokens": 0, "vector": null, "score": 0}, {"text": "syntax or having it adhere to that this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 780, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of thing um so kind of skipping", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 781, "tokens": 0, "vector": null, "score": 0}, {"text": "topics I I wanted to jump ahead to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 782, "tokens": 0, "vector": null, "score": 0}, {"text": "something that just blew my mind when I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 783, "tokens": 0, "vector": null, "score": 0}, {"text": "saw it which was the lmql playground I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 784, "tokens": 0, "vector": null, "score": 0}, {"text": "think this is such a cool visual", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 785, "tokens": 0, "vector": null, "score": 0}, {"text": "demonstration of these you know complex", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 786, "tokens": 0, "vector": null, "score": 0}, {"text": "language model calls", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 787, "tokens": 0, "vector": null, "score": 0}, {"text": "can you tell me about the design of it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 788, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah so we um essentially when we in the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 789, "tokens": 0, "vector": null, "score": 0}, {"text": "process of building um we started to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 790, "tokens": 0, "vector": null, "score": 0}, {"text": "also build a graphical or visual", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 791, "tokens": 0, "vector": null, "score": 0}, {"text": "debugger interface", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 792, "tokens": 0, "vector": null, "score": 0}, {"text": "which is actually fully available on the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 793, "tokens": 0, "vector": null, "score": 0}, {"text": "web so invite everyone to just go to its", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 794, "tokens": 0, "vector": null, "score": 0}, {"text": "lmgl.ai playground you can actually run", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 795, "tokens": 0, "vector": null, "score": 0}, {"text": "all of nmql in the browser in this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 796, "tokens": 0, "vector": null, "score": 0}, {"text": "graphic user interface which will allow", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 797, "tokens": 0, "vector": null, "score": 0}, {"text": "you to gain a better understanding of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 798, "tokens": 0, "vector": null, "score": 0}, {"text": "what's actually happening also", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 799, "tokens": 0, "vector": null, "score": 0}, {"text": "especially on the decoder level if you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 800, "tokens": 0, "vector": null, "score": 0}, {"text": "always wanted to see like a visual", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 801, "tokens": 0, "vector": null, "score": 0}, {"text": "representation of how beam search works", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 802, "tokens": 0, "vector": null, "score": 0}, {"text": "or what other tokens the model has", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 803, "tokens": 0, "vector": null, "score": 0}, {"text": "considered at particular points and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 804, "tokens": 0, "vector": null, "score": 0}, {"text": "during generation like all the different", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 805, "tokens": 0, "vector": null, "score": 0}, {"text": "rates that were not explored actually", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 806, "tokens": 0, "vector": null, "score": 0}, {"text": "this is a really cool way to see this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 807, "tokens": 0, "vector": null, "score": 0}, {"text": "um also big shout out by the way to the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 808, "tokens": 0, "vector": null, "score": 0}, {"text": "Empire Diet team they're building a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 809, "tokens": 0, "vector": null, "score": 0}, {"text": "python webassembly version of python and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 810, "tokens": 0, "vector": null, "score": 0}, {"text": "this is the only reason that lmql", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 811, "tokens": 0, "vector": null, "score": 0}, {"text": "actually can even run in the process so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 812, "tokens": 0, "vector": null, "score": 0}, {"text": "this is also a really awesome project", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 813, "tokens": 0, "vector": null, "score": 0}, {"text": "um now the playground itself", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 814, "tokens": 0, "vector": null, "score": 0}, {"text": "I would say it's that it out as a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 815, "tokens": 0, "vector": null, "score": 0}, {"text": "debugging tool and we still use it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 816, "tokens": 0, "vector": null, "score": 0}, {"text": "heavily in that sense because it enables", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 817, "tokens": 0, "vector": null, "score": 0}, {"text": "us to really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 818, "tokens": 0, "vector": null, "score": 0}, {"text": "goes token by token step by step we do a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 819, "tokens": 0, "vector": null, "score": 0}, {"text": "lot of token by token computations", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 820, "tokens": 0, "vector": null, "score": 0}, {"text": "masking validation", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 821, "tokens": 0, "vector": null, "score": 0}, {"text": "um also all about decoding algorithms", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 822, "tokens": 0, "vector": null, "score": 0}, {"text": "that are branching can be visualized as", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 823, "tokens": 0, "vector": null, "score": 0}, {"text": "it is a craft view that actually allows", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 824, "tokens": 0, "vector": null, "score": 0}, {"text": "you to see all the different sequences", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 825, "tokens": 0, "vector": null, "score": 0}, {"text": "that are being decoded how they relate", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 826, "tokens": 0, "vector": null, "score": 0}, {"text": "to each other what's the origin of of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 827, "tokens": 0, "vector": null, "score": 0}, {"text": "the coding in general so and this helps", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 828, "tokens": 0, "vector": null, "score": 0}, {"text": "a lot and but then again yeah on from an", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 829, "tokens": 0, "vector": null, "score": 0}, {"text": "educational perspective it's also really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 830, "tokens": 0, "vector": null, "score": 0}, {"text": "interesting to explore just from as a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 831, "tokens": 0, "vector": null, "score": 0}, {"text": "user I would say um you would learn a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 832, "tokens": 0, "vector": null, "score": 0}, {"text": "lot about internals", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 833, "tokens": 0, "vector": null, "score": 0}, {"text": "um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 834, "tokens": 0, "vector": null, "score": 0}, {"text": "we also buy by the way provide actually", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 835, "tokens": 0, "vector": null, "score": 0}, {"text": "we haven't this paper is not public yet", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 836, "tokens": 0, "vector": null, "score": 0}, {"text": "but this will come out soon", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 837, "tokens": 0, "vector": null, "score": 0}, {"text": "we Implement now Implement a high level", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 838, "tokens": 0, "vector": null, "score": 0}, {"text": "library for implementing custom decoders", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 839, "tokens": 0, "vector": null, "score": 0}, {"text": "so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 840, "tokens": 0, "vector": null, "score": 0}, {"text": "it's something like Trio thoughts for", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 841, "tokens": 0, "vector": null, "score": 0}, {"text": "instance or more advanced beam search", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 842, "tokens": 0, "vector": null, "score": 0}, {"text": "variants you could now Express very", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 843, "tokens": 0, "vector": null, "score": 0}, {"text": "easily with a high level language in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 844, "tokens": 0, "vector": null, "score": 0}, {"text": "lmgl and or in the internet of nmql and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 845, "tokens": 0, "vector": null, "score": 0}, {"text": "you would get all of this tooling for", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 846, "tokens": 0, "vector": null, "score": 0}, {"text": "free so you can write your own decoder", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 847, "tokens": 0, "vector": null, "score": 0}, {"text": "see the graphical results in the in the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 848, "tokens": 0, "vector": null, "score": 0}, {"text": "inspector on the playground", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 849, "tokens": 0, "vector": null, "score": 0}, {"text": "um and play around with this yeah", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 850, "tokens": 0, "vector": null, "score": 0}, {"text": "I definitely want to come back to that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 851, "tokens": 0, "vector": null, "score": 0}, {"text": "but just kind of like for our listeners", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 852, "tokens": 0, "vector": null, "score": 0}, {"text": "coming to lmqo for the playground for", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 853, "tokens": 0, "vector": null, "score": 0}, {"text": "the first time could you explain like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 854, "tokens": 0, "vector": null, "score": 0}, {"text": "how it would visualize say Auto G Auto", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 855, "tokens": 0, "vector": null, "score": 0}, {"text": "gbt is this problem where it's kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 856, "tokens": 0, "vector": null, "score": 0}, {"text": "like you know write a set of tasks and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 857, "tokens": 0, "vector": null, "score": 0}, {"text": "then start executing the tasks and then", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 858, "tokens": 0, "vector": null, "score": 0}, {"text": "reflect on you know our is the execution", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 859, "tokens": 0, "vector": null, "score": 0}, {"text": "of these tasks getting me closer to my", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 860, "tokens": 0, "vector": null, "score": 0}, {"text": "goal and I think it's one of these", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 861, "tokens": 0, "vector": null, "score": 0}, {"text": "things that we you know is so like it's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 862, "tokens": 0, "vector": null, "score": 0}, {"text": "such a compelling idea but then it's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 863, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of hard to tame it in the real", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 864, "tokens": 0, "vector": null, "score": 0}, {"text": "world and I think this is like having", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 865, "tokens": 0, "vector": null, "score": 0}, {"text": "this kind of visualization can you just", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 866, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of maybe explain the TL like the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 867, "tokens": 0, "vector": null, "score": 0}, {"text": "high level explanation like this kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 868, "tokens": 0, "vector": null, "score": 0}, {"text": "example of this you know like recursive", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 869, "tokens": 0, "vector": null, "score": 0}, {"text": "do you need to keep doing things sort of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 870, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah so act that's I mean that's a great", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 871, "tokens": 0, "vector": null, "score": 0}, {"text": "point I think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 872, "tokens": 0, "vector": null, "score": 0}, {"text": "um now the current state of energy or", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 873, "tokens": 0, "vector": null, "score": 0}, {"text": "the NPR playground is we really focus on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 874, "tokens": 0, "vector": null, "score": 0}, {"text": "this single query query meaning an LGL", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 875, "tokens": 0, "vector": null, "score": 0}, {"text": "query is usually a long prompt that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 876, "tokens": 0, "vector": null, "score": 0}, {"text": "keeps on extending you can have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 877, "tokens": 0, "vector": null, "score": 0}, {"text": "different parts for the elements called", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 878, "tokens": 0, "vector": null, "score": 0}, {"text": "but ultimately you you're generating one", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 879, "tokens": 0, "vector": null, "score": 0}, {"text": "text document in a sequential order", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 880, "tokens": 0, "vector": null, "score": 0}, {"text": "until you come to an end when you have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 881, "tokens": 0, "vector": null, "score": 0}, {"text": "done or gotten all your results", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 882, "tokens": 0, "vector": null, "score": 0}, {"text": "um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 883, "tokens": 0, "vector": null, "score": 0}, {"text": "things like Auto GPT or more like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 884, "tokens": 0, "vector": null, "score": 0}, {"text": "compositional Frameworks where you chain", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 885, "tokens": 0, "vector": null, "score": 0}, {"text": "calls together", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 886, "tokens": 0, "vector": null, "score": 0}, {"text": "um obviously actually have more than one", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 887, "tokens": 0, "vector": null, "score": 0}, {"text": "such call", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 888, "tokens": 0, "vector": null, "score": 0}, {"text": "and we definitely plan to add this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 889, "tokens": 0, "vector": null, "score": 0}, {"text": "um but for this we still we first have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 890, "tokens": 0, "vector": null, "score": 0}, {"text": "to realize all our plans in a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 891, "tokens": 0, "vector": null, "score": 0}, {"text": "compositional", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 892, "tokens": 0, "vector": null, "score": 0}, {"text": "um space as well", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 893, "tokens": 0, "vector": null, "score": 0}, {"text": "um but potentially what you want really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 894, "tokens": 0, "vector": null, "score": 0}, {"text": "is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 895, "tokens": 0, "vector": null, "score": 0}, {"text": "a regular debugger with function calls", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 896, "tokens": 0, "vector": null, "score": 0}, {"text": "and stacks and the stack frame and have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 897, "tokens": 0, "vector": null, "score": 0}, {"text": "like recursive chords being in the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 898, "tokens": 0, "vector": null, "score": 0}, {"text": "context of their parent calls right you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 899, "tokens": 0, "vector": null, "score": 0}, {"text": "can jump into them go token by token go", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 900, "tokens": 0, "vector": null, "score": 0}, {"text": "back out see the parent call like like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 901, "tokens": 0, "vector": null, "score": 0}, {"text": "this kind of tooling definitely", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 902, "tokens": 0, "vector": null, "score": 0}, {"text": "um would be very useful", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 903, "tokens": 0, "vector": null, "score": 0}, {"text": "um although I'm not really all for", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 904, "tokens": 0, "vector": null, "score": 0}, {"text": "Reinventing the real you so maybe", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 905, "tokens": 0, "vector": null, "score": 0}, {"text": "there's also a very smart integration", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 906, "tokens": 0, "vector": null, "score": 0}, {"text": "that you could do with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 907, "tokens": 0, "vector": null, "score": 0}, {"text": "existing python-based debuggers adding", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 908, "tokens": 0, "vector": null, "score": 0}, {"text": "the lower level of when you execute a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 909, "tokens": 0, "vector": null, "score": 0}, {"text": "prompt function you can actually also", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 910, "tokens": 0, "vector": null, "score": 0}, {"text": "step token by token", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 911, "tokens": 0, "vector": null, "score": 0}, {"text": "fascinating so it's so that kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 912, "tokens": 0, "vector": null, "score": 0}, {"text": "parallel of you know how you would do a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 913, "tokens": 0, "vector": null, "score": 0}, {"text": "stack Trace with you know any kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 914, "tokens": 0, "vector": null, "score": 0}, {"text": "like you know C plus plus code or so on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 915, "tokens": 0, "vector": null, "score": 0}, {"text": "compared to maybe like yeah we've seen", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 916, "tokens": 0, "vector": null, "score": 0}, {"text": "like laying flow where we have like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 917, "tokens": 0, "vector": null, "score": 0}, {"text": "these dags that kind of you know show", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 918, "tokens": 0, "vector": null, "score": 0}, {"text": "like um uh you know I call the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 919, "tokens": 0, "vector": null, "score": 0}, {"text": "calculator I got the result or like I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 920, "tokens": 0, "vector": null, "score": 0}, {"text": "wrote this python code I executed it and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 921, "tokens": 0, "vector": null, "score": 0}, {"text": "that kind of thing um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 922, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah well it's pretty interesting I mean", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 923, "tokens": 0, "vector": null, "score": 0}, {"text": "I don't think I have a great uh question", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 924, "tokens": 0, "vector": null, "score": 0}, {"text": "just um yeah like I that hearing that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 925, "tokens": 0, "vector": null, "score": 0}, {"text": "parallel really opened up my", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 926, "tokens": 0, "vector": null, "score": 0}, {"text": "understanding of it comparing it with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 927, "tokens": 0, "vector": null, "score": 0}, {"text": "the traditional stack tracing and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 928, "tokens": 0, "vector": null, "score": 0}, {"text": "debugging that already exists and yeah", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 929, "tokens": 0, "vector": null, "score": 0}, {"text": "it makes perfect sense so that stuff", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 930, "tokens": 0, "vector": null, "score": 0}, {"text": "would translate you know right into this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 931, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of language model stuff so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 932, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I think um maybe", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 933, "tokens": 0, "vector": null, "score": 0}, {"text": "um with the lmql playground I guess and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 934, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of like also when you originally", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 935, "tokens": 0, "vector": null, "score": 0}, {"text": "land on lmql uh you have these set of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 936, "tokens": 0, "vector": null, "score": 0}, {"text": "examples could you maybe describe like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 937, "tokens": 0, "vector": null, "score": 0}, {"text": "an example to listeners that you know", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 938, "tokens": 0, "vector": null, "score": 0}, {"text": "you particularly like and helps kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 939, "tokens": 0, "vector": null, "score": 0}, {"text": "illustrate lmql", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 940, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah sure um so I think one of the the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 941, "tokens": 0, "vector": null, "score": 0}, {"text": "simplest and and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 942, "tokens": 0, "vector": null, "score": 0}, {"text": "One Step Beyond just asking Church 50", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 943, "tokens": 0, "vector": null, "score": 0}, {"text": "something prompting method is basically", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 944, "tokens": 0, "vector": null, "score": 0}, {"text": "called Channel thought right this is so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 945, "tokens": 0, "vector": null, "score": 0}, {"text": "stand with me this will be new um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 946, "tokens": 0, "vector": null, "score": 0}, {"text": "essentially the idea is to not ask", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 947, "tokens": 0, "vector": null, "score": 0}, {"text": "language model to directly provide a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 948, "tokens": 0, "vector": null, "score": 0}, {"text": "response but instead you you first ask", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 949, "tokens": 0, "vector": null, "score": 0}, {"text": "the model to but you provide a question", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 950, "tokens": 0, "vector": null, "score": 0}, {"text": "you ask the model to provide um a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 951, "tokens": 0, "vector": null, "score": 0}, {"text": "reasoning how it would come to a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 952, "tokens": 0, "vector": null, "score": 0}, {"text": "response so essentially you just ask the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 953, "tokens": 0, "vector": null, "score": 0}, {"text": "model to reason step by step and then", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 954, "tokens": 0, "vector": null, "score": 0}, {"text": "eventually after that did this you ask", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 955, "tokens": 0, "vector": null, "score": 0}, {"text": "now give me the answer meaning you um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 956, "tokens": 0, "vector": null, "score": 0}, {"text": "you help the model in sort of providing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 957, "tokens": 0, "vector": null, "score": 0}, {"text": "a small algorithm basically on how to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 958, "tokens": 0, "vector": null, "score": 0}, {"text": "arrive to add an answer instead of just", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 959, "tokens": 0, "vector": null, "score": 0}, {"text": "directly producing it and this has been", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 960, "tokens": 0, "vector": null, "score": 0}, {"text": "shown to to create success and that this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 961, "tokens": 0, "vector": null, "score": 0}, {"text": "works really well like this is much", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 962, "tokens": 0, "vector": null, "score": 0}, {"text": "better than just directly producing the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 963, "tokens": 0, "vector": null, "score": 0}, {"text": "answer and the way you would do this for", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 964, "tokens": 0, "vector": null, "score": 0}, {"text": "instance in lmgl is you just write you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 965, "tokens": 0, "vector": null, "score": 0}, {"text": "write down the question and your query", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 966, "tokens": 0, "vector": null, "score": 0}, {"text": "code you write let's think step by step", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 967, "tokens": 0, "vector": null, "score": 0}, {"text": "then you have a placeholder that you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 968, "tokens": 0, "vector": null, "score": 0}, {"text": "insert where all the model reasoning", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 969, "tokens": 0, "vector": null, "score": 0}, {"text": "goes and then you ask a model in a the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 970, "tokens": 0, "vector": null, "score": 0}, {"text": "follow-up statement Now give me the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 971, "tokens": 0, "vector": null, "score": 0}, {"text": "answer", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 972, "tokens": 0, "vector": null, "score": 0}, {"text": "um and this actually also enables you to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 973, "tokens": 0, "vector": null, "score": 0}, {"text": "have like free text reasoning the model", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 974, "tokens": 0, "vector": null, "score": 0}, {"text": "will do some", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 975, "tokens": 0, "vector": null, "score": 0}, {"text": "number arithmetic maybe whatever kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 976, "tokens": 0, "vector": null, "score": 0}, {"text": "reasoning is required and then", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 977, "tokens": 0, "vector": null, "score": 0}, {"text": "eventually when you actually want to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 978, "tokens": 0, "vector": null, "score": 0}, {"text": "retrieve the answer you can then", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 979, "tokens": 0, "vector": null, "score": 0}, {"text": "leverage for instance lmql constraints", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 980, "tokens": 0, "vector": null, "score": 0}, {"text": "saying okay now I want an integer number", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 981, "tokens": 0, "vector": null, "score": 0}, {"text": "that represents the the answer", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 982, "tokens": 0, "vector": null, "score": 0}, {"text": "um coming back to interface robustness", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 983, "tokens": 0, "vector": null, "score": 0}, {"text": "this means you have sort of a natural", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 984, "tokens": 0, "vector": null, "score": 0}, {"text": "language based reasoning process but the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 985, "tokens": 0, "vector": null, "score": 0}, {"text": "output the return value of your run", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 986, "tokens": 0, "vector": null, "score": 0}, {"text": "function actually will be an integer", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 987, "tokens": 0, "vector": null, "score": 0}, {"text": "value that you can robustly handle the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 988, "tokens": 0, "vector": null, "score": 0}, {"text": "rest of your program code so I think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 989, "tokens": 0, "vector": null, "score": 0}, {"text": "this this um illnesses quite well like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 990, "tokens": 0, "vector": null, "score": 0}, {"text": "the sort of standard process of how lmgl", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 991, "tokens": 0, "vector": null, "score": 0}, {"text": "typically works", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 992, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah that's a really great clarification", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 993, "tokens": 0, "vector": null, "score": 0}, {"text": "of um you know the difference between", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 994, "tokens": 0, "vector": null, "score": 0}, {"text": "when you want to enforce the structured", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 995, "tokens": 0, "vector": null, "score": 0}, {"text": "output parsing compared to where you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 996, "tokens": 0, "vector": null, "score": 0}, {"text": "want to let it just have the open-ended", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 997, "tokens": 0, "vector": null, "score": 0}, {"text": "reasoning and um maybe to read this to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 998, "tokens": 0, "vector": null, "score": 0}, {"text": "listeners to kind of also get you know", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 999, "tokens": 0, "vector": null, "score": 0}, {"text": "for people just listening and not also", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1000, "tokens": 0, "vector": null, "score": 0}, {"text": "looking at this uh you know if you go to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1001, "tokens": 0, "vector": null, "score": 0}, {"text": "lmql.ai where you click Chain of Thought", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1002, "tokens": 0, "vector": null, "score": 0}, {"text": "and that's kind of the example that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1003, "tokens": 0, "vector": null, "score": 0}, {"text": "we're talking through right now", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1004, "tokens": 0, "vector": null, "score": 0}, {"text": "so you have the ARG Max and then you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1005, "tokens": 0, "vector": null, "score": 0}, {"text": "have a question it was September 1st", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1006, "tokens": 0, "vector": null, "score": 0}, {"text": "2021 a week ago what is the date 10 days", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1007, "tokens": 0, "vector": null, "score": 0}, {"text": "ago in mm slash DD slash yyy Quest like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1008, "tokens": 0, "vector": null, "score": 0}, {"text": "you know forcing that kind of uh", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1009, "tokens": 0, "vector": null, "score": 0}, {"text": "structure already and then but then you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1010, "tokens": 0, "vector": null, "score": 0}, {"text": "give the answer choices where you have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1011, "tokens": 0, "vector": null, "score": 0}, {"text": "you know a b c d e f these are each like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1012, "tokens": 0, "vector": null, "score": 0}, {"text": "dates formatted like that then you have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1013, "tokens": 0, "vector": null, "score": 0}, {"text": "let's think step by step and then you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1014, "tokens": 0, "vector": null, "score": 0}, {"text": "have reasoning and then you say", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1015, "tokens": 0, "vector": null, "score": 0}, {"text": "therefore among a through b the answer", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1016, "tokens": 0, "vector": null, "score": 0}, {"text": "is result can you tell me a little more", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1017, "tokens": 0, "vector": null, "score": 0}, {"text": "about", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1018, "tokens": 0, "vector": null, "score": 0}, {"text": "like reasoning and result and just how", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1019, "tokens": 0, "vector": null, "score": 0}, {"text": "lmql parses that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1020, "tokens": 0, "vector": null, "score": 0}, {"text": "so essentially you have to read it like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1021, "tokens": 0, "vector": null, "score": 0}, {"text": "a sequential program it's executed top", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1022, "tokens": 0, "vector": null, "score": 0}, {"text": "to bottom left to right and top level", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1023, "tokens": 0, "vector": null, "score": 0}, {"text": "strings that you see in the query are", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1024, "tokens": 0, "vector": null, "score": 0}, {"text": "just um pass to the model as prompt and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1025, "tokens": 0, "vector": null, "score": 0}, {"text": "whenever you have in your top level", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1026, "tokens": 0, "vector": null, "score": 0}, {"text": "string a placeholder variable in in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1027, "tokens": 0, "vector": null, "score": 0}, {"text": "square brackets this is when we actually", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1028, "tokens": 0, "vector": null, "score": 0}, {"text": "invoke the language model to produce a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1029, "tokens": 0, "vector": null, "score": 0}, {"text": "response", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1030, "tokens": 0, "vector": null, "score": 0}, {"text": "um and to prompt the language model will", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1031, "tokens": 0, "vector": null, "score": 0}, {"text": "get for this particular call is whatever", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1032, "tokens": 0, "vector": null, "score": 0}, {"text": "text has been consumed so far by a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1033, "tokens": 0, "vector": null, "score": 0}, {"text": "sequential execution of your program", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1034, "tokens": 0, "vector": null, "score": 0}, {"text": "and the language model will come to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1035, "tokens": 0, "vector": null, "score": 0}, {"text": "naturally come to an end typically a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1036, "tokens": 0, "vector": null, "score": 0}, {"text": "language models Just Produce some end of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1037, "tokens": 0, "vector": null, "score": 0}, {"text": "sequence token with return some some", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1038, "tokens": 0, "vector": null, "score": 0}, {"text": "text that represents the reasoning and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1039, "tokens": 0, "vector": null, "score": 0}, {"text": "in an nmgl in problem logic this means", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1040, "tokens": 0, "vector": null, "score": 0}, {"text": "after executing the statement there is a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1041, "tokens": 0, "vector": null, "score": 0}, {"text": "variable defined in your program context", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1042, "tokens": 0, "vector": null, "score": 0}, {"text": "it's called reasoning which will just be", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1043, "tokens": 0, "vector": null, "score": 0}, {"text": "a string", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1044, "tokens": 0, "vector": null, "score": 0}, {"text": "and you can access the string you can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1045, "tokens": 0, "vector": null, "score": 0}, {"text": "print the reasoning the llm used you can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1046, "tokens": 0, "vector": null, "score": 0}, {"text": "also just ignore it it will from now on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1047, "tokens": 0, "vector": null, "score": 0}, {"text": "the part of the follow-up prompts that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1048, "tokens": 0, "vector": null, "score": 0}, {"text": "you will send to the language model so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1049, "tokens": 0, "vector": null, "score": 0}, {"text": "here in this example you will continue", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1050, "tokens": 0, "vector": null, "score": 0}, {"text": "you will prompt the model therefore the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1051, "tokens": 0, "vector": null, "score": 0}, {"text": "answer is and the model will actually", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1052, "tokens": 0, "vector": null, "score": 0}, {"text": "see its previous output so in the next", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1053, "tokens": 0, "vector": null, "score": 0}, {"text": "core when we produce the actual result", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1054, "tokens": 0, "vector": null, "score": 0}, {"text": "and it will see us reasoning it will see", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1055, "tokens": 0, "vector": null, "score": 0}, {"text": "the original question it will see the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1056, "tokens": 0, "vector": null, "score": 0}, {"text": "new prompt asking it to produce an", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1057, "tokens": 0, "vector": null, "score": 0}, {"text": "answer", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1058, "tokens": 0, "vector": null, "score": 0}, {"text": "and for result this final placeholder", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1059, "tokens": 0, "vector": null, "score": 0}, {"text": "variable here and we have additionally", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1060, "tokens": 0, "vector": null, "score": 0}, {"text": "defined constraints so we can actually", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1061, "tokens": 0, "vector": null, "score": 0}, {"text": "now limit the language model to say", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1062, "tokens": 0, "vector": null, "score": 0}, {"text": "well result should be one of a to F and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1063, "tokens": 0, "vector": null, "score": 0}, {"text": "we can enforce this strictly which can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1064, "tokens": 0, "vector": null, "score": 0}, {"text": "just limit the distribution of the model", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1065, "tokens": 0, "vector": null, "score": 0}, {"text": "to be only across a through F and no", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1066, "tokens": 0, "vector": null, "score": 0}, {"text": "other tokens are allowed which means we", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1067, "tokens": 0, "vector": null, "score": 0}, {"text": "can we have guarantees about the format", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1068, "tokens": 0, "vector": null, "score": 0}, {"text": "of this final output right", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1069, "tokens": 0, "vector": null, "score": 0}, {"text": "um because in practice what will happen", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1070, "tokens": 0, "vector": null, "score": 0}, {"text": "this works most of the time and then at", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1071, "tokens": 0, "vector": null, "score": 0}, {"text": "some", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1072, "tokens": 0, "vector": null, "score": 0}, {"text": "um odd generate case the model will just", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1073, "tokens": 0, "vector": null, "score": 0}, {"text": "use some other letter maybe or something", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1074, "tokens": 0, "vector": null, "score": 0}, {"text": "else entirely", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1075, "tokens": 0, "vector": null, "score": 0}, {"text": "um and you can't parse this and by using", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1076, "tokens": 0, "vector": null, "score": 0}, {"text": "constraints in lmgr you can actually", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1077, "tokens": 0, "vector": null, "score": 0}, {"text": "guarantee this will be one of a through", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1078, "tokens": 0, "vector": null, "score": 0}, {"text": "F and there's no other way that this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1079, "tokens": 0, "vector": null, "score": 0}, {"text": "weapon will terminate the return value", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1080, "tokens": 0, "vector": null, "score": 0}, {"text": "will be one of those and this means you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1081, "tokens": 0, "vector": null, "score": 0}, {"text": "can just return this without value to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1082, "tokens": 0, "vector": null, "score": 0}, {"text": "your property logic you can also use it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1083, "tokens": 0, "vector": null, "score": 0}, {"text": "to index an array with limited options", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1084, "tokens": 0, "vector": null, "score": 0}, {"text": "in this case and this through our work", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1085, "tokens": 0, "vector": null, "score": 0}, {"text": "robustly without any need to do output", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1086, "tokens": 0, "vector": null, "score": 0}, {"text": "parsing or somehow some some fussy logic", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1087, "tokens": 0, "vector": null, "score": 0}, {"text": "to validate ourselves", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1088, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I I love the way it like where", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1089, "tokens": 0, "vector": null, "score": 0}, {"text": "result in you know a b c d how you have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1090, "tokens": 0, "vector": null, "score": 0}, {"text": "that syntax I think yeah it's really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1091, "tokens": 0, "vector": null, "score": 0}, {"text": "it's super cool I mean I I have played", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1092, "tokens": 0, "vector": null, "score": 0}, {"text": "with a lot of problems where you're", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1093, "tokens": 0, "vector": null, "score": 0}, {"text": "saying like if and that you know like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1094, "tokens": 0, "vector": null, "score": 0}, {"text": "you're prompting it with if else kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1095, "tokens": 0, "vector": null, "score": 0}, {"text": "logic where you say if and then some", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1096, "tokens": 0, "vector": null, "score": 0}, {"text": "abstract natural language description of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1097, "tokens": 0, "vector": null, "score": 0}, {"text": "what to do with the thing and then then", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1098, "tokens": 0, "vector": null, "score": 0}, {"text": "output like you know no change needed or", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1099, "tokens": 0, "vector": null, "score": 0}, {"text": "whatever right and so this syntax to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1100, "tokens": 0, "vector": null, "score": 0}, {"text": "constrain it to certain valuables as you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1101, "tokens": 0, "vector": null, "score": 0}, {"text": "discussed and then or constrain it to be", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1102, "tokens": 0, "vector": null, "score": 0}, {"text": "a type maybe even like make sure it's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1103, "tokens": 0, "vector": null, "score": 0}, {"text": "Boolean would achieve that same kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1104, "tokens": 0, "vector": null, "score": 0}, {"text": "but like I guess because it is free text", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1105, "tokens": 0, "vector": null, "score": 0}, {"text": "but yeah like this kind of syntax is so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1106, "tokens": 0, "vector": null, "score": 0}, {"text": "elegant and so it brings me to my next", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1107, "tokens": 0, "vector": null, "score": 0}, {"text": "question which is kind of a Harrier", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1108, "tokens": 0, "vector": null, "score": 0}, {"text": "question is and you know you know like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1109, "tokens": 0, "vector": null, "score": 0}, {"text": "it's such a convincing thing I would", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1110, "tokens": 0, "vector": null, "score": 0}, {"text": "love to get running with this like how", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1111, "tokens": 0, "vector": null, "score": 0}, {"text": "does this integrate with the existing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1112, "tokens": 0, "vector": null, "score": 0}, {"text": "Frameworks like I know there's an", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1113, "tokens": 0, "vector": null, "score": 0}, {"text": "integration with llama index like is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1114, "tokens": 0, "vector": null, "score": 0}, {"text": "this just kind of treated as like one of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1115, "tokens": 0, "vector": null, "score": 0}, {"text": "the structured output parsers how does", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1116, "tokens": 0, "vector": null, "score": 0}, {"text": "lmql kind of like what is the early", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1117, "tokens": 0, "vector": null, "score": 0}, {"text": "stage of this integrating in the current", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1118, "tokens": 0, "vector": null, "score": 0}, {"text": "sort of like llm software tools", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1119, "tokens": 0, "vector": null, "score": 0}, {"text": "yes I actually I'm quite happy about the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1120, "tokens": 0, "vector": null, "score": 0}, {"text": "current state of integrating like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1121, "tokens": 0, "vector": null, "score": 0}, {"text": "essentially we can integrate with all of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1122, "tokens": 0, "vector": null, "score": 0}, {"text": "them more or less", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1123, "tokens": 0, "vector": null, "score": 0}, {"text": "and the reason for this is that most", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1124, "tokens": 0, "vector": null, "score": 0}, {"text": "Frameworks are um compositional and they", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1125, "tokens": 0, "vector": null, "score": 0}, {"text": "have this black box perspective and they", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1126, "tokens": 0, "vector": null, "score": 0}, {"text": "do lots of training cards together or", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1127, "tokens": 0, "vector": null, "score": 0}, {"text": "like even in some kind of tree structure", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1128, "tokens": 0, "vector": null, "score": 0}, {"text": "and I'm index they do lots of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1129, "tokens": 0, "vector": null, "score": 0}, {"text": "interesting things", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1130, "tokens": 0, "vector": null, "score": 0}, {"text": "but since they assume the language model", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1131, "tokens": 0, "vector": null, "score": 0}, {"text": "itself is a black box and lmgl mostly", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1132, "tokens": 0, "vector": null, "score": 0}, {"text": "operates in this black box we can always", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1133, "tokens": 0, "vector": null, "score": 0}, {"text": "just fit in this black box State it's a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1134, "tokens": 0, "vector": null, "score": 0}, {"text": "black box to them they have no", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1135, "tokens": 0, "vector": null, "score": 0}, {"text": "assumption about its inner workings and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1136, "tokens": 0, "vector": null, "score": 0}, {"text": "lmgl fills this black box leveraged some", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1137, "tokens": 0, "vector": null, "score": 0}, {"text": "more some more advanced information from", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1138, "tokens": 0, "vector": null, "score": 0}, {"text": "the llm and so in that sense we can for", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1139, "tokens": 0, "vector": null, "score": 0}, {"text": "instance a link chain we can just", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1140, "tokens": 0, "vector": null, "score": 0}, {"text": "operate as a chain component we can just", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1141, "tokens": 0, "vector": null, "score": 0}, {"text": "it's just a lmql lmql queries are just", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1142, "tokens": 0, "vector": null, "score": 0}, {"text": "python functions and and this fits very", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1143, "tokens": 0, "vector": null, "score": 0}, {"text": "well with multiple positional framework", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1144, "tokens": 0, "vector": null, "score": 0}, {"text": "so so there's lots of um yeah to be had", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1145, "tokens": 0, "vector": null, "score": 0}, {"text": "from each other so on the one hand we", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1146, "tokens": 0, "vector": null, "score": 0}, {"text": "can use dama index or next chain to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1147, "tokens": 0, "vector": null, "score": 0}, {"text": "retrieve use with all their retrieval", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1148, "tokens": 0, "vector": null, "score": 0}, {"text": "Integrations to insert them into the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1149, "tokens": 0, "vector": null, "score": 0}, {"text": "prompt on the other hand lmql programs", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1150, "tokens": 0, "vector": null, "score": 0}, {"text": "can be used as part of your agent where", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1151, "tokens": 0, "vector": null, "score": 0}, {"text": "we have like Auto GPT variants using", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1152, "tokens": 0, "vector": null, "score": 0}, {"text": "lmql all sorts of projects just employed", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1153, "tokens": 0, "vector": null, "score": 0}, {"text": "as sort of the as a fundamental building", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1154, "tokens": 0, "vector": null, "score": 0}, {"text": "block and what they're building", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1155, "tokens": 0, "vector": null, "score": 0}, {"text": "compositionally with L M's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1156, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah it's amazing I I guess like kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1157, "tokens": 0, "vector": null, "score": 0}, {"text": "the other thing is like you know I I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1158, "tokens": 0, "vector": null, "score": 0}, {"text": "love this kind of like the llms write", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1159, "tokens": 0, "vector": null, "score": 0}, {"text": "the code and I think this um like I love", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1160, "tokens": 0, "vector": null, "score": 0}, {"text": "this question of like I feel like the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1161, "tokens": 0, "vector": null, "score": 0}, {"text": "llm itself could be prompted to write", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1162, "tokens": 0, "vector": null, "score": 0}, {"text": "lmql code like if you uh you know say uh", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1163, "tokens": 0, "vector": null, "score": 0}, {"text": "you give it these I think nine examples", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1164, "tokens": 0, "vector": null, "score": 0}, {"text": "of tell a joke packing list Chain of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1165, "tokens": 0, "vector": null, "score": 0}, {"text": "Thought and then you give it these", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1166, "tokens": 0, "vector": null, "score": 0}, {"text": "examples then ask the LM to write new", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1167, "tokens": 0, "vector": null, "score": 0}, {"text": "things do you think about interfacing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1168, "tokens": 0, "vector": null, "score": 0}, {"text": "lmq well that way", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1169, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I mean it's it's um obviously in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1170, "tokens": 0, "vector": null, "score": 0}, {"text": "the current uh", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1171, "tokens": 0, "vector": null, "score": 0}, {"text": "day and age this is number one thing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1172, "tokens": 0, "vector": null, "score": 0}, {"text": "people talk about also to us and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1173, "tokens": 0, "vector": null, "score": 0}, {"text": "obviously as PL people like we work on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1174, "tokens": 0, "vector": null, "score": 0}, {"text": "programming languages we design when a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1175, "tokens": 0, "vector": null, "score": 0}, {"text": "model and concise abstractions that's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1176, "tokens": 0, "vector": null, "score": 0}, {"text": "our at least a labor of love and that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1177, "tokens": 0, "vector": null, "score": 0}, {"text": "this hurts a bit like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1178, "tokens": 0, "vector": null, "score": 0}, {"text": "we build a nice programming language and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1179, "tokens": 0, "vector": null, "score": 0}, {"text": "then people don't want to use it they", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1180, "tokens": 0, "vector": null, "score": 0}, {"text": "just want to llm to use it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1181, "tokens": 0, "vector": null, "score": 0}, {"text": "um which is actually an entirely", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1182, "tokens": 0, "vector": null, "score": 0}, {"text": "different very interesting program can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1183, "tokens": 0, "vector": null, "score": 0}, {"text": "we build the programming languages that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1184, "tokens": 0, "vector": null, "score": 0}, {"text": "are work particularly well with llms", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1185, "tokens": 0, "vector": null, "score": 0}, {"text": "um because this is fundamentally they", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1186, "tokens": 0, "vector": null, "score": 0}, {"text": "use the lnfs are really good at using", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1187, "tokens": 0, "vector": null, "score": 0}, {"text": "for instance python because it's popular", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1188, "tokens": 0, "vector": null, "score": 0}, {"text": "on the internet but what if we decide", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1189, "tokens": 0, "vector": null, "score": 0}, {"text": "the language that was by on by on first", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1190, "tokens": 0, "vector": null, "score": 0}, {"text": "principles based on being an interface", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1191, "tokens": 0, "vector": null, "score": 0}, {"text": "to LMS and not to humans this is a very", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1192, "tokens": 0, "vector": null, "score": 0}, {"text": "interesting problem I think to work on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1193, "tokens": 0, "vector": null, "score": 0}, {"text": "like to see lots of potential there as", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1194, "tokens": 0, "vector": null, "score": 0}, {"text": "far as it comes to lmql", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1195, "tokens": 0, "vector": null, "score": 0}, {"text": "um we have some limited experience with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1196, "tokens": 0, "vector": null, "score": 0}, {"text": "this essentially for instance if you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1197, "tokens": 0, "vector": null, "score": 0}, {"text": "write Adam Q L and you're editor of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1198, "tokens": 0, "vector": null, "score": 0}, {"text": "choice and you have for instance GitHub", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1199, "tokens": 0, "vector": null, "score": 0}, {"text": "co-pilot installed", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1200, "tokens": 0, "vector": null, "score": 0}, {"text": "um GitHub copilot will after a few", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1201, "tokens": 0, "vector": null, "score": 0}, {"text": "demonstrations of lmql effortlessly", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1202, "tokens": 0, "vector": null, "score": 0}, {"text": "write lmql like it's so close to Python", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1203, "tokens": 0, "vector": null, "score": 0}, {"text": "and semantics are mostly declarative", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1204, "tokens": 0, "vector": null, "score": 0}, {"text": "that it's not really hard for for um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1205, "tokens": 0, "vector": null, "score": 0}, {"text": "the auto completion models to pick up on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1206, "tokens": 0, "vector": null, "score": 0}, {"text": "this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1207, "tokens": 0, "vector": null, "score": 0}, {"text": "um we haven't done more for our", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1208, "tokens": 0, "vector": null, "score": 0}, {"text": "experience experiments with intenders", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1209, "tokens": 0, "vector": null, "score": 0}, {"text": "um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1210, "tokens": 0, "vector": null, "score": 0}, {"text": "so there may be something there for us", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1211, "tokens": 0, "vector": null, "score": 0}, {"text": "it's mostly about time currently like we", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1212, "tokens": 0, "vector": null, "score": 0}, {"text": "have so many directors and projects to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1213, "tokens": 0, "vector": null, "score": 0}, {"text": "explore", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1214, "tokens": 0, "vector": null, "score": 0}, {"text": "um incredibly busy these days so so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1215, "tokens": 0, "vector": null, "score": 0}, {"text": "hopefully at some point we can we get to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1216, "tokens": 0, "vector": null, "score": 0}, {"text": "work on this but yeah not not directly", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1217, "tokens": 0, "vector": null, "score": 0}, {"text": "right now it's not a priority first", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1218, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah super cool yeah it's very", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1219, "tokens": 0, "vector": null, "score": 0}, {"text": "interesting hearing the um the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1220, "tokens": 0, "vector": null, "score": 0}, {"text": "frustration of a designer of programming", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1221, "tokens": 0, "vector": null, "score": 0}, {"text": "languages", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1222, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah so you mentioned the you know the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1223, "tokens": 0, "vector": null, "score": 0}, {"text": "time thing and they I'm very curious", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1224, "tokens": 0, "vector": null, "score": 0}, {"text": "just kind of you know I've learned so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1225, "tokens": 0, "vector": null, "score": 0}, {"text": "much from talking with you in these 45", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1226, "tokens": 0, "vector": null, "score": 0}, {"text": "minutes you certainly seemed like you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1227, "tokens": 0, "vector": null, "score": 0}, {"text": "have a really you know exciting vision", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1228, "tokens": 0, "vector": null, "score": 0}, {"text": "for the future of this what are some of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1229, "tokens": 0, "vector": null, "score": 0}, {"text": "these like um you know future projects", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1230, "tokens": 0, "vector": null, "score": 0}, {"text": "directions that you're going with lqo", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1231, "tokens": 0, "vector": null, "score": 0}, {"text": "so I mean on a high level I think the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1232, "tokens": 0, "vector": null, "score": 0}, {"text": "most fascinating thing to me being a PL", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1233, "tokens": 0, "vector": null, "score": 0}, {"text": "and machine learning person is this this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1234, "tokens": 0, "vector": null, "score": 0}, {"text": "new generation of models that's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1235, "tokens": 0, "vector": null, "score": 0}, {"text": "programmable so suddenly like you can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1236, "tokens": 0, "vector": null, "score": 0}, {"text": "prompt them to do things you can compose", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1237, "tokens": 0, "vector": null, "score": 0}, {"text": "them in new ways they're not just one", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1238, "tokens": 0, "vector": null, "score": 0}, {"text": "task reasoners they're multitask", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1239, "tokens": 0, "vector": null, "score": 0}, {"text": "listeners and for me this is incredibly", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1240, "tokens": 0, "vector": null, "score": 0}, {"text": "interesting I think also um talking to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1241, "tokens": 0, "vector": null, "score": 0}, {"text": "people in in like bigger labs", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1242, "tokens": 0, "vector": null, "score": 0}, {"text": "there is interest in building models", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1243, "tokens": 0, "vector": null, "score": 0}, {"text": "that are programmable in the sense maybe", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1244, "tokens": 0, "vector": null, "score": 0}, {"text": "even Beyond prompting like maybe we can", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1245, "tokens": 0, "vector": null, "score": 0}, {"text": "find more formal languages train", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1246, "tokens": 0, "vector": null, "score": 0}, {"text": "Foundation models on different kinds of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1247, "tokens": 0, "vector": null, "score": 0}, {"text": "data that are programmable and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1248, "tokens": 0, "vector": null, "score": 0}, {"text": "composable in the sense so so I think in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1249, "tokens": 0, "vector": null, "score": 0}, {"text": "general this field is is really amazing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1250, "tokens": 0, "vector": null, "score": 0}, {"text": "I think multi-modality definitely want", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1251, "tokens": 0, "vector": null, "score": 0}, {"text": "to integrate this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1252, "tokens": 0, "vector": null, "score": 0}, {"text": "um not sure about the programming models", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1253, "tokens": 0, "vector": null, "score": 0}, {"text": "there for instance programming with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1254, "tokens": 0, "vector": null, "score": 0}, {"text": "images is very different usually than", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1255, "tokens": 0, "vector": null, "score": 0}, {"text": "visually and then with text like text is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1256, "tokens": 0, "vector": null, "score": 0}, {"text": "obviously the most the closest thing to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1257, "tokens": 0, "vector": null, "score": 0}, {"text": "to code as well so um yeah we'll", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1258, "tokens": 0, "vector": null, "score": 0}, {"text": "definitely explore this this I think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1259, "tokens": 0, "vector": null, "score": 0}, {"text": "this is incredibly interesting", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1260, "tokens": 0, "vector": null, "score": 0}, {"text": "in Array like also our industry paper", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1261, "tokens": 0, "vector": null, "score": 0}, {"text": "the core Insight is prompting is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1262, "tokens": 0, "vector": null, "score": 0}, {"text": "programming like this enables a new form", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1263, "tokens": 0, "vector": null, "score": 0}, {"text": "of of programming that will be", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1264, "tokens": 0, "vector": null, "score": 0}, {"text": "fundamentally different from what we", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1265, "tokens": 0, "vector": null, "score": 0}, {"text": "know so far because", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1266, "tokens": 0, "vector": null, "score": 0}, {"text": "you don't have to specify every detail", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1267, "tokens": 0, "vector": null, "score": 0}, {"text": "you have these new reasoning engines", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1268, "tokens": 0, "vector": null, "score": 0}, {"text": "that you can use as building blocks you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1269, "tokens": 0, "vector": null, "score": 0}, {"text": "can make fussy things hard things that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1270, "tokens": 0, "vector": null, "score": 0}, {"text": "are things that were hard so far", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1271, "tokens": 0, "vector": null, "score": 0}, {"text": "suddenly became much easier to do with l", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1272, "tokens": 0, "vector": null, "score": 0}, {"text": "and m so so it's very interesting to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1273, "tokens": 0, "vector": null, "score": 0}, {"text": "explore it in this way", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1274, "tokens": 0, "vector": null, "score": 0}, {"text": "carve it out on a much more concrete", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1275, "tokens": 0, "vector": null, "score": 0}, {"text": "level we also have lots of things you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1276, "tokens": 0, "vector": null, "score": 0}, {"text": "want to do with lmgl of course", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1277, "tokens": 0, "vector": null, "score": 0}, {"text": "um we're definitely thinking about", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1278, "tokens": 0, "vector": null, "score": 0}, {"text": "compositional stuff like chaining stuff", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1279, "tokens": 0, "vector": null, "score": 0}, {"text": "together mapreduce Style computations", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1280, "tokens": 0, "vector": null, "score": 0}, {"text": "with llms and I've for now we're very", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1281, "tokens": 0, "vector": null, "score": 0}, {"text": "minimalistic we try not to add too many", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1282, "tokens": 0, "vector": null, "score": 0}, {"text": "abstractions", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1283, "tokens": 0, "vector": null, "score": 0}, {"text": "the feedback from the community often is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1284, "tokens": 0, "vector": null, "score": 0}, {"text": "very harsh with regards to these", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1285, "tokens": 0, "vector": null, "score": 0}, {"text": "um I think there should be well thought", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1286, "tokens": 0, "vector": null, "score": 0}, {"text": "out it's hard to find the right", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1287, "tokens": 0, "vector": null, "score": 0}, {"text": "attractions as long as things are moving", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1288, "tokens": 0, "vector": null, "score": 0}, {"text": "that fast but we definitely have some", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1289, "tokens": 0, "vector": null, "score": 0}, {"text": "ideas around like algorithmic use as", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1290, "tokens": 0, "vector": null, "score": 0}, {"text": "well like llm-based sorting algorithms", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1291, "tokens": 0, "vector": null, "score": 0}, {"text": "for instance or like just using llms as", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1292, "tokens": 0, "vector": null, "score": 0}, {"text": "data transformation tools to go from one", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1293, "tokens": 0, "vector": null, "score": 0}, {"text": "form to another in a much more machine", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1294, "tokens": 0, "vector": null, "score": 0}, {"text": "learning based way", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1295, "tokens": 0, "vector": null, "score": 0}, {"text": "and then like something that's more or", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1296, "tokens": 0, "vector": null, "score": 0}, {"text": "less coming up more or less immediately", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1297, "tokens": 0, "vector": null, "score": 0}, {"text": "is also types like we will add types to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1298, "tokens": 0, "vector": null, "score": 0}, {"text": "lmql we have intentional types for now", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1299, "tokens": 0, "vector": null, "score": 0}, {"text": "but this will extend to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1300, "tokens": 0, "vector": null, "score": 0}, {"text": "um reg X matching but also structural", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1301, "tokens": 0, "vector": null, "score": 0}, {"text": "types like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1302, "tokens": 0, "vector": null, "score": 0}, {"text": "data classes Json", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1303, "tokens": 0, "vector": null, "score": 0}, {"text": "um yeah I think this will be really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1304, "tokens": 0, "vector": null, "score": 0}, {"text": "useful and correct practical to have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1305, "tokens": 0, "vector": null, "score": 0}, {"text": "also valid and programming in general", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1306, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah that's a I love that you know", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1307, "tokens": 0, "vector": null, "score": 0}, {"text": "future perspective also immediately very", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1308, "tokens": 0, "vector": null, "score": 0}, {"text": "grounded I you know I learned a lot", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1309, "tokens": 0, "vector": null, "score": 0}, {"text": "about you like the structured output", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1310, "tokens": 0, "vector": null, "score": 0}, {"text": "parsing and being I think one of the key", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1311, "tokens": 0, "vector": null, "score": 0}, {"text": "constraints to enforce with a large", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1312, "tokens": 0, "vector": null, "score": 0}, {"text": "language model uh programming I love", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1313, "tokens": 0, "vector": null, "score": 0}, {"text": "this kind of moving data from one format", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1314, "tokens": 0, "vector": null, "score": 0}, {"text": "to the other like CSV to Json that's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1315, "tokens": 0, "vector": null, "score": 0}, {"text": "just like a common thing that people", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1316, "tokens": 0, "vector": null, "score": 0}, {"text": "want to use but um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1317, "tokens": 0, "vector": null, "score": 0}, {"text": "so I really wanted to earlier I brought", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1318, "tokens": 0, "vector": null, "score": 0}, {"text": "this up quickly there's there's this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1319, "tokens": 0, "vector": null, "score": 0}, {"text": "other uh I wouldn't compare I wouldn't", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1320, "tokens": 0, "vector": null, "score": 0}, {"text": "call it quite like um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1321, "tokens": 0, "vector": null, "score": 0}, {"text": "lmql but uh demonstrate search predict", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1322, "tokens": 0, "vector": null, "score": 0}, {"text": "DSP basically the idea is um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1323, "tokens": 0, "vector": null, "score": 0}, {"text": "like one part of the idea that I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1324, "tokens": 0, "vector": null, "score": 0}, {"text": "understand well and I'm sure I'm already", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1325, "tokens": 0, "vector": null, "score": 0}, {"text": "a much better description of it but like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1326, "tokens": 0, "vector": null, "score": 0}, {"text": "my understanding of it let me like Frame", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1327, "tokens": 0, "vector": null, "score": 0}, {"text": "It That Way first is like you would", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1328, "tokens": 0, "vector": null, "score": 0}, {"text": "retrieve some examples of a task so you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1329, "tokens": 0, "vector": null, "score": 0}, {"text": "have some input output of like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1330, "tokens": 0, "vector": null, "score": 0}, {"text": "I don't know how I like to respond to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1331, "tokens": 0, "vector": null, "score": 0}, {"text": "emails about we V8 something's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1332, "tokens": 0, "vector": null, "score": 0}, {"text": "particular like that and then it will", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1333, "tokens": 0, "vector": null, "score": 0}, {"text": "um look at intermediate tool use kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1334, "tokens": 0, "vector": null, "score": 0}, {"text": "chains to to get to that output that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1335, "tokens": 0, "vector": null, "score": 0}, {"text": "you've demonstrated and you give it a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1336, "tokens": 0, "vector": null, "score": 0}, {"text": "few examples of it and so it will", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1337, "tokens": 0, "vector": null, "score": 0}, {"text": "compile some kind of like intermediate", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1338, "tokens": 0, "vector": null, "score": 0}, {"text": "reasoning chain sort of and it makes me", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1339, "tokens": 0, "vector": null, "score": 0}, {"text": "think and then you you know because you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1340, "tokens": 0, "vector": null, "score": 0}, {"text": "mentioned the multitask learning kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1341, "tokens": 0, "vector": null, "score": 0}, {"text": "perspective and I guess I'm just I hope", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1342, "tokens": 0, "vector": null, "score": 0}, {"text": "that I'm framing this right but like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1343, "tokens": 0, "vector": null, "score": 0}, {"text": "this thing about like gradient descent", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1344, "tokens": 0, "vector": null, "score": 0}, {"text": "is it still needed to adapt to new tasks", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1345, "tokens": 0, "vector": null, "score": 0}, {"text": "or do we just kind of like compile new", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1346, "tokens": 0, "vector": null, "score": 0}, {"text": "chains of tool use and checking parts", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1347, "tokens": 0, "vector": null, "score": 0}, {"text": "and adding structured parsing and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1348, "tokens": 0, "vector": null, "score": 0}, {"text": "in the middle I hope that question is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1349, "tokens": 0, "vector": null, "score": 0}, {"text": "clear", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1350, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1351, "tokens": 0, "vector": null, "score": 0}, {"text": "I mean coming from core machine learning", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1352, "tokens": 0, "vector": null, "score": 0}, {"text": "models", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1353, "tokens": 0, "vector": null, "score": 0}, {"text": "I'm not ready to give up on on gradient", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1354, "tokens": 0, "vector": null, "score": 0}, {"text": "descent let's say am I before I worked", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1355, "tokens": 0, "vector": null, "score": 0}, {"text": "also on differentiable programming", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1356, "tokens": 0, "vector": null, "score": 0}, {"text": "languages and actually I think there's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1357, "tokens": 0, "vector": null, "score": 0}, {"text": "lots of really cool potential to explore", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1358, "tokens": 0, "vector": null, "score": 0}, {"text": "there like there's this ongoing debate", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1359, "tokens": 0, "vector": null, "score": 0}, {"text": "also about is prompting enough or will", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1360, "tokens": 0, "vector": null, "score": 0}, {"text": "prompting actually eventually die and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1361, "tokens": 0, "vector": null, "score": 0}, {"text": "and fine-tuning ruler wise again", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1362, "tokens": 0, "vector": null, "score": 0}, {"text": "um obviously for now the more resource", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1363, "tokens": 0, "vector": null, "score": 0}, {"text": "uh conscious thing to do with protein", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1364, "tokens": 0, "vector": null, "score": 0}, {"text": "because you don't have to spin up your", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1365, "tokens": 0, "vector": null, "score": 0}, {"text": "own GPU machine some of these really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1366, "tokens": 0, "vector": null, "score": 0}, {"text": "large models are not even feasible to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1367, "tokens": 0, "vector": null, "score": 0}, {"text": "train for smaller companies but then", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1368, "tokens": 0, "vector": null, "score": 0}, {"text": "like there's these much more very", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1369, "tokens": 0, "vector": null, "score": 0}, {"text": "interesting Pathways to to fine-tune", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1370, "tokens": 0, "vector": null, "score": 0}, {"text": "models now", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1371, "tokens": 0, "vector": null, "score": 0}, {"text": "so I think actually um and we're", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1372, "tokens": 0, "vector": null, "score": 0}, {"text": "thinking about this like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1373, "tokens": 0, "vector": null, "score": 0}, {"text": "completely", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1374, "tokens": 0, "vector": null, "score": 0}, {"text": "um dismissing the the neural layer that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1375, "tokens": 0, "vector": null, "score": 0}, {"text": "actually is below below the text layer", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1376, "tokens": 0, "vector": null, "score": 0}, {"text": "that we have now is I think it's it's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1377, "tokens": 0, "vector": null, "score": 0}, {"text": "not um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1378, "tokens": 0, "vector": null, "score": 0}, {"text": "we shouldn't do this like I think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1379, "tokens": 0, "vector": null, "score": 0}, {"text": "there's lots of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1380, "tokens": 0, "vector": null, "score": 0}, {"text": "um bottlenecking like the text layer is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1381, "tokens": 0, "vector": null, "score": 0}, {"text": "actually a bottleneck like especially if", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1382, "tokens": 0, "vector": null, "score": 0}, {"text": "you chain multiple chords together", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1383, "tokens": 0, "vector": null, "score": 0}, {"text": "um lots of information is lost in just", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1384, "tokens": 0, "vector": null, "score": 0}, {"text": "putting the output text of one call into", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1385, "tokens": 0, "vector": null, "score": 0}, {"text": "the next call like the model has very", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1386, "tokens": 0, "vector": null, "score": 0}, {"text": "rich representations internally so I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1387, "tokens": 0, "vector": null, "score": 0}, {"text": "think actually composing models and also", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1388, "tokens": 0, "vector": null, "score": 0}, {"text": "large pre-trend models on a neural level", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1389, "tokens": 0, "vector": null, "score": 0}, {"text": "like actually passing hidden States", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1390, "tokens": 0, "vector": null, "score": 0}, {"text": "latent representations along this could", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1391, "tokens": 0, "vector": null, "score": 0}, {"text": "be really interesting in the future", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1392, "tokens": 0, "vector": null, "score": 0}, {"text": "obviously for now it's also a resource", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1393, "tokens": 0, "vector": null, "score": 0}, {"text": "issue like you need gpus you need to run", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1394, "tokens": 0, "vector": null, "score": 0}, {"text": "this model small or less locally to do", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1395, "tokens": 0, "vector": null, "score": 0}, {"text": "this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1396, "tokens": 0, "vector": null, "score": 0}, {"text": "um but yeah thinking longer into the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1397, "tokens": 0, "vector": null, "score": 0}, {"text": "future I think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1398, "tokens": 0, "vector": null, "score": 0}, {"text": "we may even go back to the neural layer", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1399, "tokens": 0, "vector": null, "score": 0}, {"text": "not say on the text layer I think text", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1400, "tokens": 0, "vector": null, "score": 0}, {"text": "layer is also something that was born", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1401, "tokens": 0, "vector": null, "score": 0}, {"text": "out of the practicality and and for", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1402, "tokens": 0, "vector": null, "score": 0}, {"text": "economical reasons", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1403, "tokens": 0, "vector": null, "score": 0}, {"text": "so oh this is it's really really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1404, "tokens": 0, "vector": null, "score": 0}, {"text": "interesting I like I'm really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1405, "tokens": 0, "vector": null, "score": 0}, {"text": "fascinating in these architectures like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1406, "tokens": 0, "vector": null, "score": 0}, {"text": "retro Fusion indicator memorizing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1407, "tokens": 0, "vector": null, "score": 0}, {"text": "Transformers long llamas one that John", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1408, "tokens": 0, "vector": null, "score": 0}, {"text": "trengrove at levia sent to me today just", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1409, "tokens": 0, "vector": null, "score": 0}, {"text": "like the latest iteration of this where", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1410, "tokens": 0, "vector": null, "score": 0}, {"text": "you you know you have the um attention", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1411, "tokens": 0, "vector": null, "score": 0}, {"text": "over vectors retrieved by something like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1412, "tokens": 0, "vector": null, "score": 0}, {"text": "a vector I don't want to say Vector", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1413, "tokens": 0, "vector": null, "score": 0}, {"text": "database because you know like a vector", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1414, "tokens": 0, "vector": null, "score": 0}, {"text": "index like it's something to facilitate", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1415, "tokens": 0, "vector": null, "score": 0}, {"text": "approximate nearest neighbor search at", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1416, "tokens": 0, "vector": null, "score": 0}, {"text": "like absolutely enormous scale and then", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1417, "tokens": 0, "vector": null, "score": 0}, {"text": "the difference is instead of just", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1418, "tokens": 0, "vector": null, "score": 0}, {"text": "putting that in the input layer you put", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1419, "tokens": 0, "vector": null, "score": 0}, {"text": "it in layer like eight out of 12 of the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1420, "tokens": 0, "vector": null, "score": 0}, {"text": "Transformer and it attends over those", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1421, "tokens": 0, "vector": null, "score": 0}, {"text": "latent representations and you could", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1422, "tokens": 0, "vector": null, "score": 0}, {"text": "imagine like there's this other paper", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1423, "tokens": 0, "vector": null, "score": 0}, {"text": "called uh Transformers are Universal", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1424, "tokens": 0, "vector": null, "score": 0}, {"text": "computation engines or something that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1425, "tokens": 0, "vector": null, "score": 0}, {"text": "shows that image embedding spaces can be", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1426, "tokens": 0, "vector": null, "score": 0}, {"text": "processed by text embedding models and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1427, "tokens": 0, "vector": null, "score": 0}, {"text": "when you give it the latent space and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1428, "tokens": 0, "vector": null, "score": 0}, {"text": "the intermediate layer not the input so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1429, "tokens": 0, "vector": null, "score": 0}, {"text": "and then you're describing this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1430, "tokens": 0, "vector": null, "score": 0}, {"text": "composability thing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1431, "tokens": 0, "vector": null, "score": 0}, {"text": "so it's like this idea of having some", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1432, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of debugging for that kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1433, "tokens": 0, "vector": null, "score": 0}, {"text": "architecture as well that kind of like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1434, "tokens": 0, "vector": null, "score": 0}, {"text": "intermediate so so yeah like um how do", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1435, "tokens": 0, "vector": null, "score": 0}, {"text": "you see those kind of architectures", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1436, "tokens": 0, "vector": null, "score": 0}, {"text": "being realized though is it going to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1437, "tokens": 0, "vector": null, "score": 0}, {"text": "take someone you know just just trying", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1438, "tokens": 0, "vector": null, "score": 0}, {"text": "to you know change out maybe one of the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1439, "tokens": 0, "vector": null, "score": 0}, {"text": "open models like MPT or falcon or say", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1440, "tokens": 0, "vector": null, "score": 0}, {"text": "you know gbt3 is modified to have this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1441, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of extension because you know like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1442, "tokens": 0, "vector": null, "score": 0}, {"text": "what's kind of the state of that like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1443, "tokens": 0, "vector": null, "score": 0}, {"text": "putting the latent representations in", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1444, "tokens": 0, "vector": null, "score": 0}, {"text": "the middle of other models and combining", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1445, "tokens": 0, "vector": null, "score": 0}, {"text": "models and then combining models that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1446, "tokens": 0, "vector": null, "score": 0}, {"text": "way it's really fascinating stuff", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1447, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah so I mean I think um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1448, "tokens": 0, "vector": null, "score": 0}, {"text": "if we look at open air what they do", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1449, "tokens": 0, "vector": null, "score": 0}, {"text": "um currently they're very into this we", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1450, "tokens": 0, "vector": null, "score": 0}, {"text": "have a text-based API you put text and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1451, "tokens": 0, "vector": null, "score": 0}, {"text": "you get text out and the chat apis are", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1452, "tokens": 0, "vector": null, "score": 0}, {"text": "much more limited than the previous", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1453, "tokens": 0, "vector": null, "score": 0}, {"text": "completion apis they're moving more", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1454, "tokens": 0, "vector": null, "score": 0}, {"text": "towards this it's a match function it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1455, "tokens": 0, "vector": null, "score": 0}, {"text": "does sometimes that's what you want it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1456, "tokens": 0, "vector": null, "score": 0}, {"text": "to do", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1457, "tokens": 0, "vector": null, "score": 0}, {"text": "um obviously that's actually moving away", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1458, "tokens": 0, "vector": null, "score": 0}, {"text": "from this interface that we would need", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1459, "tokens": 0, "vector": null, "score": 0}, {"text": "to implement more um neurally based", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1460, "tokens": 0, "vector": null, "score": 0}, {"text": "systems and so I guess to do this right", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1461, "tokens": 0, "vector": null, "score": 0}, {"text": "now the only way is to actually work", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1462, "tokens": 0, "vector": null, "score": 0}, {"text": "with open models", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1463, "tokens": 0, "vector": null, "score": 0}, {"text": "um I also can see if this actually works", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1464, "tokens": 0, "vector": null, "score": 0}, {"text": "out like I'm sure many people work on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1465, "tokens": 0, "vector": null, "score": 0}, {"text": "these kind of issues also already if", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1466, "tokens": 0, "vector": null, "score": 0}, {"text": "this in the end", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1467, "tokens": 0, "vector": null, "score": 0}, {"text": "um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1468, "tokens": 0, "vector": null, "score": 0}, {"text": "as promising also to them I can imagine", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1469, "tokens": 0, "vector": null, "score": 0}, {"text": "them opening this up maybe providing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1470, "tokens": 0, "vector": null, "score": 0}, {"text": "some kind of platform", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1471, "tokens": 0, "vector": null, "score": 0}, {"text": "I mean at this point we don't know", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1472, "tokens": 0, "vector": null, "score": 0}, {"text": "um I think for now we are", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1473, "tokens": 0, "vector": null, "score": 0}, {"text": "even open it as GPU constrained at least", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1474, "tokens": 0, "vector": null, "score": 0}, {"text": "this further now so actually exposing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1475, "tokens": 0, "vector": null, "score": 0}, {"text": "this kind of much deeper", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1476, "tokens": 0, "vector": null, "score": 0}, {"text": "um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1477, "tokens": 0, "vector": null, "score": 0}, {"text": "interface would be difficult for now", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1478, "tokens": 0, "vector": null, "score": 0}, {"text": "and probably also from a proprietary", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1479, "tokens": 0, "vector": null, "score": 0}, {"text": "perspective not too smart like if you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1480, "tokens": 0, "vector": null, "score": 0}, {"text": "leak your hidden States model", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1481, "tokens": 0, "vector": null, "score": 0}, {"text": "distillation becomes much easier of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1482, "tokens": 0, "vector": null, "score": 0}, {"text": "course so yeah I guess if you want to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1483, "tokens": 0, "vector": null, "score": 0}, {"text": "implement this today you will probably", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1484, "tokens": 0, "vector": null, "score": 0}, {"text": "have to withhold two open models", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1485, "tokens": 0, "vector": null, "score": 0}, {"text": "um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1486, "tokens": 0, "vector": null, "score": 0}, {"text": "and then for other things more", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1487, "tokens": 0, "vector": null, "score": 0}, {"text": "proprietary apis it will be interesting", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1488, "tokens": 0, "vector": null, "score": 0}, {"text": "to see a red interfaces go like our chip", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1489, "tokens": 0, "vector": null, "score": 0}, {"text": "D4 will also at some point accept image", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1490, "tokens": 0, "vector": null, "score": 0}, {"text": "input which will be a limited form of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1491, "tokens": 0, "vector": null, "score": 0}, {"text": "this or less red you can now also embed", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1492, "tokens": 0, "vector": null, "score": 0}, {"text": "some image and this will be passed", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1493, "tokens": 0, "vector": null, "score": 0}, {"text": "through to the text model to be", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1494, "tokens": 0, "vector": null, "score": 0}, {"text": "processed by the text model", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1495, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah it's hard to tell at this point I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1496, "tokens": 0, "vector": null, "score": 0}, {"text": "think um resource constraints", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1497, "tokens": 0, "vector": null, "score": 0}, {"text": "it's for everyone with those constraints", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1498, "tokens": 0, "vector": null, "score": 0}, {"text": "are currently the bottleneck to do this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1499, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah it's totally this is this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1500, "tokens": 0, "vector": null, "score": 0}, {"text": "conversation has totally opened my eyes", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1501, "tokens": 0, "vector": null, "score": 0}, {"text": "to how this is I've heard these things", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1502, "tokens": 0, "vector": null, "score": 0}, {"text": "that those these rumors on Twitter and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1503, "tokens": 0, "vector": null, "score": 0}, {"text": "so on that gbt4 is like a mixture of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1504, "tokens": 0, "vector": null, "score": 0}, {"text": "experts model and I think the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1505, "tokens": 0, "vector": null, "score": 0}, {"text": "architecture of mixture of experts is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1506, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of like a composable model in one", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1507, "tokens": 0, "vector": null, "score": 0}, {"text": "it kind of reminds me of just like you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1508, "tokens": 0, "vector": null, "score": 0}, {"text": "know like lottery ticket hypothesis", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1509, "tokens": 0, "vector": null, "score": 0}, {"text": "showing that sparse networks can you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1510, "tokens": 0, "vector": null, "score": 0}, {"text": "know carry the burden and so it probably", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1511, "tokens": 0, "vector": null, "score": 0}, {"text": "what happens is we have this like mix of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1512, "tokens": 0, "vector": null, "score": 0}, {"text": "sparse networks it's kind of like that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1513, "tokens": 0, "vector": null, "score": 0}, {"text": "um a thousand brains Theory uh it's been", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1514, "tokens": 0, "vector": null, "score": 0}, {"text": "a long time since I reflected that but", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1515, "tokens": 0, "vector": null, "score": 0}, {"text": "like that kind of idea that you you have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1516, "tokens": 0, "vector": null, "score": 0}, {"text": "this kind of composability within dense", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1517, "tokens": 0, "vector": null, "score": 0}, {"text": "architectures as is but if you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1518, "tokens": 0, "vector": null, "score": 0}, {"text": "explicitly separate it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1519, "tokens": 0, "vector": null, "score": 0}, {"text": "hi so I mean it really makes me think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1520, "tokens": 0, "vector": null, "score": 0}, {"text": "about like whether Vector indexes would", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1521, "tokens": 0, "vector": null, "score": 0}, {"text": "compose embeddings from multiple models", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1522, "tokens": 0, "vector": null, "score": 0}, {"text": "as well it's not something I've ever", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1523, "tokens": 0, "vector": null, "score": 0}, {"text": "thought about like having like open AI", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1524, "tokens": 0, "vector": null, "score": 0}, {"text": "embeddings as well as clip and uh like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1525, "tokens": 0, "vector": null, "score": 0}, {"text": "you know the Ada two text embeddings", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1526, "tokens": 0, "vector": null, "score": 0}, {"text": "with the clip embeddings like totally", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1527, "tokens": 0, "vector": null, "score": 0}, {"text": "separate models but in the same kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1528, "tokens": 0, "vector": null, "score": 0}, {"text": "index and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1529, "tokens": 0, "vector": null, "score": 0}, {"text": "uh yeah there's just so many interesting", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1530, "tokens": 0, "vector": null, "score": 0}, {"text": "ideas to that I think really so yeah uh", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1531, "tokens": 0, "vector": null, "score": 0}, {"text": "so yeah it definitely got on the train", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1532, "tokens": 0, "vector": null, "score": 0}, {"text": "of thinking towards the future it you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1533, "tokens": 0, "vector": null, "score": 0}, {"text": "know I think we're mostly thinking of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1534, "tokens": 0, "vector": null, "score": 0}, {"text": "composing model inferences purely", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1535, "tokens": 0, "vector": null, "score": 0}, {"text": "through the text input text output kind", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1536, "tokens": 0, "vector": null, "score": 0}, {"text": "of landscape do you think like I think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1537, "tokens": 0, "vector": null, "score": 0}, {"text": "we're we might be dreaming a little bit", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1538, "tokens": 0, "vector": null, "score": 0}, {"text": "do you think that's how long do you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1539, "tokens": 0, "vector": null, "score": 0}, {"text": "think that'll still be the most common", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1540, "tokens": 0, "vector": null, "score": 0}, {"text": "way of interfacing models with each", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1541, "tokens": 0, "vector": null, "score": 0}, {"text": "other", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1542, "tokens": 0, "vector": null, "score": 0}, {"text": "wow I mean at this point it's really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1543, "tokens": 0, "vector": null, "score": 0}, {"text": "hard to say things are moving so fast", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1544, "tokens": 0, "vector": null, "score": 0}, {"text": "although yeah", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1545, "tokens": 0, "vector": null, "score": 0}, {"text": "it's really hard to tell like at this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1546, "tokens": 0, "vector": null, "score": 0}, {"text": "point", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1547, "tokens": 0, "vector": null, "score": 0}, {"text": "um bigger shops closing down more and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1548, "tokens": 0, "vector": null, "score": 0}, {"text": "more means also that any day someone", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1549, "tokens": 0, "vector": null, "score": 0}, {"text": "with some new model this has something", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1550, "tokens": 0, "vector": null, "score": 0}, {"text": "bigger and and the tire research fields", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1551, "tokens": 0, "vector": null, "score": 0}, {"text": "are being disrupted by this more or less", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1552, "tokens": 0, "vector": null, "score": 0}, {"text": "so it's hard to tell where this is going", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1553, "tokens": 0, "vector": null, "score": 0}, {"text": "um I think from a programming", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1554, "tokens": 0, "vector": null, "score": 0}, {"text": "perspective the text layer definitely is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1555, "tokens": 0, "vector": null, "score": 0}, {"text": "something very accessible like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1556, "tokens": 0, "vector": null, "score": 0}, {"text": "coming from PL", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1557, "tokens": 0, "vector": null, "score": 0}, {"text": "having a model that takes natural", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1558, "tokens": 0, "vector": null, "score": 0}, {"text": "language input and thus more or less", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1559, "tokens": 0, "vector": null, "score": 0}, {"text": "what you tell it to do is the best", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1560, "tokens": 0, "vector": null, "score": 0}, {"text": "programming language in the world right", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1561, "tokens": 0, "vector": null, "score": 0}, {"text": "it's just natural language", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1562, "tokens": 0, "vector": null, "score": 0}, {"text": "and there's this incredibly accessible", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1563, "tokens": 0, "vector": null, "score": 0}, {"text": "to so many people that's also read so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1564, "tokens": 0, "vector": null, "score": 0}, {"text": "many people use chat GPT because they", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1565, "tokens": 0, "vector": null, "score": 0}, {"text": "essentially", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1566, "tokens": 0, "vector": null, "score": 0}, {"text": "they're essentially just overnight learn", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1567, "tokens": 0, "vector": null, "score": 0}, {"text": "to code because they can just instruct", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1568, "tokens": 0, "vector": null, "score": 0}, {"text": "your computer to do something and it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1569, "tokens": 0, "vector": null, "score": 0}, {"text": "doesn't and like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1570, "tokens": 0, "vector": null, "score": 0}, {"text": "having a lot of passion about coding I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1571, "tokens": 0, "vector": null, "score": 0}, {"text": "get them like obviously this is amazing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1572, "tokens": 0, "vector": null, "score": 0}, {"text": "to them having disability now and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1573, "tokens": 0, "vector": null, "score": 0}, {"text": "but so in that sense I think the text", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1574, "tokens": 0, "vector": null, "score": 0}, {"text": "layer is really interesting as an input", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1575, "tokens": 0, "vector": null, "score": 0}, {"text": "as an output of course you can also do", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1576, "tokens": 0, "vector": null, "score": 0}, {"text": "images I've seen really cool projects", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1577, "tokens": 0, "vector": null, "score": 0}, {"text": "about", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1578, "tokens": 0, "vector": null, "score": 0}, {"text": "models outputting code that then renders", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1579, "tokens": 0, "vector": null, "score": 0}, {"text": "as user interface this is also really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1580, "tokens": 0, "vector": null, "score": 0}, {"text": "cool like personally I've grown a bit", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1581, "tokens": 0, "vector": null, "score": 0}, {"text": "tired of reading long wordy paragraphs", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1582, "tokens": 0, "vector": null, "score": 0}, {"text": "of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1583, "tokens": 0, "vector": null, "score": 0}, {"text": "a language model output like the scenes", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1584, "tokens": 0, "vector": null, "score": 0}, {"text": "this seems to take it like for my", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1585, "tokens": 0, "vector": null, "score": 0}, {"text": "present test this takes too long I will", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1586, "tokens": 0, "vector": null, "score": 0}, {"text": "tell you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1587, "tokens": 0, "vector": null, "score": 0}, {"text": "um effective in taking out up this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1588, "tokens": 0, "vector": null, "score": 0}, {"text": "config information", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1589, "tokens": 0, "vector": null, "score": 0}, {"text": "um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1590, "tokens": 0, "vector": null, "score": 0}, {"text": "so yeah I think there's lots of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1591, "tokens": 0, "vector": null, "score": 0}, {"text": "um benefits to the text layer", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1592, "tokens": 0, "vector": null, "score": 0}, {"text": "um especially for like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1593, "tokens": 0, "vector": null, "score": 0}, {"text": "everyone that's not super technical and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1594, "tokens": 0, "vector": null, "score": 0}, {"text": "wants just wants to use some some", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1595, "tokens": 0, "vector": null, "score": 0}, {"text": "chatbot API or some chatbot interface to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1596, "tokens": 0, "vector": null, "score": 0}, {"text": "get some answers to their questions", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1597, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I think I mean this whole", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1598, "tokens": 0, "vector": null, "score": 0}, {"text": "perspective I think most of the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1599, "tokens": 0, "vector": null, "score": 0}, {"text": "llm Frameworks I don't like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1600, "tokens": 0, "vector": null, "score": 0}, {"text": "I guess it's like I still think of lmql", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1601, "tokens": 0, "vector": null, "score": 0}, {"text": "this way even though I think of you as a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1602, "tokens": 0, "vector": null, "score": 0}, {"text": "scientist like like I think what we're", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1603, "tokens": 0, "vector": null, "score": 0}, {"text": "talking like what we started talking", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1604, "tokens": 0, "vector": null, "score": 0}, {"text": "about about discomposable models I still", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1605, "tokens": 0, "vector": null, "score": 0}, {"text": "don't quite understand how that would", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1606, "tokens": 0, "vector": null, "score": 0}, {"text": "work and Allen kill quite yet but I'm", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1607, "tokens": 0, "vector": null, "score": 0}, {"text": "sure that you'll figure that out but it", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1608, "tokens": 0, "vector": null, "score": 0}, {"text": "just like um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1609, "tokens": 0, "vector": null, "score": 0}, {"text": "like moving past text being the how the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1610, "tokens": 0, "vector": null, "score": 0}, {"text": "bottleneck for uh language model chains", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1611, "tokens": 0, "vector": null, "score": 0}, {"text": "language model tools interacting with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1612, "tokens": 0, "vector": null, "score": 0}, {"text": "others even just with embedding so like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1613, "tokens": 0, "vector": null, "score": 0}, {"text": "maybe let me take a step back and tell", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1614, "tokens": 0, "vector": null, "score": 0}, {"text": "this kind of like you know like we have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1615, "tokens": 0, "vector": null, "score": 0}, {"text": "this feature in weba called ref to VEC", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1616, "tokens": 0, "vector": null, "score": 0}, {"text": "that we often use for recommendations so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1617, "tokens": 0, "vector": null, "score": 0}, {"text": "you know I'm Connor and I like these", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1618, "tokens": 0, "vector": null, "score": 0}, {"text": "three basketball shoes and so then I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1619, "tokens": 0, "vector": null, "score": 0}, {"text": "have like this Vector that captures my", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1620, "tokens": 0, "vector": null, "score": 0}, {"text": "taste in basketball shoes or like say my", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1621, "tokens": 0, "vector": null, "score": 0}, {"text": "taste in movies right and then I have", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1622, "tokens": 0, "vector": null, "score": 0}, {"text": "Lucas taste in movies and maybe we find", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1623, "tokens": 0, "vector": null, "score": 0}, {"text": "some you know we average these vectors", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1624, "tokens": 0, "vector": null, "score": 0}, {"text": "and then a generative model you know", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1625, "tokens": 0, "vector": null, "score": 0}, {"text": "produces a movie that would be something", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1626, "tokens": 0, "vector": null, "score": 0}, {"text": "that me and Luca would like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1627, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah it's kind of like moving into", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1628, "tokens": 0, "vector": null, "score": 0}, {"text": "tensors or vectors I mean how do llm", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1629, "tokens": 0, "vector": null, "score": 0}, {"text": "Frameworks get there like it's such a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1630, "tokens": 0, "vector": null, "score": 0}, {"text": "it's such a eye-opening idea", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1631, "tokens": 0, "vector": null, "score": 0}, {"text": "I think it's totally different Paradigm", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1632, "tokens": 0, "vector": null, "score": 0}, {"text": "like I I think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1633, "tokens": 0, "vector": null, "score": 0}, {"text": "and and it makes sense like we're", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1634, "tokens": 0, "vector": null, "score": 0}, {"text": "currently building things for the text", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1635, "tokens": 0, "vector": null, "score": 0}, {"text": "layer and and this is really cool and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1636, "tokens": 0, "vector": null, "score": 0}, {"text": "fun if we I think this would be a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1637, "tokens": 0, "vector": null, "score": 0}, {"text": "different thing like there would be I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1638, "tokens": 0, "vector": null, "score": 0}, {"text": "guess different abstractions I mean I'm", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1639, "tokens": 0, "vector": null, "score": 0}, {"text": "not even convinced that we landed on the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1640, "tokens": 0, "vector": null, "score": 0}, {"text": "right abstractions currently on the text", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1641, "tokens": 0, "vector": null, "score": 0}, {"text": "layer there and also the models are", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1642, "tokens": 0, "vector": null, "score": 0}, {"text": "still moving so so who knows where this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1643, "tokens": 0, "vector": null, "score": 0}, {"text": "will go like essentially we just have to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1644, "tokens": 0, "vector": null, "score": 0}, {"text": "try out most things and then see what", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1645, "tokens": 0, "vector": null, "score": 0}, {"text": "works right and then", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1646, "tokens": 0, "vector": null, "score": 0}, {"text": "going to this more um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1647, "tokens": 0, "vector": null, "score": 0}, {"text": "like I would say that what you propose", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1648, "tokens": 0, "vector": null, "score": 0}, {"text": "this sort of averaging of vectors and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1649, "tokens": 0, "vector": null, "score": 0}, {"text": "then putting this into a model that this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1650, "tokens": 0, "vector": null, "score": 0}, {"text": "is definitely some form of composable or", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1651, "tokens": 0, "vector": null, "score": 0}, {"text": "programmable model and at that point", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1652, "tokens": 0, "vector": null, "score": 0}, {"text": "right you you really Define a program of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1653, "tokens": 0, "vector": null, "score": 0}, {"text": "what you want and then the model sort of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1654, "tokens": 0, "vector": null, "score": 0}, {"text": "executes steps that that you um Define", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1655, "tokens": 0, "vector": null, "score": 0}, {"text": "your algorithm right so um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1656, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I mean I mean", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1657, "tokens": 0, "vector": null, "score": 0}, {"text": "I think it's it's probably not a time", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1658, "tokens": 0, "vector": null, "score": 0}, {"text": "yet that this actually works or this is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1659, "tokens": 0, "vector": null, "score": 0}, {"text": "actually", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1660, "tokens": 0, "vector": null, "score": 0}, {"text": "um something people do or build", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1661, "tokens": 0, "vector": null, "score": 0}, {"text": "I mean in research for sure but but like", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1662, "tokens": 0, "vector": null, "score": 0}, {"text": "not optional on the level of llm and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1663, "tokens": 0, "vector": null, "score": 0}, {"text": "tooling", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1664, "tokens": 0, "vector": null, "score": 0}, {"text": "um but once this actually becomes", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1665, "tokens": 0, "vector": null, "score": 0}, {"text": "possible I think also lots of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1666, "tokens": 0, "vector": null, "score": 0}, {"text": "interesting new programming ideas will", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1667, "tokens": 0, "vector": null, "score": 0}, {"text": "come up no new Frameworks new languages", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1668, "tokens": 0, "vector": null, "score": 0}, {"text": "and yeah with the current lmgl", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1669, "tokens": 0, "vector": null, "score": 0}, {"text": "um I think we would move a lot in the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1670, "tokens": 0, "vector": null, "score": 0}, {"text": "presence of such a such thing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1671, "tokens": 0, "vector": null, "score": 0}, {"text": "amazing Luca thank you so much I think", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1672, "tokens": 0, "vector": null, "score": 0}, {"text": "you know just um you know firstly", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1673, "tokens": 0, "vector": null, "score": 0}, {"text": "understanding lmql when I first saw I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1674, "tokens": 0, "vector": null, "score": 0}, {"text": "think just like you know when I first", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1675, "tokens": 0, "vector": null, "score": 0}, {"text": "saw the lmql my first impression", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1676, "tokens": 0, "vector": null, "score": 0}, {"text": "personally was it reminded me of levier", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1677, "tokens": 0, "vector": null, "score": 0}, {"text": "design how we have kind of like a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1678, "tokens": 0, "vector": null, "score": 0}, {"text": "graphql API as well as these client", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1679, "tokens": 0, "vector": null, "score": 0}, {"text": "libraries and you kind of can see the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1680, "tokens": 0, "vector": null, "score": 0}, {"text": "difference in in my opinion it's easier", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1681, "tokens": 0, "vector": null, "score": 0}, {"text": "to design the graphql and I because I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1682, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of feel like the syntax of lmql", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1683, "tokens": 0, "vector": null, "score": 0}, {"text": "looks like that compared to a lot of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1684, "tokens": 0, "vector": null, "score": 0}, {"text": "these Frameworks like you know I don't", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1685, "tokens": 0, "vector": null, "score": 0}, {"text": "want to name them but like that require", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1686, "tokens": 0, "vector": null, "score": 0}, {"text": "all this buy-in you know this is a", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1687, "tokens": 0, "vector": null, "score": 0}, {"text": "little more open-ended than that so I", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1688, "tokens": 0, "vector": null, "score": 0}, {"text": "was always already super impressed with", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1689, "tokens": 0, "vector": null, "score": 0}, {"text": "lmql the lmql playground is a visual", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1690, "tokens": 0, "vector": null, "score": 0}, {"text": "thing I'd highly recommend people to see", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1691, "tokens": 0, "vector": null, "score": 0}, {"text": "that because it's it's brilliant really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1692, "tokens": 0, "vector": null, "score": 0}, {"text": "it the way that it lets you visualize", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1693, "tokens": 0, "vector": null, "score": 0}, {"text": "this complex prompt uh execution is", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1694, "tokens": 0, "vector": null, "score": 0}, {"text": "really super novel and then those ideas", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1695, "tokens": 0, "vector": null, "score": 0}, {"text": "around structured output parsing that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1696, "tokens": 0, "vector": null, "score": 0}, {"text": "kind of like wear clause in the lmql", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1697, "tokens": 0, "vector": null, "score": 0}, {"text": "syntax and how that restricts the thing", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1698, "tokens": 0, "vector": null, "score": 0}, {"text": "all amazing stuff and then start adding", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1699, "tokens": 0, "vector": null, "score": 0}, {"text": "more thing but how lmql already", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1700, "tokens": 0, "vector": null, "score": 0}, {"text": "integrates with llama index Lang chain", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1701, "tokens": 0, "vector": null, "score": 0}, {"text": "you know is something you can kind of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1702, "tokens": 0, "vector": null, "score": 0}, {"text": "get running with and then it just kind", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1703, "tokens": 0, "vector": null, "score": 0}, {"text": "of towards the end of our conversation", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1704, "tokens": 0, "vector": null, "score": 0}, {"text": "this discussion of you know the text", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1705, "tokens": 0, "vector": null, "score": 0}, {"text": "bottleneck that just really opened my", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1706, "tokens": 0, "vector": null, "score": 0}, {"text": "eyes into how the space could evolve so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1707, "tokens": 0, "vector": null, "score": 0}, {"text": "you know Luca thank you so much for the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1708, "tokens": 0, "vector": null, "score": 0}, {"text": "podcast I think you're you know building", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1709, "tokens": 0, "vector": null, "score": 0}, {"text": "a super incredible tool and you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1710, "tokens": 0, "vector": null, "score": 0}, {"text": "definitely have the Visionary aspect of", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1711, "tokens": 0, "vector": null, "score": 0}, {"text": "seeing where this technology is headed", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1712, "tokens": 0, "vector": null, "score": 0}, {"text": "uh before we wrap up could you give", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1713, "tokens": 0, "vector": null, "score": 0}, {"text": "listeners like your media like how to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1714, "tokens": 0, "vector": null, "score": 0}, {"text": "follow along with you like are you", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1715, "tokens": 0, "vector": null, "score": 0}, {"text": "primary publishing papers are you on", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1716, "tokens": 0, "vector": null, "score": 0}, {"text": "Twitter", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1717, "tokens": 0, "vector": null, "score": 0}, {"text": "they are definitely um you can I mean", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1718, "tokens": 0, "vector": null, "score": 0}, {"text": "lmgl you just find at lmgl.ai", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1719, "tokens": 0, "vector": null, "score": 0}, {"text": "we also have Twitter account", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1720, "tokens": 0, "vector": null, "score": 0}, {"text": "um and I'm also on Twitter um our", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1721, "tokens": 0, "vector": null, "score": 0}, {"text": "calendar maybe we can link it somewhere", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1722, "tokens": 0, "vector": null, "score": 0}, {"text": "you can follow me there", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1723, "tokens": 0, "vector": null, "score": 0}, {"text": "um", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1724, "tokens": 0, "vector": null, "score": 0}, {"text": "and yeah also please if you want to try", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1725, "tokens": 0, "vector": null, "score": 0}, {"text": "out lmql do so we have the Discord we", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1726, "tokens": 0, "vector": null, "score": 0}, {"text": "always most of the time we're online and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1727, "tokens": 0, "vector": null, "score": 0}, {"text": "helping people also so please feel free", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1728, "tokens": 0, "vector": null, "score": 0}, {"text": "to reach out there as well and and happy", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1729, "tokens": 0, "vector": null, "score": 0}, {"text": "to help and discuss also like more", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1730, "tokens": 0, "vector": null, "score": 0}, {"text": "broadly and then I'm programming and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1731, "tokens": 0, "vector": null, "score": 0}, {"text": "right this can go yeah and thank you so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1732, "tokens": 0, "vector": null, "score": 0}, {"text": "much for having me yeah well quickly let", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1733, "tokens": 0, "vector": null, "score": 0}, {"text": "me ask I'm curious about your", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1734, "tokens": 0, "vector": null, "score": 0}, {"text": "perspectives on this Discord uh", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1735, "tokens": 0, "vector": null, "score": 0}, {"text": "Community how has your experience been", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1736, "tokens": 0, "vector": null, "score": 0}, {"text": "building something like that for a new", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1737, "tokens": 0, "vector": null, "score": 0}, {"text": "technology like this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1738, "tokens": 0, "vector": null, "score": 0}, {"text": "um it's it's", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1739, "tokens": 0, "vector": null, "score": 0}, {"text": "um I actually really like interacting", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1740, "tokens": 0, "vector": null, "score": 0}, {"text": "with people talk to them a lot", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1741, "tokens": 0, "vector": null, "score": 0}, {"text": "um it's a bit overwhelming to be honest", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1742, "tokens": 0, "vector": null, "score": 0}, {"text": "this is my first open source project at", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1743, "tokens": 0, "vector": null, "score": 0}, {"text": "this scale it's a lot of support", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1744, "tokens": 0, "vector": null, "score": 0}, {"text": "requests and all of us and the team", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1745, "tokens": 0, "vector": null, "score": 0}, {"text": "already have full-time jobs so", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1746, "tokens": 0, "vector": null, "score": 0}, {"text": "essentially it's another full-time job", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1747, "tokens": 0, "vector": null, "score": 0}, {"text": "to do this um but at the same time the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1748, "tokens": 0, "vector": null, "score": 0}, {"text": "community feedback also has been quite", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1749, "tokens": 0, "vector": null, "score": 0}, {"text": "quite amazing and and people start to", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1750, "tokens": 0, "vector": null, "score": 0}, {"text": "contribute", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1751, "tokens": 0, "vector": null, "score": 0}, {"text": "um and we are still like very much", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1752, "tokens": 0, "vector": null, "score": 0}, {"text": "welcoming everyone who wants to to hack", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1753, "tokens": 0, "vector": null, "score": 0}, {"text": "on lmgl", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1754, "tokens": 0, "vector": null, "score": 0}, {"text": "um brainstorm and", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1755, "tokens": 0, "vector": null, "score": 0}, {"text": "and also like happy to help out", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1756, "tokens": 0, "vector": null, "score": 0}, {"text": "beginners talk about the issues with NFL", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1757, "tokens": 0, "vector": null, "score": 0}, {"text": "maybe you didn't want to get something", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1758, "tokens": 0, "vector": null, "score": 0}, {"text": "running with totally I'm happy to help", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1759, "tokens": 0, "vector": null, "score": 0}, {"text": "with that", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1760, "tokens": 0, "vector": null, "score": 0}, {"text": "yeah I think it'll be it'll be a really", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1761, "tokens": 0, "vector": null, "score": 0}, {"text": "cool demonstration of um you know", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1762, "tokens": 0, "vector": null, "score": 0}, {"text": "Community feedback plus this science", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1763, "tokens": 0, "vector": null, "score": 0}, {"text": "this vision of it and yeah I'm super", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1764, "tokens": 0, "vector": null, "score": 0}, {"text": "excited to follow along with it Luca", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1765, "tokens": 0, "vector": null, "score": 0}, {"text": "thank you so much for joining the weba", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1766, "tokens": 0, "vector": null, "score": 0}, {"text": "podcast this is truly one of my", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1767, "tokens": 0, "vector": null, "score": 0}, {"text": "favorites I learned so much about the", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1768, "tokens": 0, "vector": null, "score": 0}, {"text": "large language model space and how this", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1769, "tokens": 0, "vector": null, "score": 0}, {"text": "can develop", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1770, "tokens": 0, "vector": null, "score": 0}, {"text": "thank you so much for having me Conor", "doc_name": "Luca Beurer-Kellner on LMQL - Weaviate Podcast #59!", "doc_type": "Video", "doc_uuid": "", "chunk_id": 1771, "tokens": 0, "vector": null, "score": 0}]}