{"text": "The hackathon project: https://github.com/liskovich/ricai_concept_proof Python Client update: ... \nforeign [Music] air we are so excited to have you here um so I'm Sebastian I have a great crew in here JP is here dudas here Mayans here but also we have a special guest Rica's viskovskis or Richards viskovskis he taught me how to pronounce his name just before they call and I already messed it up yay for me um so this is super exciting um yet another episode and uh we we know we're so happy to always do those sessions um so just a bit of you know what they call it home keeping no like uh basically housekeeping god um yes um so thank you all for watching and listening it's really great to have you here like as and then definitely give us a shout in the comments uh let us know where you watch from and we'll definitely give you a shout back um definitely uh please subscribe to our YouTube channel so that you always know when we beat air pops up uh and and any other content that we are creating uh please um ask questions as we go and I always say the same thing it's such a great thing that these sessions are live maybe you see uh this like with five seconds Delay from uh from when I say these words but it is kind of like let's say five seconds liveish uh where you can ask questions and react to everything that we say that we do if you like the demo that you'll be seeing later like you know share it with us or ask more questions and I will share it with everybody else and it's really great so thanks for watching and uh yeah be part of this shop and so the agenda is as follows so first we will start with Richards as our special guest uh who created a pretty cool project for a hackathon that he participated at it's called vki it's an autonomous testing agent but I don't want to spoil more about it uh than than that actually I don't know much more it's going to be as exciting for you as it is for me so Richard is going to show it for us next up we will be talking about the python client update uh we're almost there with like the rewrite of the Python client so and we have like some really cool things to show for you and if this is a new thing for you like you're gonna love it it's absolutely amazing um then you know the Autumn is coming Oktoberfest is almost here and we will be participating there will be some ways for uh all of you to kind of contribute and uh and help us out so why not um Duda is going to be at to nowhere so I will share a little bit of message around that it's going to be great and then at the end would like to try this time is try answer maybe some Community questions so we we do hear some questions from the community popping up on our Forum or on the community slack so we'll hand pick a couple of questions and maybe go over them have a quick discussion and that's kind of the idea so yeah just a reminder please subscribe and definitely thank you for watching thank you for being here um and then let's get cracking so our special guest uh Richards you participated in a hackathon tell us about it like what was the hackathon what did you do or introduce yourself as well in your own words okay so my name is Richards I'm from Latvia currently I am a second year a bachelor student at the Latin University and the hacked on like was it was like a super exciting opportunity not only to dive deeper in AI which was like one of the first experiences one of my first experience with a but also to develop and work on the idea which I really love myself which is a software development and the software testing and this facton which was organized by lab Lab AI was like especially very good for this as it's a not only offered you a choice to develop many interesting Solutions but also give you a wide range of tools you could try you could learn about and also play with so that's that's the cool part nice nice um yeah so I know you prepared like a little presentation to go over to kind of like explain yeah sure sure let's do that let's let's dive in right in so yeah uh the the idea which I personally worked on this hacked on was the autonomous software testing agent and my main motivation to do this do that because because of my previous experience in uh development especially back end and full stack development so while working with the company especially during internship periods as I'm a student I had a really good chance to not only work on interesting tasks but also to observe how where they evaluated The Who reviewed my code and all these aspects and I came to to the conclusion that the the topic of software development and more specifically software testing is quite important and the quality of the software is also really important so there are a couple of things which I personally uh like reviewed and observed is that understanding of code and the requirements are like maybe one of the most crucial parts and also the ability to explain to your development team colleagues uh how the code should work what's the problem why there are some things that don't work is also extremely important so that's why I decided to participate in this hacked on and the command with a solution which would hopefully simplify this process of testing software ensuring quality and communicating it back to the development team and here I would like to present you my overall diagram of how I worked with this solution and you can see that currently as this is only a hacked on project and I only started a really recently I focused on the main part which is uh understanding the code understanding the requirements as I mentioned which is essentially the the cruel part here uh what's what's the interesting point here is that uh we should be able to uh to test the application from different perspectives not only how it works internally like unit test or internal functions but also how it works all together combined and how it would help developers it would be automated it will be able to include in your already existing infrastructure like Ci or CD pipeline it would also provide you with feedback and parts which you could potentially improve in your software and one of my future ideas which I also came up with during the hacked on and I discussed with several others is that it should also be able to not only provide you feedback but also give improvements in the code itself and make those improvements but today I would like to maybe talk more in detail about exactly these software requirements and called storage questions so the software requirement specification as as I see it you just the explanation of how this specific software should work which we are interested to test and currently as we know there are many different types of software requirement specifications different formats and it's not quite easy to consolidate everything and put it in one place so what I'm currently working on is trying to like come up with a one or more like of standard standardized way how uh this tool this software testing agent would understand and parse the requirements into something more usable and the current approach I use for for things like PDFs or text files is converting them to more readable formats like more than splitting into smaller chunks and also saving to alleviate so that we can build our knowledge base with the with it and also use it later and the cool thing with leviate is that it already provides provided me in the hackathon this infrastructure and the great support so that I can do it much more easier with the code base it's uh quite a similar situation we we are also interested in understanding the code fully which means not only understanding the concept the the context of some specific code parts for some specific files but understanding detailing what are the code structures we see in each file like classes functions methods and Etc so the typical typical like workflow how I would do this is get these files from the either version control system or get on those from locally then split them into smaller parts as I said which are like basic structures of the language and again uh store them in the aviate vector storage for the easier and more efficient retrieval and when we have already prepared both a software requirements and the code base knowledge knowledge basis we can work forward and combine them and combining it is also one quite challenging aspect there are several approaches we could take here but personally during the hacked on I I'll find maybe the two approaches and the one which is the most simple and the most basic is going through the software requirements knowledge base and searching the relevance and the appropriate places in the code where these requirements are implemented this will not only ensure that all the code which is in requirement is implemented in real life is also a good option and a good good way to ensure that our application our testing agent has all the necessary context about the application we are willing to test and when we have this information we can pass it to llm for the further test case generation the other approach which I would say is more suitable in cases when we are maybe interested in testing only one part of code or ensuring more that specific feature of the code is implemented is when we start with looking at the code files which we are changing or we are working on and then finding the appropriate requirements which Define how these concrete exact places should work and as well when we and when we get this we also pass it forward to generate the test cases so I will I will show in a short period of time my current demo proof of concept and but but the main challenges I personally encountered during this hackathon and also currently when I continue to develop this idea was uh first of all the requirements in code management how do we ensure that we split those things into like really meaningful Parts like we split the requirement document into features where each feature belongs as well as code how do we split it so that it's a more readable of course in hackathon due to the lack of time maybe I use not demonstration or techniques like exploring everything into just one one file but the for future work it's important to consider these questions as well I experimented and try different embedding models and prompts and I'm also currently doing that to find like the optimal or maybe a more efficient way how can we uh like vectorize and also embed the information we have from the code and the software requirements and of course there are more technical challenges like creating the whole infrastructure for example from a to from A to B how we go from the code and the social requirements to be fully working tests and feedback providing to the team these are more technical questions and these are those which I would like to work afterwards I find out the answers to these main questions and now I would like to show a short uh proof of concept which I came up with so here it is this proof of concept is essentially takes a small portion of code this this is a very simple code it's just like calculating a basic mathematical calculations with some some variables and some rules of what should happen if the provided input is not in correct format hey Richard just one one sec could you zoom in a little bit like if you do like yeah yeah that's perfect yeah this is great great so about this is about the code I also uh I also shared this link with uh later so that you can you can access and view this proof of concept but then I provided the software requirement specification exactly for this code which specifies how each function for example calculate discount price or calculate square area should work what are the inputs what are the output values of this uh this is like you can imagine it's like a default template for a software requirement specification of course in the full version we would see something like a combined version it would be both textual formats maybe maybe some requirements are in the project management software like jira these jira tickets how it should work but for now it's just like this and this is the output the test cases in text format which we can see here for the specifically for the calculate discounts and as you can see for such a simple function there are quite many detailed these test cases which it generates and there are also the generated unit tests in this example I use unit test because it's more easier to demonstrate but we can see that yeah it generated for each the test case described in text it also provides us with the actual unit tests in a more production like environment I would like to include not only unit tests as I said but also more advanced tests like integration e to E H functional tests so that we so that we can look at this solution of this program for different perspectives to generate like like a really detailed and high quality feedback to our development team so that's shortly uh it's from me if you're interested in the exactly the hackathon solution which I worked on you can follow this link it's it's also provided in the proof of concept repository so thank you for having me and yeah let's connect perfect this was such a great overview and and by the way we've shared already one of the links in in the description of the video so if any of you want to see it it's uh it's there um so this is definitely great um I I really love it like so it it really like explained to me quite a lot like when you went like hey this is my uh description of the the requirements and then you just generated code from that uh that is so cool and did you did you run that code yourself to verify that the uni test passed but yeah actually when I yeah I run this code I also run the the previous character code of course there are like maybe some little changes if we look at this uh like here for example this this my module would not exist because I did not specifically Define it but conceptually all these uh like all these test cases they're taken from the like quietest like apply this function quite as the testing module so technically yeah they should they should be able to run so yeah but as it is a demo I'm still working on making it more quality like and also evaluating the result it provides to me so that there are like no weird we are dealt with with test cases which don't run nice question as well um so would the like um from from a more from a user perspective I would say right so uh what um uh your your agent tell the development team if they missed out on some specifications for example or um what would be like the business goal for I would say like you know if you have like like uh a development organization and somebody is writing the specs and another team is writing the code would the developers get uh insights and where they missed out on certain specs or is it mainly about like writing test cases of the code they provide is actually working properly uh so the idea here was that um I will show maybe quickly back to my diagram is that uh I I would like to provide also this feedback uh sending not only about the test cases because it's possible that the teams already wrote the test cases but it's also possible that it's just like maybe some untested code and the idea what would be that it like provides maybe in form of a jira or GitHub issue maybe a form of an email it provides back to developers uh not only how the tests performed or when they run successfully did the sound which tests fail which success but also perform like a feedback improvements like you you should improve the code here this is the the like maybe ultimate idea it would work that's really cool because like I guess then you can test the um I guess not evaluate tests comparisons specs as to say oh maybe the tests can cover these it's like scenarios you know in pi test right when you're parameters and things like that and provide feedback that way too which like automated tools these days can't really do right as far as I understand yeah that's that's why also partially why I tried wanted to tackle this um this problem because there are many great tools like GitHub compilot which help us during the development time they really give us good good suggestions on how to write our code but the important part is also ensuring that like the second layer of uh evaluation that after we maybe deploy or publish this application to some production or like staging server it evaluates again that everything is indeed working yeah nice nice Hey so uh some words of encouragement from somebody watching us so Bob says like very nice example use case right so uh hey yeah for anyone watching um definitely give Richard's uh Gita repo a star you know like let's let's show so appreciation um maybe we can get to double digits today or uh by the end of the week that would be awesome um but yeah I totally agree it's such a cool use case and immediately in my head also goes in like how meta can we get could you add the specification for your code so that you could generate tests for this project have you tried that oh that that's actually that's a really cool experiment uh I have not tried that yet because I was a bit lazy and I didn't write specification but uh but the idea is that yeah it should it should definitely happen and as a yeah and as I already said as I'm student I also have many school projects where I need to write some software and uh develop some simple maybe simple applications and I would definitely I think it will be beneficial to test my code which I wrote there using this tool you know you could go the other way just write some code and then get a language model to write the specs using your code pretend you had the specs all along and you're correct yeah yeah that's also that's also the case yeah it's possible I was kind of thinking that it could also be an interesting test uh because some of those models can understand what the code is supposed to do it's kind of like saying like if I share this called vanilla I'm like what would it say about the code and then sometimes you go like oh you you got exactly what I was trying to do here or sometimes you go like oh I didn't think about that that maybe there's something about it so yeah there's so many interesting aspects of it yeah that's a that's really great and that's what why I'm interested in actively collecting feed but feedback about this because yeah it's many great ideas appear in this way yeah absolutely I've got one more question um you mentioned sorry you mentioned chunking in in terms of your pipeline of things you had to do you get questions about chunking quite a bit in terms of ingesting longer um bits of it like longer Quantum of information right and deciding how to what chunk to use in terms of how to chunk information what it's like by size or by some sort of um syntactic markers or what have you um how did you choose to do it and did you experiment with different different chunking methods and sizes yeah the the first thing like the the simplest which I did during the hackathon was just placing like a large document maybe tracking by Pages just one page is one chunk it's it's very basic but this was the fastest then uh what I did with um with the software requirement specification I was chunking either by paragraphs like each paragraph is a separate chunk or trying to make maybe this by by markdowns somehow splitting them by heading subheadings and each of these like subheading is a separate chart but then there is a question uh like how to ensure that all the functionality which is uh expected in this specific requirement is covered in this one chunk and also maybe we should make online features several chunks I mean if it's a very large issue and about codes I mainly chunked by all by functions for example like here it's if it's a short function I believe it's it's okay to like chunk by function it's really like really long function which takes many many lines then I would consider a chunking by like smaller code structures uh maybe Loops conditionals and so on that's uh that's that's the approach I believe that that's yeah it's a um sounds like you've tried different things there and that's really cool and I think you know getting experience like that from someone like yourself who's built a real project and experiment or thought about different chunking methods and experimented it's like really useful for listeners as well because it's I've kind of found that there's not really a one-size-fits-all answer for people you know so it's really tricky to be like uh just just do this just chunk it at 150 words it's all good um but yeah that's really awesome are you saying there's no one truck one trunk feature no one chunk of it so that's exactly right yeah that's the chill engine yeah really really interested in also seeing how called this exactly how to change that and the currently trying to collect a team of students who are also interested in working with it and we are discussing many different approaches this can be sold so that's that's cool awesome and if you you know uh would love to hear back from you whether it's through the community forums or slack or whatever you know if you kind of experiment different sizes and what works I'm sure we can work on some you know follow-ups whether it's a blog or something because I'm definitely working on some chunking related material for for our audience as well okay that's that's great we'll be really happy to do that yeah yeah absolutely all right this was great this uh we started on the strong like let's keep up like the the tempo and the Rhythm uh this was an amazing demo and uh I'm really looking forward to see what you build in the future uh or maybe what's uh what's your dissertation project you know that you can deal with it that would be awesome um so next up it's um it's a topic that I feel very passionate about uh personally and for anyone that joined just now because some of you uh joined a bit later and everything uh this is a live show uh drop us a you know a comment questions anything feel free to ask we will uh share the stuff that you asked us or maybe some of the uh the comments that you share and then we could always respond to it so this is great um so on the topic that I feel very passionate about to come back to is the python client update and and then to be honest like when I joined wivate like I immediately fell in love like I thought with it was great it allowed you to do amazing things in a really like a short period of time but there was always something that was like nagging at the back of my head that whenever I interacted with like our clients like especially the python client I always felt like it we could do better we could make it easier we could make it more straightforward um so that was like that that little nagging kind of grew into something bigger and then there's also like there was some Community feedback but also some internal feedback that we had and eventually we kind of got to the point I was like Hey listen uh let's stop uh that nagging feeling you know of Sebastian and many other people around and then let's do something about it right so we went onto our project and there's uh the four people involved like to the biggest extent so JP is one of them uh it's me then we have Dirk and uh and Tommy from the engineering team uh so we kind of went in like hey let's rewrite some of the Python client parts and we came up like this uh different concepts and so the long story short is like um can we go from like let's say five lines of code to run a query to maybe a one-liner or two liner or something or making a lot more readable but also uh could we make it more like a ID friendly so like you get like a lot of code completion and help um and and that that was kind of the idea so I know jpu prepared something to share because uh JP has been like such a huge Champion as part of this project uh and we even have a blog post uh that mostly JP wrote let's let's face it um that basically talks about this new client so we are at the stage where we would like to get your feedback Etc so let's talk about it yeah for sure how about we put my uh the blog post up um yeah let's do it go from there so this is only one of this is like part of the presses um of yesterday um so you can find it by going to our website and clicking on the blog link on the top nav bar um really encourage you check it out obviously there's a lot of other really amazing content there as well but just read this one first um but so this one's uh like like I wrote this like over the last couple of days and I had a lot of fun writing it right and it was for a couple reasons I I like writing that's one but also because I the project was so much fun and it was really gratifying in terms of how usable the client became or so how much more usable the client became along the course of this project so when I was putting together there's a Code examples and whatever I was like oh this really is noticeably I think a huge Improvement to to the sort of developer experience right so I won't go through um a lot of detail here but there's a couple of things I do want to talk about one is what the key changes are right so in terms of what we were going for like one is that we're calling this internally the collections API which is because we focused on changing this kind of unit of how you interact with your data so that before you're kind of dealing with the client so that you're dealing with your whole webia instance in uh through the client object but now what we've done is centered a lot of the interactions and the API around each collection and by collection I means the thing that we quite often call a class which is a set of waveyard objects but that leads to sort of confusion in nomenclature and whatever so calling that a collection but yeah so um I'll show a demo to see exactly what this means and the other is object typing right so a lot of us use IDs that's not you know the just that the plain text editor and this really provides with a lot of like um sort of quality of life improvements with type hands and auto completions and so on which you'll see um throughout the kind of code demo that I'll put that it will go through the other thing that you want visibly see in the live coding is the performance improvements right and that's changing from um our kind of graphql based back end to grpc and I won't go through a lot of the details here but basically the um that really improves how the data gets transmitted from the client to the server and there's a couple of reasons why that's faster but basically it's less data and it's less processing required right so so that's basically the reason for it so we definitely encourage you to to check it out by reading the blog post and also going to this page which is linked here called experimental client so let's have a look there and that's basically a user guide so we don't have a fully featured like we haven't just overhauled our documentation to get rid of all the documentation or relations the new old client but if you want to try the new client this is where you can get started here's a bit of an overview but there's more of a set of instructions and examples so you can get started so um having said that the let's get into a little bit of live coding and see how well or poorly I do um so how about and I can't share two screens at once I'm gonna stop sharing this and I have to represent my which opens up the question how many screens do you have JP sorry I misspoke I I meant I I can't seem to share multiple apps in one go because then Sebastian could have very seamlessly switched over but um I can do that so what I've done is that we have a bunch of code from the quick start right so hopefully if you've used weave yet before you might have come across our quick start guide and this these are like code Snippets from the quick start what I thought we could do today in the short demo is to go through the quick start and I can just recreate bits of it with the new code and show you what that looks like right so this is just kind of like the housekeeping of like how do you connect the client there's one big change because we're importing all of these uh making use of all these custom python classes you can collect import them as a whole under this waviate classes sub module and use them if you don't if that doesn't make a whole lot of sense you'll see that in like two seconds um so let's get started so we've got a code chunk like this where you would create a class or a collection right and the challenge with this is that it's untyped dictionary or Json depending on what nomenclature you speak right so you have to remember that this thing is called the vectorizer you have a config key called module config and so on and so forth with the new client it looks like this I go client collection dot create now if I use this function I start to get these hints on the overlay so I can say what is my collection called well it's question and let's configure the vectorize all right so now I can go back okay so if I start typing vectorizer I get this pop-up doesn't come up on the screen share okay we'll just take my word for it I'm getting on autocompletion pop-up called for that I can select from called vectorizer config so that's not typed that or used autocomplete and then I can start typing with autocomplete which I assure you exists even though it's not showing up on the screen share um I'll talk to Tim Apple about that and config dot config Factory vectorizer Dot open AI now to write this slide even though this line is longer I think I've typed about seven characters and then Auto completed the rest of it right and I can do the same thing with module with the generative config so I can just go GE path generated config wvc concrete Factory so it's unpiping like Co tab autocomplete generative dot open AI so you can see here that the room for making mistakes is drastically smaller because I'm getting all these type hints and so on and then yeah what I also like about it by the way like JP um so if you have like the text to back open AI right now um like you go like hey I just want default settings with open AI but if you wanted to choose like a different model or something uh you could just like provide that inside right like so inside the braces yeah you could just do model equals and then like you super quick like say like hey these are the available options right this is what I can do um yeah and and that makes it like like super readable and like more intuitive for all of you to discover what is even possible definitely um I was gonna say you get this tool tip if you move your mouse over to open AI function and of course that's not showing up on the screen sharing either but you do get all the parameter names and the doc strings and all of that over here as well which is really really handy um I'll make a video for it later for sure um cool and in terms of importing data all the same uh it's it's like similarly more convenient I can say data insert many um and just put the dates on objects here right so I would go um create this object 40 in so this is all I would need to do to do the same job that the above block of code is doing queries is also really simple now if I can I can say questions dot um questions dot query dot what am I doing we need a text again this command is basically the same thing as what's happening up here and that's for a couple of reasons these parameters that we used to have to specify to say hey I want these columns or properties back from the server now these get returned by default you can still specify them if you want to minimize how much data you fetch but this makes it like really easy to get started to play with and so on um and the nice thing this is also really cool is doing things like generative search right so um doing what's called retrieval augmented generation or generative search what just just converting that earlier query into a rad query means you have to just all you have to do is sub out swap out the sub module to generate from query and then I'll break these up into separate lines and say um what am I doing group task equals let's copy that line here so again this is now the same thing as what's above and also even just dealing with the response object it was a fairly deeply nested Json object in the past so you'd have to use syntax like this to dig into Data get question blah blah blah but now all you would have to do is we'll have to actually capture the response into an object so response oh my goodness response um you you get no no uh typing help with variable names huh not yet um I should turn copilot back on uh so this is all you'd have to do so this well I guess I have to have a print function um it's the exact same thing as this really that is pretty cool yeah so this is really nice I I personally really like it and I've been having a lot of fun just you do have to rewrite all the docs you know right uh you know um Dave's not here right I'll get Dave today but it will be one of those like you do a massive rewrite and it was like why is there like thousand lines of code less you know that's so cool um yeah but no I think the other thing Worth showing as well JP is like because you showed how to get generated from uh response but also like the query values itself it's also way way shorter because I think what is it like response dot uh objects now objects this is how you will get the actual set of objects and then what comes back is a list so um you won't get pipins at this point um maybe yeah um so I can say object is that and then I can do things like object dot oh you do get pythons fantastic um so properties right is how you would get access to properties like that object dot metadata Dot euid let's try a question we get a lot like let's count uh all the objects um so that's too much coding on the Fly you picked your one query type that's not yet implemented because that's an aggregate query which is like like aggregate sets of queries which is not implemented so you'll have to still do it the old way um but the the what's currently now the get queries are implemented so that's what these are um so response dot query oh my goodness um questions dot query so this would be the graphql get we've got questions dot generative which are like graphql get with generative right and then we have questions dot um data which is your crud operations I guess it's really cud because it's create update delete and we have questions dot Group by um and I personally really like the group by improvements because the graphql query for this is literally like 12 to 15 lines long um and this query when I tried it I sent a message to Tommy and Dirk yesterday and said this is amazing because it's now like four lines of code to perform these these um functions so uh I I personally love it um obviously but I we want to get your feedback and we've been doing internal user testing that's been really really valuable so Duda you you've done it and then we've got really good feedback from you at an early stage Sebastian you've done it um you know like and kind of pretending you don't know all the things you know as you've been being part of the the development cycle but we really want to hear from you the audience right so we put up a post in the community Forum sorry it's community like talking about it I'll post more demos but please please please um if you can read through the the blog and try it out using that experimental client page and there's a feedback form that we've linked to so we would love to hear from you um if you have like you know we've also got a I think uh form or I guess box text box in there for your email or contact which is entirely optional but if you don't mind being contacted about your feedback maybe we'll contact you just to get some more information or maybe even have a one-on-one session um but but yeah we're really excited about it like I'm super excited about it and uh yeah we'll love to see where this goes and and I don't know exactly when it's going to be rolled out because I had that question even earlier today from shakri who was like really excited um but I think sooner rather than later yeah so there's one one example you didn't show that I was super passionate about it because I just threw it early days um as an idea and I know you know what I'm what I'm talking about but that's the iterator so yeah that was like one of the big challenges and I literally was helping somebody towards the end of last week via email of how to like literally the task of like how do I go through all of my data and that that at the moment the example that we have it's like 20 30 lines of code where you can use the fetch API we made it like with this client silly like silly easy um so yeah I'm sure that just really quickly so right now you have to use what we internally call the the um cursor API okay and this is kind of what the um um the vector with limit nope that's not right um I see so you need with after cursor okay it basically looks like that sorry the code example is is broken down into functions which is Sebastian this is exactly what you're talking about earlier today it's so hard to wrap your head around the original approach right but this is kind of what it looks like you have to get the cursor you have to get the batch size and and whatever um with the new client it just kind of looks like this so you hang on let me just make sure I get the syntax right yeah it's just a so but basically I think it overloads the python iterator or maybe just like is set up in the class too so you can use the built-in python iterator to do this so if you want to just get the all objects out we can just go questions and I would just use a list comprehension queue for Q in blah right this is all we would have to do to get literally all the objects out this way and you can choose within this syntax what parameters you want to get out so you can specify here like the return metadata is you know metadata query um whoops uid equals true Vector equals true so if you only get just the ID and the vector out for all the objects this is all you would have to do um so yeah this is this is fantastic too because again um Marion and I Marion was asking about it earlier today too that she gets this question for people who perhaps don't have access to the backup feature because it's not set up whatever and want to manually export objects um or if you want to migrate your database or just even want to I had a question about someone who wanted to validate their data against some other secondary database or something um this is going to be such a burden for just simplifying your code base yeah I think this is an approach of like let's say if you have like a small data set because of course if you have 10 million objects you don't want to put all of them in one array but what you can also do with the iterator you could just straight up use the for Loop right and then like exactly like this and then below you could just um have your code right so in here you go run one by one and then the iterator will fetch a bunch of objects each time and and then give it give them to you yeah it's just like yeah this used to be several lines of code now it's like a two liner like hey yeah that is so nice and clean and it's very readable too which I like and you get all the um tools like I guess I got the tool tips you guys didn't with the screen share problems but um also if you're using Jupiter you can get the you can run a function with question mark question mark to get the doc strings which you couldn't do before with the builder pattern um so yeah so far so far it's been very positive internally um but you know I'm sure it's not perfect right well probably yeah some cases some people are like oh this doesn't quite work for me and we really want to know if that's the case right um of course we think it's great but that's why your feedback would be really really useful yeah yeah I think it's awesome and like if you just scroll back to the beginning a little bit the one thing that is always worth remembering where you have the uh where you create that questions object in case like you got lost uh on that part the line 41 so like the usual story is like hey I want to get a collection so that question is like the name of the The Collection uh and and then basically you always work with that object so if you had like a separate uh collection called articles you could do the same thing right like you just say articles equals client.collection.get articles and then all the operations wouldn't happen on that collection right so you don't have to every single time do that um yeah and there's loads of other things like the support around like creating references and all this like there's so much we could literally spend two hours talking about just that but um yeah I'm definitely worth checking out the article yeah we can definitely see you're amazed that's a good segue smashing though because is next Thursday I will spend an hour talking about it on an online Workshop yeah yeah like I think it's a great reminder for anyone um that if you go like onto our website under developers workshops um we always share like the intro workshops and different types of workshops so uh JP shared there's a workshop on the 5th of October so if you'd like to participate and kind of like learn more about this new python client uh whether you want to learn more by us guiding you through it or by providing us some feedback and everything I will definitely dive deeper into like different parts of it so uh he's sharing it yeah so that's the page if you could just quickly show how to get to workshops uh from the yeah oh yeah developers page or wherever I can go on the developers and on the pull down menu you can click on workshops [Music] after our episodes finished that'll disappear from the list and the next Workshop would be the intro or workshop with Duda um that's tomorrow and uh yeah Zen's got one next week and we've got the collections Workshop next Thursday perfect all right so um yeah thanks for this presentation JP this was awesome um really like super excited about hearing feedback from the community um it's gonna be great so let's do a quick one around the Oktoberfest I know uh JP you are involved with this and yeah you know very little bit um uh so the dev growth team's been doing amazing work organizing Oktoberfest I'm more just kind of like you know helping out here and there um in like a tiny tiny way um Leona's done amazing work with this so if I can share my screen again again Sebastian like the exact same window so what she's done um so far which is really cool is to refresh our example use cases and demos page you can find that by going into NABA which is by the way now collapsible going to more resources example use cases and demos yeah and what you can and what you'll see is that we have all these use cases um with demos that are marked with pumpkin signs so with during the course of October October yeah um October we'll have these projects that uh we want to basically refresh right so these are kind of like all the way the demos and what have you which could do as a little bit of love a little bit of touch up and refreshing um or improvements um so we've marked these with pumpkins and they can be like any number of things they can be like sure code contributions but also things like hey if you're a tech writer maybe you want to contribute to the readme or the contributor guide maybe you want to make some material around it with video demos maybe you're a JavaScript person and there's a python demo so you're going to Port it to python sorry to JavaScript or go or whatever so um we want to we want to make produce these like small tasks that are bite-sized and You Know Rich Richard you mentioned this right you're you know you're a student you got stuff on you can't feel like building a demo for like three weeks full time but there's like these small parts of a project that you can contribute to engage with us and and learn and make new friends and whatever so um there'll be more detail coming up I believe Leon is working on a blog post so keep uh keep your eyes peeled for that and uh yeah you know just have fun right you know what would be really cool if um someone took one of those projects and used the new client like rewrite with the new client that would be awesome that would be awesome um you know yeah I'd be I I'd be I'd highly encourage that even yeah let's do it let's do it oh I I should have asked uh Richard uh like what do you think of the new client because when you work on the hackathon um you use our old client of course right but I guess the new clients yeah yeah I guess that well it's it's like looks like like much much better like very cool for the hackathon use case because uh I remember when uh it's got like 24 hours left until the final submission and uh I'm trying to write something there like maybe some very basic demo but the new clients like would have helped me a lot so with these uh these much shorter syntax we have all the Octoberfest like very very cool idea I believe so yeah that's very something very interesting to try out you know we would love to have you back you know in some capacity right come and come and check out the projects and see what you might want to work on in between in between doing assignments and doing all the university things um but yeah I I think it's gonna be fun I think hopefully we get lots of different people from diverse backgrounds and and whatever else because um there's different tasks kind of hopefully for for lots of different people right so yeah that's cool excellent excellent all right um cool so in this case um we like well we do that is going to be at the Latino wear right uh Hey did I like what's this conference about like uh what is it uh why should anyone join and Etc also lets you know where is the event that happens here in South America it happens in Fort De guasu in Paradise State fatiguez who is in the border of Brazil Paraguay and Argentina and this is considered the most important open source event here in the South America uh we usually have something around 5000 attendees from all around South America it's very very important event and it's very communitarian that if you ever have been to force them it's similar to fazm but on uh no not that big of a scale as for them but it's a very uh very important event and I'm going to be there I participate in this event for the last 10 years already and this year I'll be there not only talking about viviate but also doing a workshop so if you want it all the the talks are also online but they are in Portuguese the majority of them are in Portuguese and Spanish uh but if you want to to try your your selfie Portuguese please uh feel free to do that and also I'm going to be talking about uh are not related to Evie but also related to the deviate which is a Google summer of code so I'm going to have three very nice activities there for the three days uh it will it will happen at 18 through 20 of October uh so it's it's it's a three days conference and it's very intense uh and that's not only about dolphins first like open source software but also open Hardware you have like people doing designing and it's a huge event with a lot of different activities that have uh a place for everybody so join us and if you want to to go there we are going to be there so feel free to come uh link so it's latinoware.org so other talks recorded so you might mention this yes yes we have there there is on YouTube we have a uh a Channel with all the talks recorded so you can try to follow that you know activate maybe the the transcription and and follow that awesome the other day I saw on LinkedIn this uh amazing um Trend AI translator where it just translates your lip uh your lip uh uh um synchronization and everything and translates what you say into a different language pretty cool you should use it nice nice yeah we could test it out because we all speak perfectly Portuguese here right years of listening to Bossa Nova prepared me for this conference oh good good well maybe the vocabulary doesn't cover it but that's fine um and speaking of meeting us in different places now is time maybe Marion uh you're involved in like kicking off like some of our Meetup activities and uh exactly so you're super passionate about it um and so you share my screen then so yeah it's like woohoo so cycling we talk a lot about Community contributions and also um about the workshops so we have been getting more and more questions when we can meet in real life and we picked up that feedback so oh that's interesting we do have a couple of things going on they are not all online yet but that is like a sneak peek for like for the pricing client now it's for the community event so what's coming up and we do have a meet-up in New York coming up this Zayn then talking uh about multi-modality so watch out and Sebastian is going to be there too so watch out our um our website on the bottom of it you do find our meetups we do have a workshop coming up in New York as well the next day where you can actually get your hands on in November we are going to be in Berlin together with our friends from Ivan again like in London um who has who knows uh we have been Anonymous as well and in December we are going to be in Berlin with the ml Ops Community um and there's much much more in the cooking that it's just nothing it's so final that I would like to share it but keep your eyes on our website we are going to announce it on LinkedIn and especially in our meetup groups so yeah I'm looking forward to see you yay super exciting yeah because we already talked about like we don't have dates yet for those places but yeah we're talking about doing something in London probably Amsterdam exactly in San Francisco there's actually something happening in San Francisco about now anyway um like right now it will be everywhere yeah right now right so uh shout out to Philippe and Erica and Connor and the team that are there and Adam um that's why they're not in this in movie there today because uh they're hustling and bustling somewhere else as well so it's it's definitely gonna be a lot happening so we oh in San Francisco there's one going on on October 2nd I actually forgot about that in San Francisco there's one in October 2nd and Meetup is Haystack definitely worth joining and it's on our meetup groups so again the v8.io and then on the bottom you find our meetup groups yeah yeah and they'll be with two one and uh tuana is such a great uh person as well so uh that'll be great yeah I'm so jealous of anyone that's going to be there for that it's gonna be awesome um perfect and then the final uh segment is again going back to do that uh going through some Community questions so we have some questions that are like pop pop up here and there and we said like hey maybe we could just have like a little conversation about them and then help you all out to kind of understand in case you also wondered about these things um so do that the first question that you nominated is what is the impact of the tokenization setting for a data property yes that's right and and also uh a nice uh a nice remembering that if you if you have any questions on your journey to learn about weaviate uh you can join us in the Forum you can go to the Wi-Fi website and you can have their forums and also we we also have the hours like uh we are we are trying to move out the questions to The Forum because that is flexible uh so whatever the the wherever the content that we create on the Forum it stays there for other users to to search and to help themselves uh but we have seen some questions and we will be trying to to bring those questions here and try to to shade some light on it so the idea is that sometimes people will say hey I have I have a a query here I'm searching for for something and I'm getting some mixed results and that may be because of the tokenization strategy for your data property uh so let me share and then we have uh because the the the property you can set different tokenization properties for your for your property right uh so should I share my screen here just a little bit yeah that'll be great uh okay and while dude is doing that um I guess that probably relates to like not a vector search right so tokenization there's like two types of different indexes that get built with data in review one is the um Vector index for similarity searching and then the other is an inverted index which a lot of people are probably familiar with from kind of more traditional databases and this I think relates to um the inverted Index right data yes yes that's right uh even though you have you might confuse the tokenization with the vectorization and all that but this is mostly for the the hybrid or vm25 search uh so what happens is that by the fool we have the the word as the tokenization right which means that it's going to to index each word by itself but you have different uh settings here and then the idea is that you need to change that according to what you expect as a result right so bear in mind that we you can change there's uh one more knob that you can you can have a new Eva to change to to to to your specification uh so before thinking that it's not working properly uh when you're searching for for for uh you're doing some queries you need to be aware of this tokenization parameters that it can influentiate in your in your queries okay nice nice yeah so should we jump in a second question yeah we do have some questions that a lot of people are always asking how we can because there's so much thing that you can do with free V8 right you can not only with tax but audio and video and all that together and then you can throw some generative contents on top of that and and then it's it gets really crazy it gets a lot of possibilities and a lot of people a lot of time uh people are asking what we can do where we can see some examples on what we can do with review it right and we do have a lot of examples uh some of them are on the same place but some of them are elsewhere uh the first one that I want to show is that we have some really nice recipes that we are still growing there is still some other examples that we can show so if you go to a repository and search for recipes we are going to have their uh generative search Hybrid search Integrations multi-tenancy and all all of them right now it doesn't have one for for typescript but we are working on that so soon we are going to have uh the same examples with the same data and everything together for Python and also for typescript another set of good examples that we we have that you probably saw there on the on the that's also available for the the hacktoberfest is that we have alleviate examples and these we have very nice very interesting examples that we have done uh and our community have contributed so for example one that I really like is this attendance system example which you can have uh I think there's some screenshots here so basically you can have a screenshot and then uh you can you can have the people that is previously created on this screenshot and you can have like an attendance like because consider that you can take a picture of your class and then map reason that picture and like uh that's a very nice example we have here some uh some players in another example that I'm really excited is the audition classification which is basically using the the audio in order to identify the class with some some other uh other previously examples so all of them are registered here is very easy if you have any troubles uh playing around with those again come to our forums we are there to help you another one that we have is another is a different organization altogether we have Eva tutorials uh and inside this organization we have a lot of repositories with different uh parts of our of of codes and examples on how you can those users are some like for for example intro shop or how to ingest PDFs unstructured so there's a different set of of repositories there and the last two there were I wouldn't like I would like to show is a health search and this is a whole project that we have that was created from from for our from our growth team uh so that's a very interesting that it's using generative search to create reviews based on the reviews of the users so it's a very uh real world example on how to use viviate which is very very fine very very fun to to use and very nice nicely done and the last one is verba which we are developing which is very interesting that you can throw a lot of contents in there and then you can search for those those uh those contents and see where they came from where the answer is coming from and this is a very uh you know a lot of a lot of people that comes to Eva they want to create this kind of of solutions at first like it's a very interesting solution so here's a very nice way on how to do that and all of those examples are there and again if you have any troubles uh playing around with that come to us we are here to help and we're we're going to be there on the forums on this lag on the email on the meetups on every place trying to to help you on your journey and that's it for for those examples excellent thank you for uh for for this and um I like I think this could be a new tradition that we could always end up with like maybe a couple of questions from the community and then provide a bit of an insight and we'll definitely be looking for any questions from like maybe on our slack Etc like if you like us to answer you know like a conversational style this is definitely uh the way so this uh gets us to the end of this we get error it's been it's been a pleasure it's been great uh thank you all for your time thank you for watching and thank you for listening whether you watch with us live the show or whether you're watching it like you know few hours or days after we've recorded it definitely thank you thank you very much for your time we really appreciate it if if not for you we wouldn't be doing it right so uh if you enjoyed this video or any part especially if you loved Richard's demo give us a like uh that will definitely help us out help us out please subscribe to the channel I'll say it again because then you will not miss out the next movie there we do them every month so um that's it for me so thank you very much uh thank you for your time and have a great day bye bye bye silly says bye bye Miss silly [Music] wait I thought I pressed and ", "type": "Video", "name": "Weaviate Air Episode 12", "path": "", "link": "https://www.youtube.com/watch?v=v-l3DqzgC7U", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}