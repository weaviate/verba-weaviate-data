{"text": "Update about the Weaviate Vector Search engine at FOSDEM 2021 by Bob van Luijt. \n[Music] thank you for watching this fosdem talk it's a weird year um i'm presenting to you online the the past few years i was of course in brussels to uh to be at the actual event but this year online and this is the third year that we've had is being presented so two years ago we showed with it for the first time my colleague chen was showing how we were working on wev8 how we were focusing on vectorizing notes in the graph last year it was me and you could already see how we've hit was turning more into a full-fledged search engine uh it still had the graph data model but it was more starting to focus on vector search and this year i'm very happy to announce that we've released we've hit version one we've had version one is a full-fledged database it has full crowd support and it's focusing on vector indexing and searching two vectors um it's quite new so for those who haven't heard of this don't worry no worries i'm going to show you and explain to you exactly what it does and why we think there's a lot of value potentially for your project in using we v8 so i hope you enjoyed this talk if you have any questions don't hesitate to reach out to me on the fastlane website you can all find all my contact information so thank you for watching um four things i'm going to show you the first thing is why do you want to have a vector search engine what's the need of a vector database then i'm going to talk about what we vv8 is and then i'm going to show you two demos first a very simple demo while you just see how you can use wev8 and you can see the the vector search in action and then a little bit of a bigger case based on articles where you can see how we can quickly find insights from these articles so thanks for watching and let's start with why do you need a vector search engine so these vector search engines or vector databases they're like a 2021 a hot topic right now but you might wonder why so what's so special about them what what is it that they do and i'm going to try to explain to you what they do um and the easiest way to do that is go a little bit back into history so if you go back to the 2010s then we see that deep learning is becoming really feasible and there's this this famous case where machine learning model tries to recognize if there's a cat in a photo so what you basically see is you see a photo of a cat and then the model gives an output with a percentage how certain it is that there might be cat in there and then you can the juice if there's a cat or not in the photo and you can give it another photo etc etc to do this you need to somehow represent the photo in a way that the machine can actually read it and that's done in vectors and vectors are just representations in a hyperspace if you will so they look like you would have coordinates in a three-dimensional space but then often like 300 sometimes 900 sometimes 1500 sometimes even bigger spaces to actually represent what's in these photos and what the model does is that it looks at patterns and based on the patterns that it can find in the vector it makes an estimation for example yes i think there's a cat in this photo or no i don't think that there's a cat in this photo and this is how these machine learning models work they need vectors as input and they sometimes also produce vectors as output because that's how the model determines what the pattern is and if they can find insights in it and you can represent anything as a vector that can be an image but also text so a lot that's happening now with natural language processing has to do with vectors so regardless if it's glove or where to vac or fast text or bird or other transformers it's always the case that you need vectors in your model to make predictions and determine what something means now you might say well those are great use cases right i can come up with a lot of ideas so for example um for recognizing cats in photos you could come up with a medical use case where you use x-rays to see if somebody maybe broke bone or something and have the machine do that or you might want to know if a text is about a certain topic and that's all true that's all working fine and this is working in production and people are building great things with it so what if you want to know something about a lot of vectors a simple example so let's take a google search query so we go to google search and we type in who's the ceo of tesla now you see it returns elon musk and it does it pretty quick so we didn't search for elon we didn't search for musk we somehow searched for the relation between tesla and the function of a ceo and it returned to elon musk and to do that it had to browse through thousands hundred thousands maybe even millions of pages so the question is like how could google do that so fast what did they do well they were doing basically a reverse search on vectors and you know companies are good at this so google search does it with text apple does it with siri ibm watson does it with with medical data but what if you want to build such a solution what if you have a lot of textual or image data or audio that that and you want to build a solution that can do the same thing like these companies do well that's where the vector search engine comes in because that's the problem that the vector search engine solves and we've here this vector search engine so let's talk a little bit more about weavieate about its inner workings and then quickly let's go to the demo so that you actually can see it in action so at the highest level vvate has a very simple class property structure that means that you have a data object which has a class and then you have a property and then you can add your data and what it is that you're adding to wev8 really doesn't matter so you can present news articles financial transactions cyber security threats scientific articles web pages legal documents social media posts insurance documents or you could even use photos videos audios etc when you now store the data in a weaviate you can store the object through vectors you've created yourself or by using one of the out-of-the-box vectorizers the custom a n implementation has full crowd support making vvate a full-fledged database that you can use in production so let's do a quick sneak peek demo based on our out of the box news article that i set so here you see a bunch of articles just some random titles and what we can now do in the factor space is that we can say well we want to move near a specific concept so for example software business and limit that to three results and here you see a startup about blockchain serverless computing and workplace technology and now let's move away from a concept in the vector space so we're going to move away from the concept of decentralized networks and we're going to set a low force of 50 there so now the blockchain business should move a bit down as you see we can also do the opposite so we can move to a concept so we can say let's move to uh lena storefalls invention which is git of course and do that with a force of 90 and now you see all of a sudden something related to git and github pops up in the end results there are also additional features for example like the semantic path where you can see which route we've yet took to the hyperspace from the query to the results on the documentation on the website you can find many more additional features and examples on how to use wev8 thank you for watching this lightning talk i hope you like it i hope you're going to try with it out we would love to hear your feedback uh if you just google or duckduckgo or whatever search engine you use and type in we've yet you will find the vector search engine we've ate on github or on our own website you can leave us messages there you can join our slack channel you can leave questions on stack overflow we'd love to hear what you built and if you have questions about use cases or what you can do make sure to reach out thank you bye ", "type": "Video", "name": "Weaviate at FOSDEM 2021", "path": "", "link": "https://www.youtube.com/watch?v=SDOl9fRObVg", "timestamp": "", "reader": "JSON", "meta": {}, "chunks": []}