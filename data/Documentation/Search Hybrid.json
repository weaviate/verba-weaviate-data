{"text": "\n`Hybrid` search combines results of a vector search and a keyword (BM25F) search. You can set the [weights](#balance-keyword-and-vector-search) or the [ranking method](#change-the-ranking-method).\n\n\n## Named vectors\n\n\nA hybrid on collections with named vectors configured must include a `target` vector name in the query. This allows Weaviate to find the correct vector to compare with the query vector.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n\n  Example response\n\nThe output is like this:\n\n\n\n\n\n## Basic hybrid search\n\nCombines results of a vector search and a keyword search based on the query string.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Example response\n\nThe output is like this:\n\n\n\n\n\n## Explain the search results\n\nUse the metadata properties to understand why an object is selected.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Example response\n\nThe output is like this:\n\n\n\n\n\n## Balance keyword and vector search\n\nUse the `alpha` argument to change how much each search affects the results.\n\n- An `alpha` of `1` is a pure vector search.\n- An `alpha` of `0` is a pure keyword search.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Example response\n\nThe output is like this:\n\n\n\n\n\n## Change the ranking method\n\n\n`Ranked Fusion` is the default fusion algorithm.\n\n- To use objects' keyword and vector search scores instead of ranks, use `Relative Score Fusion`.\n- To use autocut with the `hybrid` operator, use `Relative Score Fusion`.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Example response\n\nThe output is like this:\n\n\n\n\n\n\n  \n    Additional information\n  \n\nFor a discussion of fusion methods, see [this blog post](/blog/hybrid-search-fusion-algorithms) and [this reference page](../api/graphql/search-operators.md#variables-2)\n\n\n\n## Specify properties to keyword search\n\n\nThe keyword search portion of hybrid search can be directed to only search a subset of object properties. This does not affect the vector search portion.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Example response\n\nThe output is like this:\n\n\n\n\n\n## Set weights on property values\n\nSpecify the relative value of an object's `properties` in the keyword search. Higher values increase the property's contribution to the search score.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Example response\n\nThe output is like this:\n\n\n\n\n\n## Specify a vector\n\nTo specify a vector instead of using a vector of the query string, pass it in addition to the query string for the keyword search.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Example response\n\nThe output is like this:\n\n\n\n\n\n## `limit` & `offset`\n\nUse `limit` to set a fixed maximum number of objects to return.\n\nOptionally, use `offset` to paginate the results.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Limit result groups\n\nTo limit results to groups with similar distances from the query, use the [`autocut`](../api/graphql/additional-operators.md#autocut) filter. Specify the `Relative Score Fusion` ranking method when you use autocut with hybrid search.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n  Example response\n\nThe output is like this:\n\n\n\n\n\n## Filter results\n\nFor more specific results, use a [`filter`](../api/graphql/filters.md) to narrow your search.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Example response\n\nThe output is like this:\n\n\n\n\n\n### Tokenization\n\nimport TokenizationNote from '/_includes/tokenization.mdx'\n\n\n\n## Related pages\n\n- [Connect to Weaviate](/developers/weaviate/starter-guides/connect.mdx)\n- [API References: Search operators # Hybrid](../api/graphql/search-operators.md#hybrid)\n- [Weaviate Academy: Tokenization](../../academy/py/tokenization/index.md)\n- About [hybrid fusion algorithms](/blog/hybrid-search-fusion-algorithms).\n- For tutorials, see [Queries](/developers/weaviate/tutorials/query.md)\n- For search using the GraphQL API, see [GraphQL API](../api/graphql/get.md).\n\n\n", "type": "Documentation", "name": "Search Hybrid", "path": "developers/weaviate/search/hybrid.md", "link": "https://weaviate.io/developers/weaviate/search/hybrid", "timestamp": "2024-05-08 10:50:53", "reader": "JSON", "meta": {}, "chunks": []}