{"text": "\n\n## API\n\nWeaviate offers GraphQL and gRPC APIs for queries.\n\nWe recommend using a Weaviate client library, which abstracts away the underlying API calls and makes it easier to integrate Weaviate into your application.\n\nHowever, you can query Weaviate directly using GraphQL with a POST request to the `/graphql` endpoint, or write your own `gRPC` calls based on the gRPC protobuf specification.\n\n\n## All references\n\nAll references have their individual subpages. Click on one of the references below for more information.\n\n- Object-level queries\n- Aggregate\n- Search operators\n- Conditional filters\n- Additional operators\n- Additional properties\n- Explore\n\n\n## GraphQL API\n\n### Why GraphQL?\n\nGraphQL is a query language built on using graph data structures. It is an efficient method of data retrieval and mutation, since it mitigates the common over-fetching and under-fetching problems of other query languages.\n\nGraphQL is case-sensitive (reference), so make sure to use the correct casing when writing your queries.\n\n### Query structure\n\nYou can POST a GraphQL query to Weaviate as follows:\n\n```bash\ncurl http://localhost/v1/graphql -X POST -H 'Content-type: application/json' -d '{GraphQL query}'\n```\n\nA GraphQL JSON object is defined as:\n\n```json\n{\n    \"query\": \"{ # GRAPHQL QUERY }\"\n}\n```\n\nGraphQL queries follow a defined structure. Queries are structured as follows:\n\n\n```graphql\n{\n   {\n       {\n        \n        _\n      }\n  }\n}\n```\n\n### Limitations\n\nGraphQL _integer_ data currently only supports `int32`, and does not support `int64`. This means that currently _integer_ data fields in Weaviate with integer values larger than `int32`, will not be returned using GraphQL queries. We are working on solving this issue. As current workaround is to use a `string` instead.\n\n### Consistency level\n\nGraphQL (`Get`) queries are run with a tunable consistency level.\n\n## gRPC API\n\nStarting with Weaviate v1.19.0, a gRPC interface is being progressively added to Weaviate.\n\ngRPC is a high-performance, open-source universal RPC framework that is contract-based and can be used in any environment. It is based on HTTP/2 and Protocol Buffers, and is therefore very fast and efficient.\n\nRead more about the gRPC API here.\n\n\n\n\n", "type": "Documentation", "name": "api-graphql", "path": "developers/weaviate/api/graphql/index.md", "link": "https://weaviate.io/developers/weaviate/api/graphql", "timestamp": "2024-02-08 21:20:45", "reader": "JSON", "meta": {}, "chunks": []}