{"text": "\n\n## Overview\n\nYou can interact with Weaviate by using the GraphQL or RESTful API directly, or with one of the available client libraries.\n\nCurrently, Weaviate supports:\n\n- Python\n- TypeScript/JavaScript\n- Go\n- Java\n\nimport ClientCapabilitiesOverview from '/_includes/client.capabilities.mdx'\n\n\n\n### Community clients\n\nThere also exist community clients that were prepared by our wonderful community members. These clients are not maintained by the core Weaviate team, but by the community members themselves. If you want to contribute to these clients, please contact the maintainers of the client.\n\nIf you want to contribute one or request for us to work on a particular client, please let us know on the forum\n\n## Native vs GraphQL queries\n\nWhen querying Weaviate you can choose to write your queries in GraphQL and send the raw GraphQL query to Weaviate, or you can write the query natively to the client language you are using.\n\nFor example, if you were using the Weaviate Python client:\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\"http://localhost:8080\")\n\nresult = client.query.get(\"Article\", [\"title\", \"url\", \"wordCount\"]).do()\n\nprint(result)\n```\n\nYields the same result as:\n\n```python\nimport weaviate\n\nclient = weaviate.Client(\"http://localhost:8080\")\n\nquery = \"\"\"\n{\n  Get {\n    Article {\n      title\n      url\n      wordCount\n    }\n  }\n}\n\"\"\"\n\nresult = client.query.raw(query)\n\nprint(result)\n```\n\n## Client-specific functions\n\nAdditional to complete reflection of the RESTful and GraphQL API, the clients have some client-specific functions. These functions are documented on the client pages.\n\n\n\n\n", "type": "Documentation", "name": "weaviate-client-libraries", "path": "developers/weaviate/client-libraries/index.md", "link": "https://weaviate.io/developers/weaviate/client-libraries", "timestamp": "2024-02-08 21:20:58", "reader": "JSON", "meta": {}, "chunks": []}