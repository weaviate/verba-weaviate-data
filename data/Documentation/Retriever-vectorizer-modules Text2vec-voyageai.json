{"text": "\n\n## Overview\n\nThe `text2vec-voyageai` module enables Weaviate to obtain vectors using [Voyage AI](https://docs.voyageai.com/docs/embeddings).\n\nKey notes:\n\n- As it uses a third-party API, you will need an API key.\n- **Its usage may incur costs**.\n    - Please check the Voyage AI [pricing page](https://docs.voyageai.com/docs/pricing), especially before vectorizing large amounts of data.\n- This module is available on Weaviate Cloud Services (WCS).\n- Enabling this module will enable the [`nearText` search operator](/developers/weaviate/api/graphql/search-operators.md#neartext).\n- The default model is `voyage-large-2`.\n\n\n\n## Weaviate instance configuration\n\nIf you use Weaviate Cloud Services (WCS), this module is already enabled and pre-configured. You cannot edit the configuration in WCS.\n\n### Docker Compose file\n\nTo use `text2vec-voyageai`, you must enable it in your Docker Compose file (`docker-compose.yml`). You can do so manually, or create one using the [Weaviate configuration tool](/developers/weaviate/installation/docker-compose.md#configurator).\n\n#### Parameters\n\n- `ENABLE_MODULES` (Required): The modules to enable. Include `text2vec-voyageai` to enable the module.\n- `DEFAULT_VECTORIZER_MODULE` (Optional): The default vectorizer module. You can set this to `text2vec-voyageai` to make it the default for all classes.\n- `VOYAGEAI_APIKEY` (Optional): Your Voyage AI API key. You can also provide the key at query time.\n\n#### Example\n\nThis configuration enables `text2vec-voyageai`, sets it as the default vectorizer, and sets the API keys.\n\n```yaml\n---\nversion: '3.4'\nservices:\n  weaviate:\n    image: cr.weaviate.io/semitechnologies/weaviate:||site.weaviate_version||\n    restart: on-failure:0\n    ports:\n     - 8080:8080\n     - 50051:50051\n    environment:\n      QUERY_DEFAULTS_LIMIT: 20\n      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'\n      PERSISTENCE_DATA_PATH: \"./data\"\n      # highlight-start\n      ENABLE_MODULES: text2vec-voyageai\n      DEFAULT_VECTORIZER_MODULE: text2vec-voyageai\n      VOYAGEAI_APIKEY: sk-foobar # Setting this parameter is optional, you can also provide the API key at query time.\n      # highlight-end\n      CLUSTER_HOSTNAME: 'node1'\n...\n```\n\n## Class configuration\n\nYou can configure how the module will behave in each class through the [Weaviate schema](/developers/weaviate/manage-data/collections.mdx).\n\n### API settings\n\n#### Parameters\n\n| Parameter | Required | Default | Purpose |\n| :- | :- | :- | :- |\n| `model` | No | `voyage-large-2` | The model to use. |\n| `truncate` | No | true | Sets the Voyage AI API input truncation behavior (true/false). |\n| `baseURL` | No | `https://api.voyageai.com/v1` | Sets a proxy or other URL instead of the default URL.  Use a the protocol domain format: `https://your.domain.com`. |\n\n#### Example\n\nThe following example configures the `Document` class by setting the vectorizer to `text2vec-voyageai`, model to `voyage-large-2` and explicitly enables input truncation by the Voyage AI API.\n\nDifferent Voyage AI models use different distance metrics. Make sure to set this accordingly. See the [distance metric](#distance-metric) section for more information.\n\n```json\n{\n  \"classes\": [\n    {\n      \"class\": \"Document\",\n      \"description\": \"A class called document\",\n      // highlight-start\n      \"vectorizer\": \"text2vec-voyageai\",\n      \"moduleConfig\": {\n        \"text2vec-voyageai\": {\n          \"model\": \"voyage-law-2\", // Defaults to voyage-large-2 if not set, available models: https://docs.voyageai.com/docs/embeddings\n          \"truncate\": true, // Defaults to true if not set\n          \"baseURL\": \"https://proxy.yourcompanydomain.com\"  // Optional. Can be overridden by one set in the HTTP header.\n        }\n      },\n      // highlight-end\n    }\n  ]\n}\n```\n\n### Vectorization settings\n\nYou can set vectorizer behavior using the `moduleConfig` section under each class and property:\n\n#### Class-level\n\n- `vectorizer` - what module to use to vectorize the data.\n- `vectorizeClassName` \u2013 whether to vectorize the class name. Default: `true`.\n\n#### Property-level\n\n- `skip` \u2013 whether to skip vectorizing the property altogether. Default: `false`\n- `vectorizePropertyName` \u2013 whether to vectorize the property name. Default: `false`\n\n#### Example\n\n```json\n{\n  \"classes\": [\n    {\n      \"class\": \"Document\",\n      \"description\": \"A class called document\",\n      \"vectorizer\": \"text2vec-voyageai\",\n      \"moduleConfig\": {\n        \"text2vec-voyageai\": {\n          \"model\": \"voyage-law-2\", // Defaults to voyage-large-2 if not set, available models: https://docs.voyageai.com/docs/embeddings\n          \"truncate\": true, // Defaults to true if not set\n          // highlight-start\n          \"vectorizeClassName\": false\n          // highlight-end\n        }\n      },\n      \"properties\": [\n        {\n          \"name\": \"content\",\n          \"dataType\": [\"text\"],\n          \"description\": \"Content that will be vectorized\",\n          // highlight-start\n          \"moduleConfig\": {\n            \"text2vec-voyageai\": {\n              \"skip\": false,\n              \"vectorizePropertyName\": false\n            }\n          }\n          // highlight-end\n        }\n      ]\n    }\n  ]\n}\n```\n\n## Query-time parameters\n\nYou can supply parameters at query time by adding it to the HTTP header.\n\n| HTTP Header | Value | Purpose | Note |\n| :- | :- | :- | :- |\n| `\"X-VoyageAI-Api-Key\"` | `\"YOUR-VOYAGEAI-API-KEY\"` | Voyage AI API key | |\n| `\"X-VoyageAI-BaseURL\"` | `\"YOUR-VOYAGEAI-BASE-URL\"` | Voyage AI base URL | Use the protocol domain format: `https://your.domain.com`.  If specified, this will have precedence over the class-level setting. |\n\n## Additional information\n\n### Available models\n\nYou can use any of the following models with `text2vec-voyageai` ([source](https://docs.voyageai.com/docs/embeddings)):\n\n- `voyage-large-2` (default)\n- `voyage-code-2`\n- `voyage-2`\n- `voyage-law-2`\n- `voyage-lite-02-instruct`\n\n### Truncation\n\nThe Voyage AI API can be set to automatically truncate your input text.\n\nYou can set the truncation option with the `truncate` parameter to `true`, `false`, or omitted altogether. Voyage AI's default behavior is to truncate the input text if it slightly exceeds the context window length. If it significantly exceeds the context window length, an error will be raised.\n\n### API rate limits\n\nSince this module uses your API key, your account's corresponding rate limits will also apply to the module. Weaviate will output any rate-limit related error messages generated by the API.\n\nMore information about Voyage AI rate limits can be found [here](https://docs.cohere.com/docs/going-live).\n\n### Import throttling\n\nOne potential solution to rate limiting would be to throttle the import within your application. We include an example below.\n\n\n  See code example\n\n\n\n\n\n## Usage example\n\nThis is an example of a `nearText` query with `text2vec-voyageai`.\n\n\n\n\n\n", "type": "Documentation", "name": "Retriever-vectorizer-modules Text2vec-voyageai", "path": "developers/weaviate/modules/retriever-vectorizer-modules/text2vec-voyageai.md", "link": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-voyageai", "timestamp": "2024-05-08 10:50:38", "reader": "JSON", "meta": {}, "chunks": []}