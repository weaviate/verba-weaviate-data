{"text": "\n\n## OpenID Configuration\nThe RESTful API discovery gives information if OpenID Connect (OIDC) authentication is enabled. The endpoint redirects to the token issued if one is configured.\n\n#### Usage\n\nThe discovery endpoint accepts a `GET` request:\n\n```js\nGET /v1/.well-known/openid-configuration\n```\n\nAnd it returns the following fields:\n- `href`: The reference to the client.\n- `cliendID`: The ID of the client.\n\nIf no OIDC provider is present, a `404` code will be returned.\n\n#### Example\nThe following command:\n\n\n\n\nreturns:\n\n```json\n{\n  \"href\": \"http://my-token-issuer/auth/realms/my-weaviate-usecase\",\n  \"cliendID\": \"my-weaviate-client\"\n}\n```\n\n## Liveness\n\nLive determines whether the application is alive. It can be used for Kubernetes liveness probe.\n\n#### Usage\n\nThe discovery endpoint accepts a `GET` request:\n\n```js\nGET /v1/.well-known/live\n```\n\nAnd it returns 200 if the application is able to respond to HTTP requests.\n\n#### Example\nIf the following command:\n\n\n\n\nreturns nothing (a 200 response), you know the application is able to respond to HTTP requests.\n\n## Readiness\n\nLive determines whether the application is ready to receive traffic. It can be used for Kubernetes readiness probe.\n\n## Usage\n\nThe discovery endpoint accepts a `GET` request:\n\n```js\nGET /v1/.well-known/ready\n```\n\nAnd it returns 200 if the application is able to respond to HTTP requests, and 503 if the application is currently not able to serve traffic. If other horizontal replicas of Weaviate are available and they are capable of receiving traffic, all traffic should be redirected there instead.\n\n#### Example\nIf the following command:\n\n\n\n\nreturns nothing (a 200 response), you know the application is able to respond to HTTP requests.\n\n\n\n\n", "type": "Documentation", "name": "rest-well-known", "path": "developers/weaviate/api/rest/well-known.md", "link": "https://weaviate.io/developers/weaviate/api/rest/well-known", "timestamp": "2023-11-13 10:40:15", "reader": "JSON", "meta": {}, "chunks": []}