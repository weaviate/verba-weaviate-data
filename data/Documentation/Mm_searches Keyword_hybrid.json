{"text": "\nYou can also perform keyword (BM25) searches to find items based on their keyword similarity, or hybrid searches that combine BM25 and semantic/vector searches.\n\n##  Keyword search\n\n###  Code\n\nThis example finds entries in \"MovieMM\" with the highest keyword search scores for the term \"history\", and prints out the title and release year of the top 5 matches.\n\n\n\n###  Explain the code\n\nThe results are based on a keyword search score using what's called the [BM25f](https://en.wikipedia.org/wiki/Okapi_BM25) algorithm.\n\nThe `limit` parameter here sets the maximum number of results to return.\n\nThe `return_metadata` parameter takes an instance of the `MetadataQuery` class to set metadata to return in the search results. The current query returns the `score`, which is the BM25 score of the result.\n\n\n  Example results\n\n```text\nAmerican History X 1998\nBM25 score: 2.707\n\nA Beautiful Mind 2001\nBM25 score: 1.896\n\nLegends of the Fall 1994\nBM25 score: 1.663\n\nHacksaw Ridge 2016\nBM25 score: 1.554\n\nNight at the Museum 2006\nBM25 score: 1.529\n```\n\n\n\n\n##  Hybrid search\n\n###  Code\n\nThis example finds entries in \"MovieMM\" with the highest hybrid search scores for the term \"history\", and prints out the title and release year of the top 5 matches.\n\n\n\n###  Explain the code\n\nThe results are based on a hybrid search score. A hybrid search blends results of BM25 and semantic/vector searches.\n\nThe `limit` parameter here sets the maximum number of results to return.\n\nThe `return_metadata` parameter takes an instance of the `MetadataQuery` class to set metadata to return in the search results. The current query returns the `score`, which is the hybrid score of the result.\n\n\n  Example results\n\n```text\nLegends of the Fall 1994\nHybrid score: 0.016\n\nHacksaw Ridge 2016\nHybrid score: 0.016\n\nA Beautiful Mind 2001\nHybrid score: 0.015\n\nThe Butterfly Effect 2004\nHybrid score: 0.015\n\nNight at the Museum 2006\nHybrid score: 0.012\n```\n\n\n\n\n\n", "type": "Documentation", "name": "Mm_searches Keyword_hybrid", "path": "developers/academy/py/starter_multimodal_data/103_mm_searches/20_keyword_hybrid.mdx", "link": "https://weaviate.io/developers/academy/py/starter_multimodal_data/mm_searches/keyword_hybrid", "timestamp": "2024-05-08 10:48:07", "reader": "JSON", "meta": {}, "chunks": []}