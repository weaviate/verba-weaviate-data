{"text": "\nEvery object in Weaviate belongs to exactly one collection. Use the examples on this page to manage your collections.\n\nNewer Weaviate documentation discuses \"collections.\" Older Weaviate documentation refers to \"classes\" instead. Expect to see both terms throughout the documentation.\n\n## Create a collection\n\nTo create a collection, specify at least the collection name. If you don't specify any properties, [`auto-schema`](../config-refs/schema/index.md#auto-schema) creates them.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Create a collection and define properties\n\nProperties are the data fields in your collection. Each property has a name and a data type.\n\n\n  \n    Additional information\n  \n\nUse properties to configure additional parameters such as data type, index characteristics, or tokenization.\n\nFor details, see:\n\n- [References: Configuration: Schema](/developers/weaviate/config-refs/schema)\n- [API References: REST: Schema](/developers/weaviate/api/rest#tag/schema)\n- [Available data types](../config-refs/datatypes.md)\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n## Disable auto-schema\n\nBy default, Weaviate creates missing collections and missing properties. When you configure collections manually, you have more precise control of the collection settings.\n\nTo disable [`auto-schema`](../config-refs/schema/index.md#auto-schema) set `AUTOSCHEMA_ENABLED: 'false'` in your system configuration file.\n\n## Specify a vectorizer\n\nSpecify a `vectorizer` for a collection.\n\n\n  Additional information\n\nCollection level settings override default values and general configuration parameters such as [environment variables](../config-refs/env-vars.md).\n\n- [Available vectorizers](../modules/retriever-vectorizer-modules/index.md)\n- [Vectorizer configuration references](/developers/weaviate/config-refs/schema#vectorizer)\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n\n## Define multiple (named) vectors\n\n\nYou can define multiple named vectors per collection. This allows each object to be represented by multiple vectors, such as a `text` vector and an `image` vector, or a `title` vector and a `body` vector.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n## Specify vectorizer settings\n\nTo configure how a vectorizer works (i.e. what model to use) with a specific collection, set the vectorizer parameters.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n## Set vector index type\n\nThe vector index type can be set for each collection between `hnsw` and `flat` index types.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n  Additional information\n\n- Read more about index types & compression in [Concepts: Vector index](../concepts/vector-index.md).\n\n\n\n## Set vector index parameters\n\nVarious vector index parameters are configurable at collection creation time, including compression.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n  Additional information\n\n- Read more about index types & compression in [Concepts: Vector index](../concepts/vector-index.md).\n\n\n\n## Property-level settings\n\nConfigure each property to choose whether to vectorize property name, include property in vectorization, and choose tokenization type.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Specify a distance metric\n\nIf you choose to bring your own vectors, you should specify the `distance metric`.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n  \n     Additional information\n  \n\nFor details on the configuration parameters, see the following:\n\n- [Distances](../config-refs/distances.md)\n- [Vector indexes](../config-refs/schema/vector-index.md)\n\n\n\n## Set inverted index parameters\n\nVarious [inverted index parameters](../config-refs/schema/index.md#invertedindexconfig) are configurable for each collection. Some parameters are set at the collection level, while others are set at the property level.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Specify a generative module\n\nSpecify a `generative` module for a collection (for RAG).\n\n\n  Additional information\n\n- [Available generative modules](../modules/reader-generator-modules/index.md)\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Replication settings\n\nConfigure replication per collection.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n\n  \n     Additional information\n  \n\nTo use replication factors greater than one, use a [multi-node deployment](../installation/docker-compose.md#multi-node-setup).\n\nFor details on the configuration parameters, see the following:\n\n- [Replication](/developers/weaviate/config-refs/schema#replicationconfig)\n\n\n\n## Sharding settings\n\nConfigure sharding per collection.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n  \n     Additional information\n  \n\nFor details on the configuration parameters, see the following:\n\n- [Sharding](/developers/weaviate/config-refs/schema#shardingconfig)\n\n\n\n## Multi-tenancy\n\n\nCreate a collection with multi-tenancy enabled.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Read a single collection definition\n\nRetrieve a collection definition from the schema.\n\n\n  \n    \n  \n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n  Sample configuration: Text objects\n\nThis configuration for text objects defines the following:\n\n- The collection name (`Article`)\n- The vectorizer module (`text2vec-cohere`) and model (`embed-multilingual-v2.0`)\n- A set of properties (`title`, `body`) with `text` data types.\n\n```json\n{\n    \"class\": \"Article\",\n    \"vectorizer\": \"text2vec-cohere\",\n    \"moduleConfig\": {\n        \"text2vec-cohere\": {\n            \"model\": \"embed-multilingual-v2.0\",\n        },\n    },\n    \"properties\": [\n        {\n            \"name\": \"title\",\n            \"dataType\": [\"text\"]\n        },\n        {\n            \"name\": \"body\",\n            \"dataType\": [\"text\"]\n        },\n    ],\n}\n```\n\n\n\n\n  Sample configuration: Nested objects\n\n\nThis configuration for nested objects defines the following:\n\n- The collection name (`Person`)\n- The vectorizer module (`text2vec-huggingface`)\n- A set of properties (`last_name`, `address`)\n\n    - `last_name` has `text` data type\n    - `address` has `object` data type\n\n- The `address` property has two nested properties (`street` and `city`)\n\n```json\n{\n    \"class\": \"Person\",\n    \"vectorizer\": \"text2vec-huggingface\",\n    \"properties\": [\n        {\n            \"dataType\": [\"text\"],\n            \"name\": \"last_name\",\n        },\n        {\n            \"dataType\": [\"object\"],\n            \"name\": \"address\",\n            \"nestedProperties\": [\n                {\"dataType\": [\"text\"], \"name\": \"street\"},\n                {\"dataType\": [\"text\"], \"name\": \"city\"}\n            ],\n        }\n    ],\n}\n```\n\n\n\n\n  Sample configuration: Generative search\n\nThis configuration for [generative search](../search/generative.md) defines the following:\n\n- The collection name (`Article`)\n- The default vectorizer module (`text2vec-openai`)\n- The generative module (`generative-openai`)\n- A set of properties (`title`, `chunk`, `chunk_no` and `url`)\n- The tokenization option for the `url` property\n- The vectorization option (`skip` vectorization) for the `url` property\n\n```json\n{\n    \"class\": \"Article\",\n    \"vectorizer\": \"text2vec-openai\",\n    \"vectorIndexConfig\": {\n        \"distance\": \"cosine\",\n    },\n    \"moduleConfig\": {\n        \"generative-openai\": {}\n    },\n    \"properties\": [\n        {\n            \"name\": \"title\",\n            \"dataType\": [\"text\"]\n        },\n        {\n            \"name\": \"chunk\",\n            \"dataType\": [\"text\"]\n        },\n        {\n            \"name\": \"chunk_no\",\n            \"dataType\": [\"int\"]\n        },\n        {\n            \"name\": \"url\",\n            \"dataType\": [\"text\"],\n            \"tokenization\": \"field\",\n            \"moduleConfig\": {\n                \"text2vec-openai\": {\n                    \"skip\": true\n                },\n            }\n        },\n    ],\n}\n\n```\n\n\n\n\n  Sample configuration: Images\n\nThis configuration for image search defines the following:\n\n- The collection name (`Image`)\n- The vectorizer module (`img2vec-neural`)\n\n  - The `image` property configures collection to store image data.\n\n- The vector index distance metric (`cosine`)\n- A set of properties (`image`), with the `image` property set as `blob`.\n\nFor image searches, see [Image search](../search/image.md).\n\n```json\n{\n    \"class\": \"Image\",\n    \"vectorizer\": \"img2vec-neural\",\n    \"vectorIndexConfig\": {\n        \"distance\": \"cosine\",\n    },\n    \"moduleConfig\": {\n        \"img2vec-neural\": {\n            \"imageFields\": [\n                \"image\"\n            ]\n        }\n    },\n    \"properties\": [\n        {\n            \"name\": \"image\",\n            \"dataType\": [\"blob\"]\n        },\n    ],\n}\n```\n\n\n\n## Read all collection definitions\n\nFetch the database schema to retrieve all of the collection definitions.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Update a collection definition\n\nSome definitions cannot be modified after you create your collection.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n\n```ts\n// This feature is under development\n```\n\n  \n\n  \n\n```java\n// This feature is under development\n```\n\n  \n\n  \n\n```go\n// This feature is under development\n```\n\n  \n\n\n## Update a parameter\n\nSome parameters cannot be modified after you create your collection.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n\n  ([Vote for the feature request.](https://github.com/weaviate/typescript-client/issues/72))\n\n  \n\n\n## Delete a collection\n\nimport CautionSchemaDeleteClass from '/_includes/schema-delete-class.mdx'\n\n\n\n## Add a property\n\n\n  \n    Limitations when adding a property after importing objects\n  \n\nAdding a property after importing objects can lead to limitations in inverted-index related behavior.\n\n\n\nThis is caused by the inverted index being built at import time. If you add a property after importing objects, the inverted index will not be updated. This means that the new property will not be indexed for existing objects. This can lead to unexpected behavior when querying.\n\n\n\nTo avoid this, you can either:\n- Add the property before importing objects.\n- Delete the collection, re-create it with the new property and then re-import the data.\n\nWe are working on a re-indexing API to allow you to re-index the data after adding a property. This will be available in a future release.\n\n\n\n\n\n## Inspect shards (for a collection)\n\nAn index itself can be comprised of multiple shards.\n\n\n\n## Update shard status\n\nYou can manually a shard to `READY` from `READONLY`, for example after disk pressure has been lowered.\n\n\n\n## Further resources\n\n### References\n\n- [API References: REST: Schema](/developers/weaviate/api/rest#tag/schema/post/schema)\n- [References: Configuration: Schema](/developers/weaviate/config-refs/schema)\n- [Concepts: Data structure](../concepts/data.md)\n\n### Background knowledge\n\n- [Connect to Weaviate](/developers/weaviate/starter-guides/connect.mdx)\n- [Tutorial: Schema](../starter-guides/schema.md)\n\n\n", "type": "Documentation", "name": "Manage-data Collections", "path": "developers/weaviate/manage-data/collections.mdx", "link": "https://weaviate.io/developers/weaviate/manage-data/collections", "timestamp": "2024-05-08 10:50:09", "reader": "JSON", "meta": {}, "chunks": []}