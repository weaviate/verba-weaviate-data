{"text": "\n`Keyword` search, also called \"BM25 (Best match 25)\" or \"sparse vector\" search, returns objects that have the highest BM25F scores.\n\n## Basic BM25 search\n\nTo use BM25 keyword search, define a search string.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n   \n    \n  \n\n  \n    \n  \n\n\n\n  Example response\n\nIt should produce a response like the one below:\n\n\n\n\n\n## Retrieve BM25F scores\n\nYou can retrieve the BM25F `score` values for each returned object.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n  Example response\n\nIt should produce a response like the one below:\n\n\n\n\n\n## Search on selected properties only\n\n\nA keyword search can be directed to only search a subset of object properties. In this example, the BM25 search only uses the `question` property to produce the BM25F score.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n  \n    \n  \n\n\n\n  Example response\n\nIt should produce a response like the one below:\n\n\n\n\n\n\n## Use weights to boost properties\n\n\nYou can weight how much each property affects the overall BM25F score. This example boosts the `question` property by a factor of 2 while the `answer` property remains static.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n  \n    \n  \n\n\n\n  Example response\n\nIt should produce a response like the one below:\n\n\n\n\n\n\n## Set tokenization\n\nThe BM25 query string is [tokenized](../config-refs/schema/index.md#property-tokenization) before it is used to search for objects using the inverted index.\n\nYou must specify the tokenization method in the collection definition for [each property](../manage-data/collections.mdx#property-level-module-settings).\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## `limit` & `offset`\n\nUse `limit` to set a fixed maximum number of objects to return.\n\nOptionally, use `offset` to paginate the results.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Limit result groups\n\nTo limit results to groups of similar distances to the query, use the [`autocut`](../api/graphql/additional-operators.md#autocut) filter to set the number of groups to return.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n  Example response\n\nIt should produce a response like the one below:\n\n\n\n\n\n\n## Filter results\n\nFor more specific results, use a [`filter`](../api/graphql/filters.md) to narrow your search.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n  Example response\n\nIt should produce a response like the one below:\n\n\n\n\n\n### Tokenization\n\nimport TokenizationNote from '/_includes/tokenization.mdx'\n\n\n\n## Related pages\n\n- [Connect to Weaviate](/developers/weaviate/starter-guides/connect.mdx)\n- [API References: Search operators # BM25](../api/graphql/search-operators.md#bm25)\n- [Weaviate Academy: Tokenization](../../academy/py/tokenization/index.md)\n\n\n", "type": "Documentation", "name": "Search Bm25", "path": "developers/weaviate/search/bm25.md", "link": "https://weaviate.io/developers/weaviate/search/bm25", "timestamp": "2024-05-08 10:50:51", "reader": "JSON", "meta": {}, "chunks": []}