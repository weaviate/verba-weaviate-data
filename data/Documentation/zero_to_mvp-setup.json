{"text": "\n\n## &nbsp;&nbsp;Overview\n\nFollow this short guide to make sure that you are set up to use Weaviate with the Python client.\n\n -->\n\n## &nbsp;&nbsp;Python & Python client\n\nIf you have not yet set up Python and the Weaviate Python client, follow the instructions below.\n\n### &nbsp;&nbsp;Install Python\n\nYou can install Python 3 in a variety of ways. One easy way is to use an appropriate installer for your system as per instructions on Python.org.\n\n### &nbsp;&nbsp;Install the Weaviate client\n\nIt is best practice to use virtual environments to isolate projects.\n\nIf you're not familiar with virtual environments, we highly recommend reading up on them - this tutorial on FreeCodeCamp is a good resource, as is this article on RealPython, which goes a little more in-depth.\n\nYou will also need the following libraries:\n\n```\nweaviate-client\n```\n\nActivate your virtual environment, and install the Weaviate client with:\n\n```shell\npip install weaviate-client\n```\n\n### &nbsp;&nbsp;Running your Python code\n\nWe recommend running Python code in a Jupyter notebook. You can install the library by running\n\n```shell\npip install notebook\n```\n\nThen running the shown code in a Jupyter notebook. Of course, you can also run it in any way that you prefer.\n\nTo learn how to use Jupyter notebooks, try this tutorial.\n\n## &nbsp;&nbsp;Weaviate\n\n### &nbsp;&nbsp;Instance access\n\nWe will be accessing a pre-built instance of Weaviate throughout the course, located at `https://edu-demo.weaviate.network`.\n\nYou can connect to the pre-built instance with a read-only Weaviate API key.\n\nConfirm that you can run the following code in your Python environment.\n\n\n\nIf everything works, the code returns `True`.\n\n### &nbsp;&nbsp;Inference API Key\n\nWe will be using OpenAI's API, so you will need an API key.\n\nIf you haven't yet, create an OpenAI account, and create a free API key here.\n\nThen, instantiate the client as shown below, replacing `YOUR-OPENAI-API-KEY` with your own API key for OpenAI.\n\n\n\n## &nbsp;&nbsp;Code examples\n\n### &nbsp;&nbsp;Client instantiation\n\nFor brevity, many code examples in the Weaviate Academy will not show the instantiation of the client. So, where you see examples such as:\n\n\n\nYou will need to instantiate the client as shown in the previous section. So, the above code would become:\n\n\n\n### &nbsp;&nbsp;GraphQL\n\nWeaviate Academy units are written to be used with a client library such as Python. So, you will not need to run GraphQL or REST queries directly.\n\nBut note that we also show raw GraphQL/REST queries as well as the Python code where relevant to help you learn the underlying query structures.\n\nSo please be aware that when we show a query such as this:\n\n\n\nThis is what happens under the hood:\n\n\n\nWe will show them in separate tabs going forward where applicable, like so:\n\n\n\n\n```python\nThis tab will show Python code.\n```\n\n\n\n\n```graphql\nThis tab will show GraphQL code.\n```\n\n\n\n\n### &nbsp;&nbsp;Raw GraphQL queries\n\nNote that you can run raw GraphQL queries directly with the Weaviate Python client, or with the Weaviate Console.\n\nIn Python, you can run a GraphQL query directly with:\n\n\n\n\n\n\n\n### &nbsp;&nbsp;Key takeaways\n\n- You have installed the Weaviate client library in your preferred environment.\n- You have an OpenAI inference key.\n- You have some way of running Python code.\n- You know how to instantiate the Weaviate Python client, and run the shown example code.\n- The Academy units will show Python code, but also raw GraphQL or REST snippets where applicable.\n\n\n\n", "type": "Documentation", "name": "zero_to_mvp-setup", "path": "developers/academy/zero_to_mvp/setup.mdx", "link": "https://weaviate.io/developers/academy/zero_to_mvp/setup", "timestamp": "2024-02-08 21:20:14", "reader": "JSON", "meta": {}, "chunks": []}