{"text": "\n\n\n## Syntax\n\nSingle vector collections are valid and continue to use the original collection syntax. However, if you configure multiple vectors, you must use the new, named vector syntax.\n\n### Python client v4\n\nStarting in v4.5.0, the [Python client](/developers/weaviate/client-libraries/python) supports named vectors.\n\n#### Create a schema\n\nWeaviate collections require a schema. Use the schema definition to configure the vector spaces for each data object.\n\n- To configure named vectors, use `NamedVectors`.\n- To specify which inputs go to which vectorizers, set `source_properties`.\n\n\n\nData values can be stored as properties, vectors or both. In this example, each data object has two named vectors, `jeopardy_questions_vector` and `jeopardy_answers_vector`. Each object also has three properties, `question`, `answer`, and `category`. The schema specifies how Weaviate manages your data.\n\n| Data field | Property | Vectorizer |\n| :-- | :-- | :-- |\n| `category` | yes | none |\n| `question` | yes | `text2vec_cohere` |\n| `answer` | yes | `text2vec_openai` |\n\n#### Query a named vector\n\n[Keyword searches](/developers/weaviate/search/bm25) in collections with named vectors use the same syntax as keyword searches in collections without named vectors. However, if you run a vector search on a collection with named vectors, specify the vector space to search.\n\nUse named vectors with [vector similarity searches](/developers/weaviate/search/similarity) (`near_text`, `near_object`, `near_vector`, `near_image`) and [hybrid search](/developers/weaviate/search/hybrid).\n\nTo run the example query, first create the sample collection.\n\n\n  Create sample collection.\n\nThis code creates a sample collection and imports a small amount of data.To run the code, you must have an OpenAI API key and a Cohere API key defined as local variables on your system.OpenAI and Cohere are third party services. You may incur a cost if you exceed the limits of their free tiers.\n\n\n\n\n\n\n\n\n\n### REST API\n\nThe legacy, single vector syntax is valid for use with collections that don't have named vectors:\n\n```json\n{\n    \"class\": \"Article\",\n    \"vector\": [0.3, -0.012, 0.071, ..., -0.09],\n    \"properties\": {\n        \"content\": Really cool things\",\n    }\n}\n```\n\nTo specify named vectors in collections with multiple, named vectors use the new syntax.\n\n```json\n{\n    \"class\": \"ArticleNamedVector\",\n    \"vectors\": {\n        \"title_vector\": [0.3, 0.2, 0.6, ..., 0.1]},\n        \"image_vector\": [1,2,3,4]\n    },\n    \"properties\": {\n        \"content\": \"Really cool things\",\n    }\n}\n```\n\nTo retrieve all vectors at once, use this endpoint:\n\n```bash\nGET /v1/objects//?include=vector\n```\n\n### GraphQL\n\nIf a collection has one vector, you don't have to specify a vector name. For example, a `nearVector` query with a single vector looks like this:\n\n```graphql\n{\n  Get {\n    Publication(\n      nearVector: {\n        vector: [0.1, -0.15, 0.3]\n      }\n    ){\n      content\n      _additional {\n        vector # backward compatible if only one vector present\n        vectors {\n          title\n        }\n        distance\n      }\n    }\n  }\n}\n```\n\nIf a collection has multiple vectors, use the `_additional {vectors {name}}` field in the query to specify the vector that you want to search.\n\nThese examples show GraphQL queries:\n\n\n\n## Hybrid search\n\nNamed vector collections support [hybrid search](../../search/hybrid.md), but only for one vector at a time. To run a hybrid search, specify the vector to use:\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Related pages\n\n- [Weaviate academy: Named vectors](../../../academy/py/named_vectors/index.md)\n- [How-to: manage data](/developers/weaviate/manage-data/index.md): Code examples for *create*, *update* and *delete* operations, including those with named vectors.\n- [How-to: search](/developers/weaviate/search/index.md): Code examples for all types of search operations, including those with named vectors.\n- [BQ Compression](../../configuration/bq-compression.md)\n- [PQ Compression](../../configuration/pq-compression.md)\n\n\n", "type": "Documentation", "name": "Schema Multi-vector", "path": "developers/weaviate/config-refs/schema/multi-vector.md", "link": "https://weaviate.io/developers/weaviate/config-refs/schema/multi-vector", "timestamp": "2024-05-08 10:49:56", "reader": "JSON", "meta": {}, "chunks": []}