{"text": "\n\n\n\n- How to: Configure a schema\n- References: REST API: Schema: Multi-tenancy\n- Concepts: Data Structure: Multi-tenancy\n\n## Enable multi-tenancy\n\n- Multi-tenancy available from version `v1.20`\n- (Experimental) Tenant activity status setting available from version `v1.21`\n\nMulti-tenancy is disabled by default. To enable it, set the `multiTenancyConfig` variable in the class definition as shown below:\n\n```json\n{\n  \"class\": \"MultiTenancyClass\",\n  // highlight-start\n  \"multiTenancyConfig\": {\"enabled\": true}\n  // highlight-end\n}\n```\n\n## Class operations\n\n### Add tenant(s)\n\nTo add tenants to a class, you must provide the tenant names to the Weaviate class. From `1.21` onwards, you can also optionally specify whether the tenant is to be active (`HOT`, default), or inactive (`COLD`).\n\n\n\n\nCode examples are shown below in which the tenants `tenantA` and `tenantB` are added to the class `MultiTenancyClass`:\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n### List tenant(s)\n\nTo list existing tenants in a class, you must provide the Weaviate class name.\n\nCode examples are shown below for listing the existing tenants in the `MultiTenancyClass` class:\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n### Delete tenant(s)\n\nYou can delete one or more existing tenants in a class by providing the Weaviate class name.\n\nIf a tenant specified for deletion doesn't belong to the class, it is ignored.\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n### Update tenant(s)\n\n\nYou can update one or more existing tenants' activity status to active (\"HOT\") or inactive (\"COLD\").\n\nFor now, please send a PUT request through the REST API endpoint to update the tenant activity status.\n\n## Object operations\n\n### CRUD operations\n\nIf multi-tenancy is enabled, you must provide the tenant name to Weaviate in each CRUD operation.\n\nCode examples are shown below for creating an object in the `MultiTenancyClass` class:\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n### Search queries\n\n`Get` and `Aggregate` queries support multi-tenancy operations. (`Explore` queries do not support multi-tenancy operations at this point.)\n\nIf multi-tenancy is enabled, you must provide the tenant name to Weaviate in each search query.\n\nCode examples are shown below for fetching one object in the `MultiTenancyClass` class from the tenant `tenantA`:\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n## Cross-references\n\nIf multi-tenancy is enabled, you must provide the tenant name to Weaviate while creating, updating or deleting cross-references.\n\nYou can establish a cross-reference from a multi-tenancy class object to:\n- A non-multi-tenancy class object, or\n- A multi-tenancy class object belonging to the same tenant.\n\nThe example below creates a cross-reference between two objects. It links an object in the `MultiTenancyClass` class that belongs to `tenantA`, to an object in the `JeopardyCategory` class:\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\nAs described above, the `JeopardyCategory` class object can be either:\n- A non-multi-tenancy object or\n- A multi-tenancy object belonging to `tenantA`.\n\n\n\n\n", "type": "Documentation", "name": "manage-data-multi-tenancy", "path": "developers/weaviate/manage-data/multi-tenancy.md", "link": "https://weaviate.io/developers/weaviate/manage-data/multi-tenancy", "timestamp": "2023-11-02 10:53:10", "reader": "JSON", "meta": {}, "chunks": []}