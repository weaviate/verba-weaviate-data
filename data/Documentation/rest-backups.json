{"text": "\n\n## Introduction\n\nSee the Backups page for a general introduction, configuration, and tech background of Backups.\n\n## API\n\n### Create Backup\n\nOnce the modules are enabled and the configuration is provided, you can start a\nbackup on any running instance with a single HTTP request.\n\n### Method and URL\n\n```js\nPOST /v1/backups/{backend}\n```\n\n#### Parameters\n\n##### URL Parameters\n\n| name | type | required | description |\n| ---- | ---- | ---- | ---- |\n| `backend` | string | yes | The name of the backup provider module without the `backup-` prefix, for example `s3`, `gcs`, `azure`, or `filesystem`. |\n\n##### Request Body\n\nThe request takes a json object with the following properties:\n\n| name | type | required | description |\n| ---- | ---- | ---- | ---- |\n| `id` | string (lowercase letters, numbers, underscore, minus) | yes | The id of the backup. This string must be provided on all future requests, such as status checking or restoration. |\n| `include` | list of strings | no | An optional list of class names to be included in the backup. If not set, all classes are included. |\n| `exclude` | list of strings | no | An optional list of class names to be excluded from the backup. If not set, no classes are excluded. |\n| `config`  | object          | no | An optional object to configure the backup. If not set, it will assign defaults from config table.|\n\n*Note: You cannot set `include` and `exclude` at the same time. Set none or exactly one of those.*\n\n##### Config object properties\n| name | type | required | default | description |\n| ---- | ---- | ---- | ---- |---- |\n| `cpuPercentage`   | number | no | `50%` | An optional integer to set the desired CPU core utilization ranging from 1%-80%. |\n| `chunkSize`       | number | no | `128MB` | An optional integer represents the desired size for chunks. Weaviate will attempt to come close the specified size, with a minimum of 2MB, default of 128MB, and a maximum of 512MB.|\n| `compressionLevel`| string | no | `DefaultCompression` | An optional compression level used by compression algorithm from options. `DefaultCompression`, `BestSpeed`, `BestCompression`|\n\n*Note: Weaviate uses gzip compression by default.*\n\nFor client code examples, see the How-to: Configure / Backups page.\n\nWhile you are waiting for a backup to complete, Weaviate stays fully usable.\n\n\n#### Asynchronous Status Checking\n\nAll client implementations have a \"wait for completion\" option which will poll the backup status in the background and only return once the backup has completed (successfully or unsuccessfully).\n\nIf you set the \"wait for completion\" option to false, you can also check the status yourself using the Backup Creation Status API.\n\n```js\nGET /v1/backups/{backend}/{backup_id}\n```\n\n##### Parameters\n\n##### URL Parameters\n\n| name | type | required | description |\n| ---- | ---- | ---- | ---- |\n| `backend` | string | yes | The name of the backup provider module without the `backup-` prefix, for example `s3`, `gcs`, `azure`, or `filesystem`. |\n| `backup_id` | string | yes | The user-provided backup identifier that was used when sending the request to create the backup. |\n\nThe response contains a `\"status\"` field. If the status is `SUCCESS`, the\nbackup is complete. If the status is `FAILED`, an additional error is provided.\n\nFor client code examples, see the How-to: Configure / Backups page.\n\n\n### Restore Backup\n\nYou can restore any backup to any machine as long as the number of nodes\nbetween source and target are identical. The backup does not need to be created\non the same instance. Once a backup backend is configured, you can restore a\nbackup with a single HTTP request.\n\nThere are two important conditions to note, which can cause a restore to fail:\n- If any of the classes already exist on the target restoration node(s).\n- If the node names of the backed-up class' node(s) do not match those of the target restoration node(s).\n\n#### Method and URL\n\n```js\nPOST /v1/backups/{backend}/{backup_id}/restore\n```\n\n#### Parameters\n\n##### URL Parameters\n\n| name | type | required | description |\n| ---- | ---- | ---- | ---- |\n| `backend` | string | yes | The name of the backup provider module without the `backup-` prefix, for example `s3`, `gcs`, `azure`, or `filesystem`. |\n| `backup_id` | string | yes | The user-provided backup identifier that was used when sending the request to create the backup. |\n\n##### Request Body\n\nThe request takes a json object with the following properties:\n\n| name | type | required | description |\n| ---- | ---- | ---- | ---- |\n| `include` | list of strings | no | An optional list of class names to be included in the backup. If not set, all classes are included. |\n| `exclude` | list of strings | no | An optional list of class names to be excluded from the backup. If not set, no classes are excluded. |\n| `config`  | object          | no | An optional object to configure the restore. If not set, it will assign defaults from config table.|\n\n*Note 1: You cannot set `include` and `exclude` at the same time. Set none or exactly one of those.*\n\n*Note 2: `include` and `exclude` is relative to the classes contained in the backup. The restore process does not know which classes existed on the source machine if they were not part of the backup.*\n\n##### Config object properties\n| name | type | required | default | description |\n| ---- | ---- | ---- | ---- |---- |\n| `cpuPercentage`   | number | no | `50%` | An optional integer to set the desired CPU core utilization ranging from 1%-80%. |\n\nFor client code examples, see the How-to: Configure / Backups page.\n\n\n#### Asynchronous Status Checking\n\nAll client implementations have a \"wait for completion\" option which will poll the backup status in the background and only return once the backup has completed (successfully or unsuccessfully).\n\nIf you set the \"wait for completion\" option to false, you can also check the status yourself using the Backup Restore Status API.\n\n```js\nGET /v1/backups/{backend}/{backup_id}/restore\n```\n\n#### Parameters\n\n##### URL Parameters\n\n| name | type | required | description |\n| ---- | ---- | ---- | ---- |\n| `backend` | string | yes | The name of the backup provider module without the `backup-` prefix, for example `s3`, `gcs`, `azure`, or `filesystem`. |\n| `backup_id` | string | yes | The user-provided backup identifier that was used when sending the requests to create and restore the backup. |\n\nThe response contains a `\"status\"` field. If the status is `SUCCESS`, the\nrestore is complete. If the status is `FAILED`, an additional error is provided.\n\nFor client code examples, see the How-to: Configure / Backups page.\n\n## Learn more about Backups\n\nDiscover more about Backups Configuration, including Backups to S3, GCS, or Azure, Technical Considerations of Backups, as well as additional use cases.\n\n\n\n\n", "type": "Documentation", "name": "rest-backups", "path": "developers/weaviate/api/rest/backups.md", "link": "https://weaviate.io/developers/weaviate/api/rest/backups", "timestamp": "2024-02-08 20:22:15", "reader": "JSON", "meta": {}, "chunks": []}