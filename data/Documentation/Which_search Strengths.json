{"text": "\n##  Overview\n\nThese different search types are offered because they each have different characteristics, and therefore different strengths.\n\nLet's explore the relative strengths of each search type.\n\n##  Strengths of vector search\n\n###  Robustness\n\nA vector is a numerical representation of the underlying object's meaning. As a result, a vector search is robust to any changes that don't affect the meaning of the object.\n\nMore concretely, a vector of \"cat\", for example, will be similar to a vector of \"kitten\", \"feline\", and \"pet\", even though their spellings are very different.\n\nSee this in action below, where we search for \"cat\" and \"kitten\" using vector search.\n\n\n\n \n    \n  \n\n\n\nYou see that the results for \"cat\" and \"kitten\" are very similar.\n\nIn other words, the vectors for \"cat\" and \"kitten\" are similar in meaning, because the model can \"understand\" meaning.\n\n\n\nSimilarly, a vector of \"cat\" is similar to the vector of \"cat\" with a spelling mistake, such as \"caat\", or \"catt\".\n\n\n\n \n    \n  \n\n\n\nHere, the results are basically identical.\n\n\n\nThis robustness is a key strength of vector search, as it means that the searcher does not need to know the exact words used in the dataset. This is particularly useful when the concepts being searched for are not well-defined, or when the searcher is not familiar with the dataset.\n\n###  Versatility\n\nA vector search is also versatile. It can be used to search multiple data modalities (e.g. text, images, audio, etc.), and across multiple languages.\n\nThis is because the vector is a numerical representation of the underlying object's meaning, and therefore the same vector can be used to represent the same meaning, regardless of the data modality or language.\n\nIn fact, some models are capable of search across multiple data modalities, or multiple languages (or both!). This is made possible by using a model that can convert the data into comparable vectors, regardless of the data modality or language.\n\n![Vectorization across multiple modalities](./_img/multimodal_example.png)\n\n##  Strengths of keyword search\n\n###  Exactitude\n\nKeyword search is ideal for situations where locating precise matches are required. This is particularly useful in scenarios where there exist exact terms to search for, such as academic research, searches through domain-specific data or technical troubleshooting.\n\nThe ability to return results that precisely match the search terms ensures that users receive the most relevant information for their specific queries.\n\nMore concretely, take a look at the example below, where we search for \"imaging\".\n\n\n\n \n    \n  \n\n\n\nAnd when we inspect the results:\n\n\n\nA search for \"imaging\" using a keyword search returns the one result that contains that specific word.\n\n\n##  Strengths of hybrid search\n\nA key strength of hybrid search is its resiliency. Let's explore this in more detail.\n\n###  Resiliency\n\nA hybrid search is resilient as it combines top results from both vector and keyword search. This helps to mitigate either search's shortcomings.\n\nTake a look at the hybrid search example below.\n\n\n\n \n    \n  \n\n\n\nWe can inspect the results here:\n\n\n\nYou can see that as well as the keyword search result above (for \"imaging\"), we get a semantically relevant result (for \"X-rays\").\n\nBecause hybrid search combines the results of both vector and keyword search, it will find objects that score well on at least one of the search types. This approach has the effect of complementing each search type.\n\n\n Review\n\n\n\nAny quiz questions\n\n###  Review exercise\n\nTry out ...\n\n###  Key takeaways\n\nAdd summary\n\n\n\nimport Quiz from '/src/components/Academy/quiz.js'\nconst varName = [{\n  questionText: 'questionText',\n  answerOptions: [\n    {\n      answerText: 'answerOne',\n      isCorrect: false,\n      feedback: 'feedbackOne',\n    },\n    {\n      answerText: 'answerTwo',\n      isCorrect: false,\n      feedback: 'feedbackTwo',\n    },\n    {\n      answerText: 'answerThree',\n      isCorrect: false,\n      feedback: 'feedbackThree',\n    },\n  ]\n}]; -->\n", "type": "Documentation", "name": "Which_search Strengths", "path": "developers/academy/py/standalone/which_search/10_strengths.mdx", "link": "https://weaviate.io/developers/academy/py/standalone/which_search/strengths", "timestamp": "2024-05-08 10:47:50", "reader": "JSON", "meta": {}, "chunks": []}