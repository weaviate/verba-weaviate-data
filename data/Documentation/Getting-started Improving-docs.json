{"text": "## Introduction\n\nMaintaining consistent, accurate and readable documentation is way to improve the user experience for everybody, including experienced users.\n\nThe truth is that while we try our best, mistakes happen (we are not perfect! \ud83d\ude05). And if you found something difficult to understand, others may have too, which presents an opportunity for improvement.\n\nSo if you spot any typos, errors, unclear explanations, missing references or anything that stands out, please let us know, and we can work on it together.\n\n## How Weaviate documentation is built\n\nWeaviate's documentation is built with a static site builder (Docusaurus) with data from our [GitHub repository](https://github.com/weaviate/weaviate-io). Before you get started, we suggest you set up a local development environment first. This will allow you to preview any changes on your computer as you work on it.\n\nFor instructions on setting up the development environment, please take a look at this [README file](https://github.com/weaviate/weaviate-io/blob/main/README.md).\n\nOnce your local environment is set up, you can make your proposed changes, preview them locally, and submit them for review.\n\n\n\n## MDX syntax\n\nYou will notice MDX / React syntax throughout this site. Docusaurus has built-in support for MDX v1, which allows you to write JSX within your Markdown files and render them as React components.\n\nRead [this Docusaurus page](https://docusaurus.io/docs/markdown-features/react) for more information.\n\n## Infima styling\n\nThis site uses Infima for styling. Read [this Docusaurus page](https://docusaurus.io/docs/styling-layout#styling-your-site-with-infima) for more information.\n\n\n\n\n{{ page.canonical-name }}\n{% endif %}\n{% endraw %}\n```\n\n* `for` loop\n\nThe for statement executes a block of code repeatedly. For example:\n\n```html\n{% raw %}\n{% for integration in site.data.integrations %}\n    \n        {{ integration.name }} ({{ integration.type }})\n    \n{% endfor %}\n{% endraw %}\n```\n\n* Include\n\nThe above tag is used to insert a already rendered file within the current template. For example:\n\n```html\n{% raw %}\n{% include docs-current_version_finder.html %}\n{% endraw %}\n```\n\n* Assign\n\nThe assign tag is used to create a new variable. For example:\n\n```html\n{% raw %}\n{% assign sortedResources = site.data.podcasts | sort: 'date' %}\n{% endraw %}\n```   -->\n\n## Tests\n\nWe've adopted a code sample structure that lets us both test and expose the samples without duplicating code. This is done using the `FilteredTextBlock` component, which loads arbitrary files and extract lines between a start marker and an end marker. You'll see statements like `` in `.md` files, followed by\n\n```mdxjs\n\n```\n\nTo learn how to run tests, see the `README.md` file in `/tests/`.\n", "type": "Documentation", "name": "Getting-started Improving-docs", "path": "developers/contributor-guide/getting-started/improving-docs.md", "link": "https://weaviate.io/developers/contributor-guide/getting-started/improving-docs", "timestamp": "2024-05-08 10:49:03", "reader": "JSON", "meta": {}, "chunks": []}