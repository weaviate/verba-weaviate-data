{"text": "\nThe current Python client version is `v||site.python_client_version||`\n\nThe `v4` Weaviate Python client API is very different from the `v3` API. This guide will help you understand the major changes and how to migrate your code at a high level.\n\n## Installation\n\nTo go from `v3` to `v4`, you must\n\n1. Upgrade the client library:\n\n    ```bash\n    pip install -U weaviate-client  # For beta versions: `pip install --pre -U \"weaviate-client==4.*\"`\n    ```\n\n2. Upgrade Weaviate to a compatible version\n    - Weaviate `1.23.7` is required for `v4.4.1`. Generally, we recommend you use the latest versions of Weaviate and the client.\n\n3. Make sure a port for gRPC is open to Weaviate.\n    - The default port is 50051.\n\n    \n      docker-compose.yml example\n\n    If you are running Weaviate with Docker, you can map the default port (`50051`) by adding the following to your `docker-compose.yml` file:\n\n    ```yaml\n        ports:\n        - 8080:8080\n        - 50051:50051\n    ```\n\n    \n\n## Instantiation\n\nThe `v4` client is instantiated through the `WeaviateClient` object, which is the main entry point for all API operations.\n\nYou can directly instantiate the client, but in most cases you can use helper functions starting with `_connect_to`, such as `connect_to_local`, `connect_to_wcs`.\n\n\n\n\n\n\nTo configure connection timeout values, see [Timeout values](/developers/weaviate/client-libraries/python#timeout-values).\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Major changes\n\nThe `v4` client API is very different from the `v3` API. Major user-facing changes in the `v4` client include:\n\n- Extensive use of helper classes\n- Interaction with collections\n- Removal of builder patterns\n\n### Helper classes\n\nThe `v4` client introduces an extensive set of helper classes to interact with Weaviate. These classes are used to provide strong typing, and to make the client more user-friendly such as through IDE autocompletion.\n\nTake a look at the examples below.\n\n\n\n\n  \n\n\n\n\n  \n\n\n\n\nIn both of these examples, you can see how the helper classes and methods abstract away the need for manual JSONs or strings.\n\n### Interaction with collections\n\nInteracting with the `client` object for CRUD and search operations have been replaced with the use of collection objects.\n\nThis conveniently removes the need to specify the collection for each operation, and reduces potential for errors.\n\n\n  \n    \n  \n\n  \n    \n  \n\n\nNote here that the collection object can be re-used throughout the codebase.\n\n### Collection creation from JSON\n\nYou can still create a collection from a JSON definition. This may be a useful way to migrate your existing data, for example. You could [fetch an existing definition](../../manage-data/collections.mdx#read-a-single-collection-definition) and then use it to create a new collection.\n\n\n\n### Removal of builder patterns\n\nThe builder patterns for constructing queries have been removed, as they could be confusing and potentially lead to invalid queries.\n\nIn `v4`, queries are constructed using specific methods and its parameters.\n\n\n  \n    \n  \n\n  \n    \n  \n\n\nThis makes it easier to understand and use. Additionally, some parameters typed (e.g. `MetadataQuery`) which makes it easier to use and reduces errors.\n\n## How to migrate your code\n\nThe migration will likely involve significant changes to your codebase. Review the [Python client library documentation](./index.md) to get started, including instantiation details and various submodules.\n\nThen, take a look at the how-to guides for [Managing data](../../manage-data/index.md) and [Queries](../../search/index.md).\n\nIn particular, check out the pages for:\n\n- [Client instantiation](./index.md#instantiate-a-client),\n- [Manage collections](../../manage-data/collections.mdx),\n- [Batch import](../../manage-data/import.mdx)\n- [Cross-reference](../../manage-data/cross-references.mdx)\n- [Basic search](../../search/basics.md)\n- [Similarity search](../../search/similarity.md)\n- [Filters](../../search/filters.md)\n\n\n", "type": "Documentation", "name": "Python V3_v4_migration", "path": "developers/weaviate/client-libraries/python/v3_v4_migration.md", "link": "https://weaviate.io/developers/weaviate/client-libraries/python/v3_v4_migration", "timestamp": "2024-05-08 10:49:39", "reader": "JSON", "meta": {}, "chunks": []}