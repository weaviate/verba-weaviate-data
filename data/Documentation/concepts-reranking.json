{"text": "\n\n## Overview\n\n- API References: GraphQL - Additional properties\n- How-to search: Rerank\n- Modules: reranker-cohere\n- Modules: reranker-transformers\n\nReranking seeks to improve search relevance by reordering the result set returned by a retriever with a different model.\n\nReranking computes a relevance score between the query and each data object, and returns the list of objects sorted from the most to the least relevant. Computing this score for all `(query, data_object)` pairs would typically be prohibitively slow, which is why reranking is used as a second stage after retrieving the relevant objects first.\n\nAs the reranker works on a smaller subset of data after retrieval, different, potentially more computationally expensive approaches can be used to improve search relevance.\n\n## Reranking in Weaviate\n\nWith our reranker modules, you can conveniently perform multi-stage searches without leaving Weaviate.\n\nIn other words, you can perform a search - for example, a vector search - and then use a reranker to re-rank the results of that search. Our reranker modules are compatible with all of vector, bm25, and hybrid searches.\n\n### An example GraphQL query with a reranker\n\nYou can use reranking in a GraphQL query as follows:\n\n```graphql\n{\n  Get {\n    JeopardyQuestion(\n      nearText: {\n        concepts: \"flying\"\n      }\n      limit: 10\n    ) {\n      answer\n      question\n      _additional {\n        distance\n        rerank(\n          property: \"answer\"\n          query: \"floating\"\n        ) {\n          score\n        }\n      }\n    }\n  }\n}\n```\n\nThis query retrieves 10 results from the `JeopardyQuestion` class, using a hybrid search with the query \u201cflying\u201d. It then re-ranks the results using the `answer` property, and the query \u201cfloating\u201d.\n\nYou can specify which `property` of the `JeopardyQuestion` class you want to pass to the reranker. Note that here, the returned `score` will include the score from the reranker.\n\n\n\n\n\n", "type": "Documentation", "name": "concepts-reranking", "path": "developers/weaviate/concepts/reranking.md", "link": "https://weaviate.io/developers/weaviate/concepts/reranking", "timestamp": "2024-02-08 21:21:07", "reader": "JSON", "meta": {}, "chunks": []}