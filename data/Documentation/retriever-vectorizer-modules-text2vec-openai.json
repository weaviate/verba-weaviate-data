{"text": "\n\n## Overview\n\nThe `text2vec-openai` module enables Weaviate to obtain vectors using OpenAI or Azure OpenAI.\n\n- OpenAI\n- Azure OpenAI\n\nKey notes:\n\n- As it uses a third-party API, you will need an API key.\n- **Its usage may incur costs**.\n    - Please check the vendor pricing (e.g. OpenAI pricing page), especially before vectorizing large amounts of data.\n- This module is available on Weaviate Cloud Services (WCS).\n- Enabling this module will enable the `nearText` search operator.\n- The default model is `text-embedding-ada-002`.\n\n\n\n\n\n\n\n## Weaviate instance configuration\n\nThis module is enabled and pre-configured on Weaviate Cloud Services.\n\n### Docker Compose file\n\nTo use `text2vec-openai`, you must enable it in your Docker Compose file (`docker-compose.yml`). You can do so manually, or create one using the Weaviate configuration tool.\n\n#### Parameters\n\n|Parameter|Required|Purpose|\n|:-|:-|:-|\n|`ENABLE_MODULES`|Required|The modules to enable. Include `text2vec-openai` to enable the module.|\n|`DEFAULT_VECTORIZER_MODULE`|Optional|The default vectorizer module. You can set this to `text2vec-openai` to make it the default for all classes.|\n|`OPENAI_APIKEY`|Optional|Your OpenAI API key (if using OpenAI). You can also provide the key at query time.|\n|`AZURE_APIKEY`|Optional|Your Azure OpenAI API key (if using Azure OpenAI). You can also provide the key at query time.|\n\n#### Example\n\nThis configuration enables `text2vec-openai`, sets it as the default vectorizer, and sets various other parameters such as the API key as environment variables.\n\n```yaml\n---\nversion: '3.4'\nservices:\n  weaviate:\n    image: semitechnologies/weaviate:||site.weaviate_version||\n    restart: on-failure:0\n    ports:\n     - 8080:8080\n     - 50051:50051\n    environment:\n      QUERY_DEFAULTS_LIMIT: 20\n      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'\n      PERSISTENCE_DATA_PATH: \"./data\"\n      # highlight-start\n      ENABLE_MODULES: text2vec-openai\n      DEFAULT_VECTORIZER_MODULE: text2vec-openai\n      OPENAI_APIKEY: sk-foobar  # For use with OpenAI. Setting this parameter is optional; you can also provide the key at query time.\n      OPENAI_ORGANIZATION: your-orgname  # For use with OpenAI. Setting this parameter is optional; you can also provide the key at runtime.\n      AZURE_APIKEY: sk-foobar  # For use with Azure OpenAI. Setting this parameter is optional; you can also provide the key at query time.\n      # highlight-end\n      CLUSTER_HOSTNAME: 'node1'\n...\n```\n\n## Class configuration\n\nYou can configure how the module will behave in each class through the Weaviate schema.\n\n### API settings (OpenAI)\n\n#### Parameters\n\n| Parameter | Data type | Required | Default | Purpose |\n| :- | :- | :- | :- | :- |\n| `model` | string | Optional | `ada` | For v3 OpenAI embedding models, the model name. For earlier models, model family, e.g. `ada`. |\n| `dimensions` | int | Optional | `1536` for `text-embedding-3-small``3072` for `text-embedding-3-large` | Number of dimensions. Applicable to v3 OpenAI models only. |\n| `modelVersion` | string | Optional | | Version string, e.g. `003`. |\n| `type` | string | Optional | | Model type. Can be `text` or `code`. |\n| `baseURL` | string | Optional | `https://api.openai.com`|Sets a proxy or other URL instead of the default OpenAI URL.  Use a the protocol domain format: `https://your.domain.com`. |\n\n#### Example\n\nThe following example configures the `Document` class by setting the vectorizer to `text2vec-openai`, model to `ada`, the model version to `002` and the type to `text`:\n\n```json\n{\n  \"classes\": [\n    {\n      \"class\": \"Document\",\n      \"description\": \"A class called document\",\n      // highlight-start\n      \"vectorizer\": \"text2vec-openai\",\n      \"moduleConfig\": {\n        \"text2vec-openai\": {\n          // \"model\": \"ada\",\n          // \"modelVersion\": \"002\",  // Parameter only applicable for `ada` model family and older\n          \"model\": \"text-embedding-3-large\",\n          \"dimensions\": 3072,  // Parameter only applicable for `v3` model family and newer\n          \"type\": \"text\",\n          \"baseURL\": \"https://proxy.yourcompanydomain.com\"  // Optional. Can be overridden by one set in the HTTP header.\n        }\n      },\n      // highlight-end\n    }\n  ]\n}\n```\n\n### API settings (Azure OpenAI)\n\n#### Parameters\n\n|Parameter||Purpose|\n|:-|:-|\n|`resourceName`|Azure resource name|\n|`deploymentId`|Azure deployment ID (your model name)|\n| `baseURL` |Set the endpoint of your Azure Open AI Deployments e.g. `https://eastus.api.cognitive.microsoft.com`|\n\n#### Example\n\n```json\n{\n  \"classes\": [\n    {\n      \"class\": \"Document\",\n      \"description\": \"A class called document\",\n      // highlight-start\n      \"vectorizer\": \"text2vec-openai\",\n      \"moduleConfig\": {\n        \"text2vec-openai\": {\n          \"resourceName\": \"\",\n          \"deploymentId\": \"\",\n        }\n      }\n      // highlight-end\n    }\n  ]\n}\n```\n\n### Vectorization settings\n\nYou can set vectorizer behavior using the `moduleConfig` section under each class and property:\n\n#### Collection level settings\n\n| Parameter | Type | Default | Purpose |\n| :- | :- | :- |\n| `vectorizer` | string | - | Sets the module for vectorization. |\n| `vectorizeClassName`| boolean | `true` | Whether to include the class name during vectorization. |\n\n#### Property level settings\n\n| Parameter | Type | Default | Purpose |\n| :- | :- | :- |\n| `skip` | boolean | `false` | When `true`, does not include the property during vectorization. |\n| `vectorizePropertyName` | boolean | `false` | Whether to include the property name during vectorization. |\n\n#### Example\n\n```json\n{\n  \"classes\": [\n    {\n      \"class\": \"Document\",\n      \"description\": \"A class called document\",\n      \"vectorizer\": \"text2vec-openai\",\n      \"moduleConfig\": {\n        \"text2vec-openai\": {\n          // \"model\": \"ada\",\n          // \"modelVersion\": \"002\",  // Parameter only applicable for `ada` model family and older\n          \"model\": \"text-embedding-3-large\",\n          \"dimensions\": 3072,  // Parameter only applicable for `v3` model family and newer\n          \"type\": \"text\",\n          // highlight-start\n          \"vectorizeClassName\": false\n          // highlight-end\n        }\n      },\n      \"properties\": [\n        {\n          \"name\": \"content\",\n          \"dataType\": [\"text\"],\n          \"description\": \"Content that will be vectorized\",\n          // highlight-start\n          \"moduleConfig\": {\n            \"text2vec-openai\": {\n              \"skip\": false,\n              \"vectorizePropertyName\": false\n            }\n          }\n          // highlight-end\n        }\n      ]\n    }\n  ]\n}\n```\n\n## Query-time parameters\n\nYou can supply parameters at query time by adding it to the HTTP header.\n\n| HTTP Header | Value | Purpose | Note |\n| :- | :- | :- | :- |\n| `\"X-OpenAI-Api-Key\"` | `\"YOUR-OPENAI-API-KEY\"` | OpenAI API key | |\n| `\"X-Azure-Api-Key\"` | `\"YOUR-AZURE-API-KEY\"` | Azure OpenAI API key | |\n| `\"X-OpenAI-Organization\"` | `\"YOUR-OPENAI-ORGANIZATION\"` | OpenAI organization name | Available from version `v1.21.1` |\n| `\"X-OpenAI-BaseURL\"` | `\"YOUR-OPENAI-BASE-URL\"` | OpenAI base URL | Available from version `v1.22.3` Use the protocol domain format: `https://your.domain.com`.  If specified, this will have precedence over the class-level setting. |\n\n## Additional information\n\n### Available models (OpenAI)\n\nYou can use any OpenAI embedding model with `text2vec-openai`.\n\nFor document embeddings, choose from the following embedding models:\n* text-embedding-3\n    * Available dimensions:\n        * `text-embedding-3-large`: `256`, `1024`, `3072` (default)\n        * `text-embedding-3-small`: `512`, `1536` (default)\n* ada\n* babbage\n* davinci\n\n### The following models are now deprecated\n\nSource\n\n* Codex\n* babbage-001\n* davinci-001\n* curie\n\nThe more dimensions a model produces, the larger your data footprint will be. You can estimate the total size of your dataset here.\n\n### API rate limits\n\nSince this module uses your API key, your account's corresponding rate limits will also apply to the module. Weaviate will output any rate-limit related error messages generated by the API.\n\nYou can request to increase your rate limit by emailing OpenAI at `support@openai.com` describing your use case with Weaviate.\n\nThe current rate limit will appear in the error message, as shown below:\n\n```json\n{\n  \"message\": \"Rate limit reached for requests. Limit: 600.000000 / min. Current: 1024.000000 / min. Contact support@openai.com if you continue to have issues.\"\n}\n```\n\n### Import throttling\n\nOne potential solution to rate limiting would be to throttle the import within your application. We include an example below.\n\n\n\n  See code example\n\n\n\n\n\n## Usage example\n\nThis is an example of a `nearText` query with `text2vec-openai`.\n\n\n\n\n\n\n\n", "type": "Documentation", "name": "retriever-vectorizer-modules-text2vec-openai", "path": "developers/weaviate/modules/retriever-vectorizer-modules/text2vec-openai.md", "link": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-openai", "timestamp": "2024-02-08 21:21:43", "reader": "JSON", "meta": {}, "chunks": []}