{"text": "\n\n\n\n\nUse cross-references to establish directional relationships between collections.\n\n\n  \n    Additional information\n  \n\nNotes:\n- Cross-references does not affect object vectors of the source or the target objects.\n- For multi-tenancy collection, you can establish a cross-reference from a multi-tenancy collection object to:\n    - A non-multi-tenancy collection object, or\n    - A multi-tenancy collection object belonging to the same tenant.\n\n\n\n## Define a cross-reference property\n\nInclude the reference property in the collection definition before adding cross-references to it.\n\n\n  \n    \n  \n  \n    \n  \n\n\n## Add a cross-reference property\n\nIt is also possible to add a cross-reference property to an existing collection definition.\n\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n## Add a one-way cross-reference\n\nSpecify the required id and properties for the source and the target.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n## Add two-way cross-references\n\nThis requires adding reference properties in both directions, and adding two cross-references per object pair (`from` A -> `to` B and `from` B -> `to` A).\n\nCreate the `JeopardyCategory` collection:\n\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\nCreate the `JeopardyQuestion` collection including the reference property to `JeopardyCategory`:\n\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\nModify `JeopardyCategory` to add the reference to `JeopardyQuestion`:\n\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\nAnd add the cross-references:\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n## Add multiple (one-to-many) cross-references\n\nWeaviate allows creation of multiple cross-references from one source object.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n## Delete a cross-reference\n\nDeleting a cross-reference with the same parameters used to define the cross-reference.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n  \n    What happens if the target object is deleted?\n  \n\nWhat happens if the `to` object is deleted?\nIf an object is deleted, cross-references to it will be left intact. A Get query using the inline fragment syntax will correctly retrieve only fields in the existing cross-references objects, but getting the object by ID will show all cross-references, whether the objects they point to exist or not.\n\n\n\n\n## Update a cross-reference\n\nThe targets of a cross-reference can be updated.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n## Related pages\n\n- References: REST - /v1/objects\n- Retrieve the object to retrieve its cross references.\n- Retrieve the cross-reference as a part of a query.\n\n\n\n", "type": "Documentation", "name": "manage-data-cross-references", "path": "developers/weaviate/manage-data/cross-references.mdx", "link": "https://weaviate.io/developers/weaviate/manage-data/cross-references", "timestamp": "2024-02-08 20:22:58", "reader": "JSON", "meta": {}, "chunks": []}