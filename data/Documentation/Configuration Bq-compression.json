{"text": "\nBQ is available for the [`flat` index](../concepts/vector-index.md#flat-index) type from `v1.23` onwards and for the [`hnsw` index](../concepts/vector-index.md#hnsw-index)  type from `v1.24`.\n\nBinary quantization (BQ) is a vector compression technique that can reduce the size of a vector.\n\nTo use BQ, enable it as shown below and add data to the collection.\n\n\n  Additional information\n\n- How to [set the index type](../manage-data/collections.mdx#ve)\n\n\n\n\n## Simple BQ configuration\n\nEach collection can be configured to use BQ compression. BQ must be enabled at collection creation time, before data is added to it.\n\nThis can be done by setting the `vector_index_config` of the collection to enable BQ compression.\n\n\n  \n      \n  \n\n  \n      \n  \n\n  \n      \n  \n\n  \n      \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n## BQ with custom settings\n\nThe following parameters are available for BQ compression, under `vectorIndexConfig`:\n\n| Parameter | Type | Default | Details |\n| :-- | :-- | :-- | :-- |\n| `bq` : `enabled` | boolean | `false` | Enable BQ. Weaviate uses binary quantization (BQ) compression when `true`.   The Python client v4 does not use the `enabled` parameter. To enable BQ with the v4 client, set a `quantizer` in the collection definition. |\n| `bq` : `rescoreLimit` | integer | -1 | The minimum number of candidates to fetch before rescoring. |\n| `bq` : `cache` | boolean | `false` | Whether to use the vector cache. |\n| `vectorCacheMaxObjects` | integer | `1e12` | Maximum number of objects in the memory cache. By default, this limit is set to one trillion (`1e12`) objects when a new collection is created. For sizing recommendations, see [Vector cache considerations](../concepts/vector-index.md#vector-cache-considerations). |\n\n\nFor example:\n\n\n  \n      \n  \n\n  \n      \n  \n\n  \n      \n  \n\n  \n      \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Multiple vectors\n\n\n\nSimilarly, compression must be enabled independently for each vector. The procedure varies slightly by client language, but in each case the idea is the same. Each vector is independent and can use [PQ](/weaviate/configuration/pq-compression.md), [BQ](/weaviate/configuration/bq-compression.md), or no compression.\n\n## Related pages\n- [Configuration: Vector index](../config-refs/schema/vector-index.md)\n- [Concepts: Vector index](../concepts/vector-index.md)\n- [Concepts: Vector quantization](../concepts/vector-quantization.md)\n- [Tutorial: Schema](/developers/weaviate/starter-guides/schema)\n\n\n", "type": "Documentation", "name": "Configuration Bq-compression", "path": "developers/weaviate/configuration/bq-compression.md", "link": "https://weaviate.io/developers/weaviate/configuration/bq-compression", "timestamp": "2024-05-08 10:50:00", "reader": "JSON", "meta": {}, "chunks": []}