{"text": "\n\n\n\n## Overview\n\nFollow these examples to migrate data manually when using a backup is not possible. They cover all permutations between:\n\n- a single-tenancy collection (Collection), and\n- a tenant in a multi-tenancy collection (Tenant).\n\n\n  Additional information\n\n  The examples use two different Weaviate instances, exposed through different ports. The same process can be used for two different instances as well.\n\n  Cross-references in Weaviate are properties. As such, you can retrieve cross-reference in one of two ways:\n  1. Retrieve the object that it belongs to.\n  1. Retrieve the cross-reference as a part of a query.\n\n\n\n\n  What about cross-references?\n\nThese scripts should migrate cross-references as well.\n\n\nCross-references are properties. As such, these cursor-based exports will include them.\nDuring restoration, restore the cross-referenced (i.e. \"to\") object first, then the object that contains the cross-reference (i.e. \"from\" object).\n\n\n\n## Collection \u2192 Collection\n\n#### Step 1: Create the target collection(s)\n\nCreate a collection (e.g. `WineReview`) at the target instance, matching the collection (e.g. `WineReview`) at the source instance.\n\n\n  \n    \n  \n  \n    \n  \n\n\n#### Step 2: Migrate the data\n\nMigrate:\n- The `source collection` data in the `client_src` instance\n- to `target collection` in the `client_tgt` instance\n\n\n  \n    \n  \n  \n    \n        The migrate_data_from_weaviate_to_weaviate function is called to migrate the data.\n        \n    \n    \n  \n\n\n## Collection \u2192 Tenant\n\n#### Step 1: Create the target collection(s)\n\nCreate a collection (e.g. `WineReview`) at the target instance, matching the collection (e.g. `WineReview`) at the source instance, and enable multi-tenancy for the target collection.\n\n\n  \n    \n  \n  \n    \n  \n\n\n#### Step 2: Create the tenant(s)\n\nAdd tenants at the target instance before adding data objects.\n\n\n  \n    \n  \n  \n    \n  \n\n\n#### Step 3: Migrate the data\n\nMigrate:\n- The `source collection` data in the `client_src` instance\n- to `target tenant` data from `target collection` in the `client_tgt` instance\n\n\n  \n    \n  \n  \n    \n        The migrate_data_from_weaviate_to_weaviate function is called to migrate the data.\n        \n    \n    \n  \n\n\n## Tenant \u2192 Collection\n\n#### Step 1: Create the target collection(s)\n\nCreate a collection (e.g. `WineReview`) at the target instance, matching the collection (e.g. `WineReview`) at the source instance, and enable multi-tenancy for the target collection.\n\n\n  \n    \n  \n  \n    \n  \n\n\n#### Step 2: Migrate the data\n\nMigrate:\n- The `source tenant` data from `source collection` in the `client_src` instance\n- to `target collection` in the `client_tgt` instance\n\n\n  \n    \n  \n  \n    \n        The migrate_data_from_weaviate_to_weaviate function is called to migrate the data.\n        \n    \n    \n  \n\n\n## Tenant \u2192 Tenant\n\n#### Step 1: Create the target collection(s)\n\nCreate a collection (e.g. `WineReview`) at the target instance, matching the collection (e.g. `WineReview`) at the source instance including enabling multi-tenancy.\n\n\n  \n    \n  \n  \n    \n  \n\n\n#### Step 2: Create the tenant(s)\n\nAdd tenants at the target instance before adding data objects.\n\n\n  \n    \n  \n  \n    \n  \n\n\n#### Step 3: Migrate the data\n\nMigrate:\n- The `source tenant` data from `source collection` in the `client_src` instance\n- to `target tenant` data from `target collection` in the `client_tgt` instance\n\n\n  \n    \n  \n  \n    \n        The migrate_data_from_weaviate_to_weaviate function is called to migrate the data.\n        \n    \n    \n  \n\n\n## Related pages\n\n- Cursor API\n- Multi-tenancy operations\n\n\n\n", "type": "Documentation", "name": "manage-data-migrate", "path": "developers/weaviate/manage-data/migrate.mdx", "link": "https://weaviate.io/developers/weaviate/manage-data/migrate", "timestamp": "2024-02-08 20:23:02", "reader": "JSON", "meta": {}, "chunks": []}