{"text": "\n\nWeaviate provides the necessary APIs to iterate through all your data. This is useful when you want to manually copy/migrate your data (and vector embeddings) from one place to another.\n\nThis is done with the help of the `after` operator, also called the [cursor API](../api/graphql/additional-operators.md#cursor-with-after).\n\nThe new API clients (currently supported by the Python Client v4), encapsulate this functionality as an `Iterator`.\n\n## Read object properties and ids\n\nThe following code iterates through all objects, providing the properties and id for each object.\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Read all objects including vectors\n\nRead through all data including the vectors. (Also applicable where [named vectors](../config-refs/schema/multi-vector.md) are used.)\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Read all objects - Multi-tenant collections\n\nIterate through all tenants and read data for each.\n\nFor classes where [multi-tenancy](../concepts/data.md#multi-tenancy) is enabled, you need to specify the tenant name when reading or creating objects. See [Manage data: multi-tenancy operations](./multi-tenancy.md) for details.\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Related pages\n\n- [Connect to Weaviate](/developers/weaviate/starter-guides/connect.mdx)\n- [How-to: Read objects](./read.mdx)\n- [References: GraphQL - Additional Operators](../api/graphql/additional-operators.md#cursor-with-after)\n- [Manage data: multi-tenancy operations](./multi-tenancy.md)\n\n\n", "type": "Documentation", "name": "Manage-data Read-all-objects", "path": "developers/weaviate/manage-data/read-all-objects.mdx", "link": "https://weaviate.io/developers/weaviate/manage-data/read-all-objects", "timestamp": "2024-05-08 10:50:15", "reader": "JSON", "meta": {}, "chunks": []}