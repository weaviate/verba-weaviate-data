{"text": "\n\n## Overview\n\n\nThe `text2vec-aws` module enables Weaviate to obtain vectors using AWS Bedrock.\n\nKey notes:\n\n- As it uses a third-party API, you will need to provide AWS API credentials.\n- You must set an available & supported model.\n    - There is no default model set for this module.\n    - You must request access to the desired modules from AWS Bedrock so it becomes available in your account.\n    - Then, set an available model in your class configuration.\n    - Not all AWS Bedrock models are supported. See the Supported models section for more information.\n- Its usage may incur costs.\n    - Please check the AWS Bedrock pricing page, especially before vectorizing large amounts of data.\n- This module is available on Weaviate Cloud Services (WCS).\n- Enabling this module will enable the `nearText` search operator.\n- Set the appropriate distance metric in your class configuration, depending on the model used.\n\n\n\n\n### API Authentication\n\nYou must provide access key based AWS credentials to use the API, including an AWS access key and a corresponding AWS secret access key. You can set them as environment variables, or provide them at query time.\n\n\n## Weaviate instance configuration\n\nThis module is not available on Weaviate Cloud Services.\n\n### Docker Compose file\n\nTo use `text2vec-aws`, you must enable it in your Docker Compose file (`docker-compose.yml`). You can do so manually, or create one using the Weaviate configuration tool.\n\n#### Parameters\n\n- `ENABLE_MODULES` (Required): The modules to enable. Include `text2vec-aws` to enable the module.\n- `DEFAULT_VECTORIZER_MODULE` (Optional): The default vectorizer module. You can set this to `text2vec-aws` to make it the default for all classes.\n- `AWS_ACCESS_KEY` or `AWS_ACCESS_KEY_ID` (Optional): Your AWS access key. You can also provide the key at query time.\n- `AWS_SECRET_KEY` or `AWS_SECRET_ACCESS_KEY` (Optional): Your AWS secret access key. You can also provide the key at query time.\n\n#### Example\n\nThis configuration enables `text2vec-aws`, sets it as the default vectorizer, and sets the AWS authentication credentials.\n\n```yaml\n---\nversion: '3.4'\nservices:\n  weaviate:\n    image: semitechnologies/weaviate:||site.weaviate_version||\n    restart: on-failure:0\n    ports:\n     - 8080:8080\n     - 50051:50051\n    environment:\n      QUERY_DEFAULTS_LIMIT: 20\n      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'\n      PERSISTENCE_DATA_PATH: \"./data\"\n      # highlight-start\n      ENABLE_MODULES: text2vec-aws\n      DEFAULT_VECTORIZER_MODULE: text2vec-aws\n      AWS_ACCESS_KEY: sk-foobar  # Optional. Can be set at query time.\n      AWS_SECRET_KEY: sk-foobar  # Optional. Can be set at query time.\n      # highlight-end\n      CLUSTER_HOSTNAME: 'node1'\n...\n```\n\n\n## Class configuration\n\nYou can configure how the module will behave in each class through the Weaviate schema.\n\n### API settings\n\n#### Parameters\n\n| Parameter | Required | Default | Purpose |\n| :- | :- | :- | :- |\n| `model` | No | NONE | The model to use. You must provide an available & supported model name. |\n| `region` | Yes | NONE | AWS region name, e.g. `us-east-1`. |\n\n#### Example\n\nThe following example configures the `Document` class by setting the vectorizer to `text2vec-aws`, distance metric to `cosine`, model to `amazon.titan-embed-text-v1` and the AWS region to `us-east-1`.\n\n```json\n{\n  \"classes\": [\n    {\n      \"class\": \"Document\",\n      \"description\": \"A class called document\",\n      // highlight-start\n      \"vectorizer\": \"text2vec-aws\",\n      \"vectorIndexConfig\": {\n        \"distance\": \"cosine\"\n      },\n      \"moduleConfig\": {\n        \"text2vec-aws\": {\n          \"model\": \"amazon.titan-embed-text-v1\",    // REQUIRED\n          \"region\": \"us-east-1\"                     // REQUIRED\n        }\n      },\n      // highlight-end\n    }\n  ]\n}\n```\n\n### Vectorization settings\n\nYou can set vectorizer behavior using the `moduleConfig` section under each class and property:\n\n#### Class-level\n\n- `vectorizer` - what module to use to vectorize the data.\n- `vectorizeClassName` \u2013 whether to vectorize the class name. Default: `true`.\n\n#### Property-level\n\n- `skip` \u2013 whether to skip vectorizing the property altogether. Default: `false`\n- `vectorizePropertyName` \u2013 whether to vectorize the property name. Default: `false`\n\n#### Example\n\n```json\n{\n  \"classes\": [\n    {\n      \"class\": \"Document\",\n      \"description\": \"A class called document\",\n      \"vectorizer\": \"text2vec-aws\",\n      \"vectorIndexConfig\": {\n        \"distance\": \"cosine\"\n      },\n      \"moduleConfig\": {\n        \"text2vec-aws\": {\n          \"model\": \"amazon.titan-embed-text-v1\",    // REQUIRED\n          \"region\": \"us-east-1\"                     // REQUIRED\n          // highlight-start\n          \"vectorizeClassName\": false\n          // highlight-end\n        }\n      },\n      \"properties\": [\n        {\n          \"name\": \"content\",\n          \"dataType\": [\"text\"],\n          \"description\": \"Content that will be vectorized\",\n          // highlight-start\n          \"moduleConfig\": {\n            \"text2vec-aws\": {\n              \"skip\": false,\n              \"vectorizePropertyName\": false\n            }\n          }\n          // highlight-end\n        }\n      ]\n    }\n  ]\n}\n```\n\n\n## Query-time parameters\n\nYou can supply parameters at query time by adding it to the HTTP header.\n\n| HTTP Header | Value | Purpose | Note |\n| :- | :- | :- | :- |\n| `\"X-AWS-Access-Key\"` | `\"YOUR-AWS-API-ACCESS-KEY\"` | Your AWS access key. | |\n| `\"X-AWS-Secret-Key\"` | `\"YOUR-AWS-API-SECRET-KEY\"` | Your AWS secret access key | |\n\n\n## Additional information\n\n### Supported models\n\nYou can use any of the following models with `text2vec-aws`:\n\n- `amazon.titan-embed-text-v1`\n- `cohere.embed-english-v3`\n- `cohere.embed-multilingual-v3`\n\n### Distance metric\n\nYou can change the distance metric used for vector searches. In most cases, you can start with `cosine` distances. You can see a list of supported distance metrics here.\n\nConsult the documentation of the model you are using to see which distance metrics are appropriate.\n\n### API rate limits\n\nSince this module uses your credentials, any API limits relevant to your account will also apply to the module. Weaviate will output any rate-limit related error messages generated by the API.\n\n### Import throttling\n\nOne potential solution to rate limiting would be to throttle the import within your application. We include an example below.\n\n\n\n  See code example\n\n\n\n\n\n\n## Usage example\n\nThis is an example of a `nearText` query with `text2vec-aws`.\n\n\n\n\n\n\n\n", "type": "Documentation", "name": "retriever-vectorizer-modules-text2vec-aws", "path": "developers/weaviate/modules/retriever-vectorizer-modules/text2vec-aws.md", "link": "https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-aws", "timestamp": "2024-02-08 20:23:18", "reader": "JSON", "meta": {}, "chunks": []}