{"text": "\n- WCS Quickstart\n- References: Configuration\n\n## Overview\n\nThis section shows you available options for running Weaviate, and how to install and configure Weaviate with each option.\n\n## How to run Weaviate\n\nYou can run Weaviate with any of the following methods:\n\n* Weaviate Cloud Services \u2013 Use this managed Weaviate service for both development and production environments.\n* Docker Compose \u2013 Opt for this containerized deployment method primarily for development projects.\n* Kubernetes \u2013 Ideal for scalable, containerized deployments, this method is typically employed for production setups.\n* Embedded Weaviate - For in-line instantiation from a client; currently in experimental stage and great for evaluation.\n* AWS Marketplace - Conveniently deploy directly from the AWS Marketplace.\n\nThe Weaviate library is identical regardless of whether it is used via Weaviate Cloud Services (WCS) or by downloading an open source version. The only difference that WCS manages your Weaviate instance for you and comes with a specific SLA, whereas Weaviate open source comes with a BSD-3 license.\n\nBoth Docker Compose and Kubernetes setups use a yaml file for customizing Weaviate instances, typically called `docker-compose.yml` or `values.yaml` respectively. These files will be referred to throughout the documentation as `configuration yaml files`.\n\nIf self-hosting, we recommend starting with Docker and gaining familiarity with Weaviate and its configurations. You can later apply this knowledge when you are creating your Helm charts.\n\n### Run an unreleased version\n\nYou can run Weaviate with `docker compose`, building your own container off the `master` branch. Note that this may not be an officially release, and may contain bugs.\n\n```sh\ngit clone https://github.com/weaviate/weaviate.git\ncd weaviate\ndocker build --target weaviate -t name-of-your-weaviate-image .\n```\n\nThen, make a `docker-compose.yml` file with this new image. For example:\n\n```yml\nversion: '3.4'\nservices:\n  weaviate:\n    image: name-of-your-weaviate-image\n    ports:\n      - 8080:8080\n    environment:\n      CONTEXTIONARY_URL: contextionary:9999\n      QUERY_DEFAULTS_LIMIT: 25\n      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'\n      PERSISTENCE_DATA_PATH: './data'\n      ENABLE_MODULES: 'text2vec-contextionary'\n      DEFAULT_VECTORIZER_MODULE: 'text2vec-contextionary'\n      AUTOSCHEMA_ENABLED: 'false'\n  contextionary:\n    environment:\n      OCCURRENCE_WEIGHT_LINEAR_FACTOR: 0.75\n      EXTENSIONS_STORAGE_MODE: weaviate\n      EXTENSIONS_STORAGE_ORIGIN: http://weaviate:8080\n      NEIGHBOR_OCCURRENCE_IGNORE_PERCENTILE: 5\n      ENABLE_COMPOUND_SPLITTING: 'false'\n    image: semitechnologies/contextionary:en0.16.0-v1.2.1\n```\n\nAfter the build is complete, you can run this Weaviate build with docker compose:\n\n```bash\ndocker compose up\n```\n\n\n\n\n", "type": "Documentation", "name": "weaviate-installation", "path": "developers/weaviate/installation/index.md", "link": "https://weaviate.io/developers/weaviate/installation", "timestamp": "2023-11-13 10:40:47", "reader": "JSON", "meta": {}, "chunks": []}