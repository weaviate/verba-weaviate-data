{"text": "\n\n\nMulti-tenancy isolates data between tenants (typically end users) in a Weaviate instance, for example in a SaaS application. Each tenant is a separate shard in Weaviate.\n\n\n  \n    Multi-tenancy availability\n  \n\n- Multi-tenancy added in `v1.20`\n- (Experimental) Tenant activity status setting added in `v1.21`\n\n\n\n## Enable multi-tenancy\n\n\nMulti-tenancy is disabled by default. To enable it, set the `multiTenancyConfig` variable in the collection definition as shown below:\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n## Add tenant(s)\n\nAdd tenants to a collection (`MultiTenancyCollection`) with a name (e.g. `tenantA`) and an optional tenant activity status as `HOT`(active, default) or `COLD` (inactive).\n\n\n  \n    Additional information\n  \n\nTenant status is available from Weaviate `1.21` onwards.\n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## List tenant(s)\n\nList existing tenants in a collection (e.g.`MultiTenancyCollection`):\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Delete tenant(s)\n\nDelete one or more existing tenants in a collection (e.g. `MultiTenancyCollection`) and tenant names (e.g. `[\"tenantB\", \"tenantX\"]`).\n\nNon-existing tenants are ignored.\n\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n## Update tenant activity status\n\nUpdate existing tenants' activity status to active (`HOT`) or inactive (`COLD`).\n\n\n\n  \n    \n  \n\n\n\n  \n    Additional information\n  \n\n- This feature was added in `v1.21`\n- Other client code examples coming soon\n- For now, please send a [PUT request through the REST API endpoint](/developers/weaviate/api/rest#tag/schema) to update the tenant activity status.\n\n\n\n\n## CRUD operations\n\nMulti-tenancy collections require tenant name (e.g. `tenantA`) with each CRUD operation, as shown in the object creation example below.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n## Search queries\n\nMulti-tenancy collections require the tenant name (e.g. `tenantA`) with each `Get` and `Aggregate` query operation.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n## Cross-references\n\nA cross-reference can be added from a multi-tenancy collection object to:\n- A non-multi-tenancy collection object, or\n- An object belonging to the same tenant.\n\nMulti-tenancy collections require the tenant name (e.g. `tenantA`) when creating, updating or deleting cross-references.\n\n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n\n\n## Related pages\n\n- [Connect to Weaviate](/developers/weaviate/starter-guides/connect.mdx)\n- [How to: Configure a schema](../manage-data/collections.mdx)\n- [References: REST API: Schema](/developers/weaviate/api/rest#tag/schema)\n- [Concepts: Data Structure: Multi-tenancy](../concepts/data.md#multi-tenancy)\n\n\n", "type": "Documentation", "name": "Manage-data Multi-tenancy", "path": "developers/weaviate/manage-data/multi-tenancy.md", "link": "https://weaviate.io/developers/weaviate/manage-data/multi-tenancy", "timestamp": "2024-05-08 10:50:14", "reader": "JSON", "meta": {}, "chunks": []}