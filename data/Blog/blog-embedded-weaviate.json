{"text": "\n\n## 1. Install the client library\n\nThe Python and TypeScript client libraries support running Weaviate embedded on Linux, and starting with versions 3.21.0 and 1.2.0 respectively, on macOS as well.\n\n\n  \n\n  ```bash\n  pip install weaviate-client  --upgrade\n  ```\n\n  \n\n  \n\n  ```bash\n  npm install weaviate-ts-embedded typescript ts-node jest  # also install support for TypeScript and Jest testing\n  ```\n\n  \n\n\n\n## 2. Run the code\n\n\n  \n\n  Save as `embedded.py` and run `python embedded.py`:\n  \n\n  \n  \n\n  \n\n  Save as `embedded.ts` and run `node --loader=ts-node/esm embedded.ts`:\n  \n\n  \n  \n\n\n\n##  How does this work?\n\nEssentially, what happens behind the scenes is that the client library downloads the server binary, spawns it in a separate process, connects to it, then terminates it on exit. The data is persisted, so you can use it from future invocations, or you can transfer it to another instance.\n\nYou can learn more about running Weaviate locally from client code on the Embedded Weaviate page.\n\n\n##  Use cases\n\nWhat can you do with Embedded Weaviate? Quite a few things!\n\nFirst off, you can get started very quickly with Weaviate on your local machine, without having to explicitly download, install or instantiate a server.\n\n\n### Jupyter notebooks\n\nYou can also use Embedded Weaviate from Jupyter notebooks, including on Google Colaboratory. Here is the example above as Google Colab notebook.\n\n  Colab screenshot\n\n### Use Weaviate in CI/CD pipelines\n\nYou can use Embedded Weaviate in automated tests, where you can run integration tests without having to manage a separate server instance. Here is the example above slightly modified to perform similarity search and test that the added object was found.\n\n\n  \n\n  Save as `embedded_test.py` and run `pytest`. (If you don't have pytest, run `pip install pytest`.)\n  \n\n  \n  \n\n  \n\n  Save as `embedded_test.ts` and run `npx jest`:\n  \n\n  \n  \n\n\n\nHave you found other use cases for embedded Weaviate? Let us know in the comments below!\n\n\nimport WhatNext from '/_includes/what-next.mdx'\n\n\n", "type": "Blog", "name": "blog-embedded-weaviate", "path": "blog/2023-06-06-embedded-weaviate/index.mdx", "link": "https://weaviate.io/blog/embedded-local-weaviate", "timestamp": "2024-02-08 21:22:44", "reader": "JSON", "meta": {}, "chunks": []}