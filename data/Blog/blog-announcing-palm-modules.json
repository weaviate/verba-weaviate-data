{"text": "\nWe are thrilled to announce two brand new Weaviate modules that will help you to get the most out Google's new PaLM large language model (LLM).\n\nThese new modules are:\n- `text2vec-palm` for generating vector embeddings and running semantic (`nearText`) queries, and\n- `generative-palm` for generative search.\n\n\nThese modules are available to all Weaviate users as of **today**, with the release of Weaviate version `v1.19.1`. They integrate the new Vertex PaLM API with Weaviate, allowing you to hit the ground running straight away with the latest in LLM and vector database technologies.\n\n##  What is PaLM?\n\nThe Pathways Language Model (or `PaLM`) is Google\u2019s own LLM. According to Google, PaLM was designed to generalize across domains and tasks while being highly efficient.\n\nYou can read more about in this blog or this paper, but some of the highlights from these articles are that PaLM:\n- Contains 540-billion \ud83e\udd2f parameters,\n- Is a dense decoder-only Transformer model, and\n- Was trained using a combination of English and multilingual datasets.\n\nDon't take our word for it - take a look at these demo snippets from Google's blog.\n\nImage\n\n> Edit: We now have more details on the PaLM 2 family of models, which the API is based on! Read about it here. In the blog, Google especially highlights improvements in multilingual, reasoning and coding capabilities.\n\n###  What can the Vertex PaLM API do?\n\nBeing an LLM, PaLM can perform numerous tasks, from question-answering, sentence-completion, reading comprehension tasks, common-sense reasoning tasks and more.\n\nAdditionally, it can perform multi-lingual NLP tasks reflecting its dataset. What's more, you can use Google's Vertex AI PaLM API to test, customize, and deploy instances of Google's LLMs.\n\nIn other words, you can not only use PaLM off-the-shelf, but also customize the foundation model to suit **your** needs.\n\n## PaLM  Weaviate\n\nYou can use Weaviate with the Vertex PALM API\n\nAnd we are excited to tell you about the 'text2vec-palm` and 'generative-palm' modules. These modules will help you to bring the power of the newest LLM on the block to the, *ahem*, `PaLM` of your hand - or at least, to your Weaviate instance.\n\n###  Embeddings with `text2vec-palm`\n\nThe `text2vec-palm` module can use a PaLM model to convert text to vector embeddings that represent their meaning.\n\nSo, you can use the `text2vec-palm` module to build a Weaviate database using PaLM-derived vectors for text objects, and perform lightning-fast searches.\n\nThe PaLM model used, `textembedding-gecko-001`, takes a maximum of 3,072 input tokens, and outputs 768-dimensional vector embeddings.\n\nPlease note that according to Google, the embedding endpoint does *not* support fine-tuning.\n\n###  Generative search with `generative-palm`\n\nThe `generative-palm` module is another exciting development for Weaviate and Google Cloud / Vertex AI users.\n\nOur generative search modules work in two stages. First, a search is performed in Weaviate, and then a generative model such as PaLM is called to action, whereby the results are sent to prompt the LLM (PaLM in this case).\n\nIn other words - Weaviate can not only find the right data object for you, it can find it, and send it to PaLM to answer questions about it, expand upon it, summarize it, or otherwise transform it as you see fit.\n\nAnd remember that the Vertex PaLM API allows further fine-tuning of your PaLM model? It means you can do all this with an LLM that has been tuned to your use case, such as your task, or domain.\n\nThe base PaLM model for generative search is `text-bison-001`, which has the following properties:\n\n- Max input token: 8,192\n- Max output tokens: 1,024\n- Training data: Up to Feb 2023\n\n##  Want to try it out?\n\nYou can read more about how to use these modules in our documentation! See the pages for:\n\n- `text2vec-palm`, and\n- `generative-palm`.\n\nimport WhatNext from '/_includes/what-next.mdx'\n\n\n\n", "type": "Blog", "name": "blog-announcing-palm-modules", "path": "blog/2023-05-10-announcing-palm-modules/index.mdx", "link": "https://weaviate.io/blog/announcing-palm-modules", "timestamp": "2023-11-13 10:42:20", "reader": "JSON", "meta": {}, "chunks": []}